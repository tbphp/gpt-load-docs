{
  "metadata": {
    "title": "GPT-Load - High-Performance AI API Load Balancer",
    "description": "Enterprise-grade AI API transparent proxy service that preserves native API formats of AI service providers. Provides key rotation, multi-group management, load balancing for stable and reliable AI application proxy services.",
    "keywords": "GPT, OpenAI, API, transparent proxy, load balancing, key rotation, Go, high performance",
    "pages": {
      "home": {
        "title": "GPT-Load - AI API Load Balancer & Management Platform",
        "description": "High-performance AI API load balancer and management platform supporting multiple AI models, intelligent routing, and observability monitoring"
      },
      "docs": {
        "title": "Quick Start - GPT-Load Documentation",
        "description": "Deploy and configure GPT-Load AI API load balancing platform in a few simple steps"
      },
      "architecture": {
        "title": "System Architecture - GPT-Load Documentation",
        "description": "Deep dive into GPT-Load's distributed architecture design, core components and technical implementation"
      },
      "configuration": {
        "title": "Configuration - GPT-Load Documentation",
        "description": "Detailed GPT-Load configuration options including environment variables, database, cache settings"
      },
      "deployment": {
        "title": "Deployment Guide - GPT-Load Documentation",
        "description": "GPT-Load deployment solutions: Docker, Kubernetes, source code deployment guides"
      },
      "channels": {
        "title": "Channel Management - GPT-Load Documentation",
        "description": "GPT-Load supported AI service provider channel configuration and management guide"
      },
      "integrations": {
        "title": "Third-party Integrations - GPT-Load Documentation",
        "description": "GPT-Load integration configuration guide with various third-party applications and tools"
      }
    },
    "docs": {
      "title": "Documentation",
      "description": "Complete GPT-Load documentation including deployment guides, configuration instructions, and architecture design",
      "introduction": "Introduction",
      "introductionDesc": "Learn about GPT-Load's core features and design philosophy",
      "deployment": "Deployment Guide",
      "deploymentDesc": "Detailed GPT-Load deployment steps and configuration instructions",
      "configuration": "Configuration Management",
      "configurationDesc": "GPT-Load configuration options and best practices"
    }
  },
  "navigation": {
    "home": "Home",
    "docs": "Documentation",
    "github": "GitHub",
    "sponsor": "Sponsor",
    "logoAlt": "GPT-Load Logo",
    "toggleMenu": "Toggle mobile menu"
  },
  "hero": {
    "title": "GPT-Load",
    "subtitle": "High-Performance AI API Transparent Proxy Service",
    "description": "Enterprise-grade AI API transparent proxy service that fully preserves the native API format of various AI service providers. Provides key rotation, multi-group management, load balancing, and other features to offer stable and reliable proxy services for your AI applications.",
    "quickStart": "Quick Start",
    "documentation": "Documentation",
    "githubRepo": "GitHub Repository"
  },
  "architecture": {
    "title": "Architecture Design",
    "subtitle": "High-performance, scalable architecture design",
    "keyManagement": {
      "title": "Key Management",
      "description": "Support multi-key rotation with intelligent failover"
    },
    "loadBalancing": {
      "title": "Load Balancing",
      "description": "Multiple load balancing strategies to ensure service stability"
    },
    "monitoring": {
      "title": "Monitoring & Alerts",
      "description": "Real-time service monitoring for timely issue detection"
    }
  },
  "quickStart": {
    "title": "Quick Start",
    "subtitle": "Launch GPT-Load in 3 Steps",
    "description": "Deploy quickly with Docker Compose, including complete database and cache services",
    "step1": {
      "title": "1. Clone Project",
      "description": "Download complete project code from GitHub"
    },
    "step2": {
      "title": "2. Configure Environment",
      "description": "Copy and edit environment configuration file"
    },
    "step3": {
      "title": "3. Start Service",
      "description": "One-click startup with Docker Compose"
    }
  },
  "cta": {
    "title": "Get Started with GPT-Load Now",
    "description": "Deploy in minutes and start enjoying high-performance AI API proxy services",
    "getStarted": "Quick Deploy",
    "learnMore": "View Documentation",
    "sponsor": "Sponsor"
  },
  "footer": {
    "description": "High-performance AI gateway providing unified load balancing and key management for multiple large model services.",
    "product": "Product",
    "community": "Community",
    "resources": "Resources",
    "quickLinks": "Quick Links",
    "support": "Support",
    "links": {
      "docs": "Documentation",
      "changelog": "Changelog",
      "sponsor": "Sponsor",
      "github": "GitHub",
      "issues": "Issues",
      "telegram": "Telegram",
      "standalone": "Standalone",
      "cluster": "Cluster"
    },
    "copyright": "© {year} GPT-Load. Released under the <licenseLink>MIT License</licenseLink>."
  },
  "docs": {
    "quickStart": "Quick Start",
    "introduction": "Introduction",
    "deployment": {
      "title": "Deployment Guide",
      "standalone": "Standalone",
      "source": "Source Code",
      "cluster": "Cluster",
      "clawCloud": "Claw Cloud"
    },
    "configuration": {
      "title": "Configuration",
      "environment": "Environment Variables",
      "project": "Project Config",
      "management": "Management Config",
      "cloudflare": "Cloudflare AI Gateway"
    },
    "architecture": {
      "title": "Architecture",
      "keyManagement": "Key Management",
      "performance": "Performance",
      "routing": "Routing Strategy"
    },
    "channels": "Channel Support",
    "integrations": {
      "title": "Integrations",
      "cherry": "Cherry Studio",
      "claude": "Claude Code Router",
      "newapi": "New API",
      "roocode": "Roo Code",
      "gemini": "Gemini OpenAI"
    },
    "cluster": "Cluster Mode",
    "sponsor": "Sponsor"
  },
  "features": {
    "title": "Core Technical Features",
    "subtitle": "Enterprise-grade architectural design, optimized for production environments",
    "items": [
      {
        "title": "High-Performance Architecture",
        "description": "Developed with Go 1.23+, zero-copy streaming, goroutine concurrency model, supporting high-concurrency processing",
        "technical": "Go Goroutines + HTTP/2 Connection Multiplexing"
      },
      {
        "title": "Transparent Proxy",
        "description": "Fully preserves native API formats, allowing access to multiple AI services without code modification",
        "technical": "OpenAI + Gemini + Anthropic Support"
      },
      {
        "title": "Intelligent Key Management",
        "description": "Group management, dynamic rotation, and automatic retries to ensure high service availability",
        "technical": "Redis Cache + Failover Mechanism"
      },
      {
        "title": "Load Balancing",
        "description": "Multiple upstream support, weight configuration, and health checks for intelligent routing to available nodes",
        "technical": "Weighted Round-Robin + Health Checks"
      },
      {
        "title": "Hot-Reload Configuration",
        "description": "Three-layer configuration system (environment, system, group) with support for hot updates",
        "technical": "Environment → System → Group Settings"
      },
      {
        "title": "Cluster Support",
        "description": "Master/slave architecture with a stateless design, supporting horizontal scaling and distributed deployment",
        "technical": "Master/Slave + Redis Distributed Lock"
      },
      {
        "title": "Security Mechanisms",
        "description": "Bearer Token authentication, group isolation, request logging, and sensitive information masking",
        "technical": "JWT + Access Control + Audit Logs"
      },
      {
        "title": "Admin Dashboard",
        "description": "Modern Vue 3 interface for real-time monitoring, log viewing, and configuration management",
        "technical": "Vue 3 + TypeScript + Naive UI"
      },
      {
        "title": "Developer-Friendly",
        "description": "Complete RESTful API, detailed documentation, and one-click deployment with Docker",
        "technical": "OpenAPI + Docker Compose"
      }
    ],
    "highlight": {
      "title": "Production-Ready Enterprise Architecture",
      "description": "From standalone to distributed clusters, from development to production, GPT-Load provides a complete solution",
      "runtime": "Runtime Environment",
      "storage": "Data Persistence",
      "cache": "Cache & Lock",
      "admin": "Admin Interface"
    }
  },
  "techStack": {
    "backend": "Backend Language",
    "storage": "Data Storage",
    "cache": "Cache System",
    "admin": "Admin Interface"
  },
  "quickStartCode": {
    "title": "Quick Start",
    "securityWarning": "Security Warning",
    "securityMessage": "Be sure to replace your-secure-key-here with a complex key! Using default or simple keys poses a serious security risk."
  },
  "architecturePage": {
    "dataFlow": "Data Flow Architecture",
    "infrastructure": "Infrastructure Components",
    "deploymentOptions": "Flexible Deployment Options",
    "components": {
      "client": {
        "title": "Client Application",
        "description": "Web/mobile apps call via standard OpenAI API format",
        "items": [
          "HTTP/HTTPS Request",
          "Bearer Token Auth",
          "JSON Format Interaction"
        ]
      },
      "proxy": {
        "title": "GPT-Load Proxy Layer",
        "description": "Core proxy service for request forwarding and management",
        "items": [
          "Transparent Proxy",
          "Key Management",
          "Load Balancing",
          "Request Logging"
        ]
      },
      "provider": {
        "title": "AI Service Provider",
        "description": "Unified access to multiple AI services",
        "items": [
          "OpenAI API",
          "Google Gemini",
          "Anthropic Claude",
          "Other Compatible Services"
        ]
      }
    },
    "infrastructureComponents": {
      "mysql": {
        "title": "MySQL 8.2+",
        "description": "Persistent Storage",
        "details": ["Configuration Data", "User Information", "Request Logs"]
      },
      "redis": {
        "title": "Redis",
        "description": "Cache & Lock",
        "details": ["Key Cache", "Distributed Lock", "Session Storage"]
      },
      "vue": {
        "title": "Vue 3 Admin Backend",
        "description": "Management Interface",
        "details": [
          "Real-time Monitoring",
          "Configuration Management",
          "Log Viewing"
        ]
      }
    },
    "deployment": {
      "standalone": {
        "title": "Standalone Deployment",
        "items": [
          "One-click start with Docker Compose",
          "Includes complete MySQL + Redis",
          "Suitable for development and small-scale production"
        ]
      },
      "cluster": {
        "title": "Cluster Deployment",
        "items": [
          "Master/Slave Architecture",
          "Horizontal scaling support",
          "High availability assurance"
        ]
      }
    }
  },
  "quickStartPage": {
    "step2": {
      "copyEnv": "Copy environment configuration file",
      "editConfig": "Edit configuration (optional)",
      "mainConfig": "Main configuration items:"
    },
    "step3": {
      "startService": "Start service (includes MySQL and Redis)",
      "visitAdmin": "Access management interface"
    },
    "requirements": {
      "title": "System Requirements",
      "runtime": "Runtime Environment",
      "storage": "Data Storage",
      "cache": "Cache Service",
      "container": "Container Runtime"
    },
    "viewDocs": "View detailed deployment documentation"
  },
  "structuredData": {
    "organization": {
      "name": "GPT-Load",
      "contactType": "Technical Support"
    },
    "website": {
      "name": "GPT-Load - AI API Load Balancer & Management Platform",
      "publisher": "GPT-Load"
    },
    "software": {
      "name": "GPT-Load",
      "operatingSystem": "Linux, macOS, Windows",
      "applicationCategory": "DeveloperApplication"
    }
  },
  "imageViewer": {
    "close": "Close (Esc)",
    "closeHint": "Press Esc or click background to close",
    "zoomHint": "Click image to zoom"
  },
  "languageSwitcher": {
    "loading": "Loading...",
    "changeLanguage": "Change Language"
  },
  "performance": {
    "title": "Technical Features",
    "subtitle": "High-performance architecture design based on Go 1.23+, providing reliable proxy services for enterprise-level applications.",
    "metrics": [
      {
        "label": "Default Concurrency",
        "value": "100",
        "description": "Default for MAX_CONCURRENT_REQUESTS"
      },
      {
        "label": "Go Version Requirement",
        "value": "1.23+",
        "description": "Minimum version requirement"
      },
      {
        "label": "Connection Pool Config",
        "value": "100/50",
        "description": "Max Idle Conns / Max Idle Conns Per Host"
      },
      {
        "label": "Request Timeout",
        "value": "600s",
        "description": "Default request timeout"
      }
    ],
    "comparison": {
      "title": "Performance Comparison",
      "subtitle": "Comparing direct API calls vs. using the GPT-Load proxy.",
      "header": {
        "metric": "Performance Metric",
        "without": "Direct API Call",
        "with": "Using GPT-Load",
        "improvement": "Improvement"
      },
      "rows": [
        {
          "metric": "Config Management",
          "without": "Static Config File",
          "with": "Dynamic Hot-Reload",
          "improvement": "No Restart Needed"
        },
        {
          "metric": "Key Management",
          "without": "Manual Rotation",
          "with": "Auto Failover",
          "improvement": "Smart Blacklisting"
        },
        {
          "metric": "Cluster Deployment",
          "without": "Complex Election",
          "with": "IS_SLAVE Flag",
          "improvement": "Simple Setup"
        },
        {
          "metric": "Monitoring",
          "without": "Basic Logs",
          "with": "Web Dashboard",
          "improvement": "Real-time Stats"
        }
      ]
    },
    "monitoring": {
      "title": "Real-time Monitoring Features",
      "features": [
        {
          "title": "Detailed Statistics",
          "description": "Comprehensive monitoring of request counts, response times, error rates, etc."
        },
        {
          "title": "Health Checks",
          "description": "Real-time monitoring of service status to promptly detect and handle anomalies."
        },
        {
          "title": "Performance Analysis",
          "description": "In-depth analysis of performance bottlenecks to optimize system configuration."
        }
      ],
      "dashboard": {
        "title": "Monitoring Dashboard",
        "totalRequests": "Total Requests:",
        "avgResponse": "Avg Response:",
        "activeKeys": "Active Keys:",
        "errorRate": "Error Rate:"
      }
    }
  }
}
