{
  "nav": {
    "home": "ホーム",
    "docs": "ドキュメント",
    "sponsor": "スポンサー", 
    "github": "GitHub",
    "menu": "ドキュメントメニュー",
    "close": "メニューを閉じる"
  },
  "hero": {
    "title": "GPT-Load",
    "subtitle": "高性能AI APIトランスペアレントプロキシ",
    "description": "Go 1.23+で開発されたエンタープライズグレードのAI APIプロキシサービス。OpenAI、Google Gemini、Anthropic Claudeなどの複数のAIプロバイダーをサポート。インテリジェントキー管理、ロードバランシング、高同期処理、包括的監視機能を提供。",
    "buttons": {
      "docs": "ドキュメント",
      "install": "インストール",
      "github": "GitHub"
    },
    "tech": {
      "backend": "バックエンド言語",
      "database": "データストレージ",
      "cache": "キャッシュシステム",
      "frontend": "管理インターフェース"
    },
    "quickStart": {
      "title": "クイックスタート",
      "security": {
        "title": "セキュリティ警告",
        "message": "'your-secure-key-here'を強力なキーに置き換えてください！デフォルトまたは簡単なキーの使用は深刻なセキュリティリスクをもたらします。"
      },
      "access": "管理パネルにアクセス："
    }
  },
  "architecture": {
    "title": "システムアーキテクチャ",
    "subtitle": "高性能トランスペアレントプロキシアーキテクチャ",
    "description": "GPT-Loadは3層アーキテクチャ設計を採用し、高性能・高可用性のAI APIプロキシサービスを提供します",
    "components": {
      "client": {
        "title": "クライアントアプリケーション",
        "description": "WebおよびモバイルアプリがOpenAI API標準フォーマットで呼び出し",
        "items": ["HTTP/HTTPSリクエスト", "ベアラートークン認証", "JSONフォーマット交流"]
      },
      "proxy": {
        "title": "GPT-Loadプロキシ層",
        "description": "リクエスト転送と管理を担当するコアプロキシサービス",
        "items": ["トランスペアレントプロキシ", "キー管理", "ロードバランシング", "リクエストログ"]
      },
      "providers": {
        "title": "AIサービスプロバイダー",
        "description": "複数のAIサービスの統一アクセス",
        "items": ["OpenAI API", "Google Gemini", "Anthropic Claude", "その他の互換サービス"]
      }
    },
    "infrastructure": {
      "title": "インフラストラクチャ",
      "mysql": {
        "title": "MySQL 8.2+",
        "description": "永続ストレージ",
        "details": ["設定データ", "ユーザー情報", "リクエストログ"]
      },
      "redis": {
        "title": "Redis",
        "description": "キャッシュとロック",
        "details": ["キーキャッシュ", "分散ロック", "セッションストレージ"]
      },
      "management": {
        "title": "管理インターフェース",
        "description": "Webコントロールパネル",
        "details": ["ビジュアル設定", "監視ダッシュボード", "ログビューア"]
      }
    }
  },
  "features": {
    "title": "コア機能",
    "subtitle": "エンタープライズグレード機能",
    "highPerformance": {
      "title": "高性能アーキテクチャ",
      "description": "Go 1.23+で構築、ゼロコピーストリーミング、コルーチン同時実行モデル、高同時処理をサポート",
      "technical": "Goコルーチン + HTTP/2接続プーリング"
    },
    "transparentProxy": {
      "title": "トランスペアレントプロキシ",
      "description": "ネイティブAPIフォーマットを完全保持、コード変更なしで複数のAIサービスにアクセス可能",
      "technical": "OpenAI + Gemini + Anthropicサポート"
    },
    "keyManagement": {
      "title": "インテリジェントキー管理",
      "description": "グループ管理、動的ローテーション、自動リトライ、高サービス可用性を確保",
      "technical": "Redisキャッシュ + 障害回復"
    },
    "loadBalancing": {
      "title": "ロードバランシング",
      "description": "マルチアップストリームサポート、重み設定、ヘルスチェック、使用可能ノードへのインテリジェントルーティング",
      "technical": "重み付きラウンドロビン + ヘルスチェック"
    },
    "hotReload": {
      "title": "ホットリロード設定",
      "description": "3層設定システム：環境変数、システム設定、グループ設定、ホットアップデートをサポート",
      "technical": "環境変数 → システム設定 → グループ設定"
    },
    "clusterSupport": {
      "title": "クラスターサポート",
      "description": "水平スケーリング、分散デプロイメント、高可用性アーキテクチャ設計",
      "technical": "Docker + Kubernetesサポート"
    },
    "security": {
      "title": "セキュリティ機能",
      "description": "Bearer Token認証、グループ分離、リクエストログ、機密情報マスキング",
      "technical": "JWT + アクセス制御 + 監査ログ"
    },
    "admin": {
      "title": "管理ダッシュボード",
      "description": "Vue 3モダンインターフェース、リアルタイム監視、ログ表示、設定管理",
      "technical": "Vue 3 + TypeScript + Naive UI"
    },
    "developerFriendly": {
      "title": "開発者フレンドリー",
      "description": "完全なRESTful API、詳細ドキュメント、Dockerワンクリックデプロイメント",
      "technical": "OpenAPI + Docker Compose"
    }
  },
  "quickStart": {
    "title": "クイックスタート",
    "subtitle": "5分間の素早い体験",
    "steps": [
      {
        "title": "ダウンロード・インストール",
        "description": "Dockerでワンクリックデプロイメント"
      },
      {
        "title": "キー設定",
        "description": "AIサービスプロバイダーのAPIキーを追加"
      },
      {
        "title": "使用開始",
        "description": "プロキシアドレス経由でAIサービスにアクセス"
      }
    ],
    "getStarted": "今すぐ始める"
  },
  "cta": {
    "title": "GPT-Loadを今すぐ使い始める",
    "subtitle": "数分でデプロイし、高性能AI APIプロキシサービスをお楽しみください",
    "buttons": {
      "quickDeploy": "クイックデプロイ",
      "viewDocs": "ドキュメントを見る",
      "github": "GitHub",
      "sponsor": "スポンサー"
    }
  },
  "footer": {
    "description": "複数の大規模モデルサービスに統一された負荷分散とキー管理を提供する高性能AIゲートウェイ。",
    "product": "製品",
    "community": "コミュニティ",
    "resources": "デプロイメント",
    "links": {
      "docs": "ドキュメント",
      "changelog": "更新ログ",
      "sponsor": "スポンサー",
      "github": "GitHub",
      "issues": "問題報告",
      "telegram": "Telegram",
      "standalone": "スタンドアローン",
      "cluster": "クラスター"
    },
    "copyright": "全著作権所有",
    "license": "MITライセンス",
    "openSource": "オープンソース"
  },
  "dataFlow": "データフローアーキテクチャ",
  "infrastructure": "インフラストラクチャコンポーネント",
  "deploymentOptions": {
    "title": "柔軟なデプロイメントオプション",
    "standalone": {
      "title": "スタンドアローンデプロイメント",
      "features": [
        "Docker Composeワンクリック起動",
        "完全なMySQL + Redisを含む",
        "開発および小規模本番に適合"
      ]
    },
    "cluster": {
      "title": "クラスターデプロイメント",
      "features": [
        "Master/Slaveアーキテクチャ",
        "水平スケーリングサポート",
        "高可用性保証"
      ]
    }
  },
  "systemRequirements": "システム要件",
  "runtime": "ランタイム環境",
  "storage": "データストレージ",
  "cache": "キャッシュサービス",
  "containerRuntime": "コンテナランタイム",
  "productionReady": {
    "title": "本番対応のエンタープライズアーキテクチャ",
    "description": "スタンドアローンデプロイメントから分散クラスターまで、開発環境から本番環境まで、GPT-Loadは完全なソリューションを提供",
    "runtime": "ランタイム環境",
    "persistence": "データ永続化",
    "cacheAndLock": "キャッシュ&ロック",
    "adminUI": "管理インターフェース"
  },
  "performanceComponent": {
    "title": "技術特性",
    "subtitle": "Go 1.23+ベースの高性能アーキテクチャ設計で、エンタープライズアプリケーションに信頼性の高いプロキシサービスを提供",
    "metrics": {
      "defaultConcurrency": {
        "label": "デフォルト同時実行数",
        "description": "MAX_CONCURRENT_REQUESTSデフォルト値"
      },
      "goVersion": {
        "label": "Goバージョン要件",
        "description": "最低バージョン要件"
      },
      "connectionPool": {
        "label": "接続プール設定",
        "description": "最大アイドル接続数/ホスト毎接続数"
      },
      "requestTimeout": {
        "label": "リクエストタイムアウト",
        "description": "デフォルトリクエストタイムアウト"
      }
    },
    "comparison": {
      "title": "パフォーマンス比較",
      "subtitle": "直接API呼び出し vs GPT-Loadプロキシ使用のパフォーマンス差異の比較",
      "headers": {
        "metric": "パフォーマンス指標",
        "directApi": "直接API呼び出し",
        "withGptLoad": "GPT-Load使用",
        "improvement": "パフォーマンス向上"
      },
      "items": {
        "configManagement": {
          "metric": "設定管理",
          "without": "静的設定ファイル",
          "with": "動的ホットリロード",
          "improvement": "再起動不要"
        },
        "keyManagement": {
          "metric": "キー管理",
          "without": "手動ローテーション",
          "with": "自動障害回復",
          "improvement": "スマートブラックリスト"
        },
        "clusterDeployment": {
          "metric": "クラスターデプロイメント",
          "without": "複雑な選出メカニズム",
          "with": "IS_SLAVEフラグ",
          "improvement": "シンプル設定"
        },
        "monitoring": {
          "metric": "監視機能",
          "without": "基本ログ",
          "with": "Web管理インターフェース",
          "improvement": "リアルタイム統計"
        }
      }
    },
    "monitoring": {
      "title": "リアルタイム監視機能",
      "features": {
        "detailedStats": {
          "title": "詳細統計",
          "description": "リクエスト数、レスポンス時間、エラー率などの包括的な監視"
        },
        "healthCheck": {
          "title": "ヘルスチェック",
          "description": "リアルタイムでサービス状態を監視し、異常を迅速に発見・処理"
        },
        "performanceAnalysis": {
          "title": "パフォーマンス分析",
          "description": "パフォーマンスのボトルネックを深く分析し、システム設定を最適化"
        }
      },
      "dashboard": {
        "title": "監視ダッシュボード",
        "metrics": {
          "totalRequests": "🟢 総リクエスト数:",
          "avgResponse": "⚡ 平均レスポンス:",
          "activeKeys": "🔑 アクティブキー:",
          "errorRate": "❌ エラー率:"
        }
      }
    }
  },
  "quickStartComponent": {
    "title": "クイックスタート",
    "subtitle": "3ステップでGPT-Loadを開始",
    "description": "Docker Composeによるクイックデプロイメント、完全なデータベースとキャッシュサービスを含む",
    "steps": {
      "clone": {
        "title": "1. プロジェクトをクローン",
        "description": "GitHubから完全なプロジェクトコードをダウンロード"
      },
      "configure": {
        "title": "2. 環境設定",
        "description": "環境設定ファイルをコピーして編集"
      },
      "start": {
        "title": "3. サービス開始",
        "description": "Docker Composeでワンクリック起動"
      }
    },
    "requirements": {
      "title": "システム要件",
      "runtime": "ランタイム環境",
      "storage": "データストレージ",
      "cache": "キャッシュサービス",
      "containerRuntime": "コンテナランタイム",
      "viewDocs": "詳細デプロイメントドキュメントを表示"
    },
    "codeComments": {
      "copyEnv": "環境設定ファイルをコピー",
      "editConfig": "設定を編集（オプション）",
      "mainConfig": "主要设定项目:",
      "startServices": "サービス開始（MySQLとRedisを含む）",
      "accessAdmin": "管理インターフェースにアクセス"
    }
  },
  "docs": {
    "quickStart": "クイックスタート",
    "introduction": "プロジェクト紹介",
    "deployment": "デプロイメント",
    "standalone": "スタンドアローン",
    "source": "ソースコード",
    "cluster": "クラスター",
    "clawCloud": "Claw Cloud",
    "configuration": "設定管理",
    "environment": "環境設定",
    "project": "プロジェクト設定",
    "management": "管理設定",
    "cloudflareAigateway": "Cloudflare AI Gateway",
    "architectureDesign": "アーキテクチャ設計",
    "performance": "パフォーマンス",
    "routingStrategy": "ルーティング戦略",
    "keyManagement": "キー管理",
    "channels": "チャンネル",
    "geminiOpenai": "Gemini公式OpenAI互換",
    "integrations": "統合ガイド",
    "rooCode": "Roo Code",
    "claudeCodeRouter": "Claude Code Router", 
    "newApi": "New API",
    "cherryStudio": "Cherry Studio",
    "sponsor": "スポンサー"
  },
  "imageViewer": {
    "closeButton": "閉じる (Esc)",
    "instructions": "Escキーまたは背景をクリックして閉じる",
    "clickToEnlarge": "画像をクリックして拡大表示"
  },
  "introduction": {
    "title": "GPT-Load プロジェクト紹介",
    "subtitle": "複数のAIサービスを統合する必要がある企業や開発者のために特別に設計された、高性能でエンタープライズグレードのAI API透明プロキシサービス。Go言語で開発され、インテリジェントキー管理、ロードバランシング、包括的监控機能を備え、高同期生産環境向けに設計されています。",
    "coreConcept": {
      "title": "コアコンセプト",
      "transparentProxy": {
        "title": "透明プロキシ",
        "description": "GPT-Loadは透明プロキシサービスとして、各AIサービスプロバイダーのネイティブAPIフォーマットを完全に保持し、フォーマット変換や統一を一切行いません。ユーザーがGPT-Loadにリクエストする方法と同じ方法で、GPT-Loadが上流サービスにリクエストし、完全に透明なプロキシ機能を実現します。"
      }
    },
    "supportedServices": {
      "title": "サポートされているAIサービス",
      "openai": {
        "features": ["公式OpenAI API", "Azure OpenAI", "OpenAI形式と互換性のあるすべてのサードパーティサービス"]
      },
      "gemini": {
        "features": ["Gemini Pro", "Gemini Pro Vision", "マルチモーダル機能サポート"]
      },
      "claude": {
        "features": ["Claudeシリーズモデル", "高品質対話生成", "ネイティブAPIフォーマットサポート"]
      }
    },
    "coreFeatures": {
      "title": "コア機能",
      "highPerformance": {
        "title": "高性能アーキテクチャ",
        "description": "ゼロコピーストリーミング転送、Goコルーチンベースの並行モデル、高並行接続をサポート"
      },
      "keyManagement": {
        "title": "インテリジェントキー管理",
        "description": "グループ管理、動的ローテーション、自動リトライ、高サービス可用性を確保"
      },
      "loadBalancing": {
        "title": "ロードバランシング",
        "description": "マルチアップストリームサポート、重み設定、ヘルスチェック、使用可能ノードへのインテリジェントルーティング"
      },
      "clusterSupport": {
        "title": "クラスターサポート",
        "description": "Master/Slaveアーキテクチャ、ステートレス設計、水平スケーリングをサポート"
      },
      "hotReload": {
        "title": "ホットリロード設定",
        "description": "3層設定システム：環境変数、システム設定、グループ設定、ホットアップデートをサポート"
      },
      "adminPanel": {
        "title": "管理ダッシュボード",
        "description": "Vue 3モダンインターフェース、リアルタイム監視、ログ表示、設定管理"
      }
    },
    "techStack": {
      "title": "技術スタック",
      "backend": {
        "title": "バックエンド技術",
        "items": [
          {"name": "Go 1.23+", "desc": "主要プログラミング言語"},
          {"name": "Gin", "desc": "HTTP Webフレームワーク"},
          {"name": "GORM", "desc": "ORMデータベースフレームワーク"},
          {"name": "MySQL 8.2+", "desc": "メインデータベースストレージ"},
          {"name": "Redis", "desc": "分散キャッシュと状態管理"},
          {"name": "Uber Dig", "desc": "依存性注入コンテナ"}
        ]
      },
      "frontend": {
        "title": "フロントエンド & DevOps",
        "items": [
          {"name": "Vue 3", "desc": "フロントエンドフレームワーク"},
          {"name": "TypeScript", "desc": "型安全性"},
          {"name": "Naive UI", "desc": "UIコンポーネントライブラリ"},
          {"name": "Docker", "desc": "コンテナ化デプロイメント"},
          {"name": "Docker Compose", "desc": "コンテナオーケストレーション"},
          {"name": "GitHub Actions", "desc": "CI/CDパイプライン"}
        ]
      }
    },
    "architectureAdvantages": {
      "title": "アーキテクチャの利点",
      "microservices": {
        "title": "マイクロサービスアーキテクチャ",
        "items": ["モジュラー設計", "依存性注入", "インターフェース駆動"]
      },
      "distributed": {
        "title": "分散設計",
        "items": ["Master/Slaveモード", "分散ロック", "キャッシュ同期"]
      },
      "highAvailability": {
        "title": "高可用性",
        "items": ["グレースフル劣化", "障害回復", "リソース保護"]
      }
    },
    "useCases": {
      "title": "使用事例",
      "enterprise": {
        "title": "エンタープライズAIサービス",
        "items": ["大規模API呼び出し", "コスト管理最適化", "サービス安定性保証"]
      },
      "developer": {
        "title": "開発者ツール",
        "items": ["統一APIアクセス", "デバッグ&監視", "クイックデプロイメント"]
      },
      "multiTenant": {
        "title": "マルチテナントサービス",
        "items": ["テナント分離", "カスタム設定", "使用統計"]
      }
    },
    "deepDive": {
      "title": "GPT-Loadの詳細理解",
      "subtitle": "GPT-Loadのコア技術アーキテクチャと高性能設計哲学を探求し、究極のプロキシ性能を実現する方法を学ぶ",
      "performance": {
        "title": "性能詳解",
        "subtitle": "究極の性能設計を理解",
        "features": [
          "ゼロI/O操作プロキシメカニズム",
          "ゼロコピーストリーミング転送技術",
          "ロックフリー並行処理アーキテクチャ",
          "超低リソース使用量最適化"
        ]
      },
      "architecture": {
        "title": "アーキテクチャ設計",
        "subtitle": "システム設計哲学の詳細",
        "features": [
          "インテリジェントキー管理メカニズム",
          "パス処理戦略設計",
          "分散クラスターアーキテクチャ",
          "高可用性保証メカニズム"
        ]
      }
    },
    "gettingStarted": {
      "title": "GPT-Loadを使い始める",
      "description": "Docker Composeを使ったクイックデプロイメント、数分で完全なAIインターフェースプロキシサービスを開始",
      "button": "デプロイメントガイドを見る"
    }
  },
  "docsQuickStart": {
    "title": "クイックスタート",
    "subtitle": "以下の手順でGPT-Loadを迅速に起動・実行します。",
    "quickLaunch": {
      "title": "クイック起動",
      "lightweightDeployment": {
        "title": "軽量デプロイメント",
        "description": "SQLiteデータベースとメモリストレージを使用、個人使用とクイックテストに最適"
      }
    },
    "requirements": {
      "title": "システム要件",
      "docker": "Docker 20.10+ と Docker Compose",
      "os": "Linux/macOS/Windows オペレーティングシステム",
      "resources": "最低128MBメモリと1GBディスク容量"
    },
    "installation": {
      "title": "インストール手順"
    },
    "security": {
      "title": "重要なセキュリティ通知",
      "warning": "デプロイ前にデフォルトの管理キーを変更する必要があります！",
      "requirements": {
        "complex": "複素キーには最低20文字を使用",
        "characters": "大文字、小文字、数字、特殊文字を含む",
        "avoid": "決して使用しない",
        "simpleKeys": "やその他のデフォルト/シンプルキー",
        "productionRisk": "本番環境で弱いキーを使用すると深刻なセキュリティリスクが生じます"
      },
      "recommendedFormat": "推奨キー形式",
      "randomString": "ランダム文字列",
      "characters": "文字"
    },
    "steps": {
      "createDirectory": {
        "title": "作業ディレクトリを作成",
        "comment": "ディレクトリを作成して入る"
      },
      "downloadConfig": {
        "title": "設定ファイルをダウンロード",
        "dockerComment": "Docker Compose設定をダウンロード",
        "envComment": "環境変数設定をダウンロード",
        "securityConfig": {
          "title": "セキュリティ設定を即座に変更",
          "editFile": "編集",
          "changeFrom": "ファイル、次の内容を変更：",
          "changeTo": "強いキーに："
        }
      },
      "startServices": {
        "title": "サービス開始",
        "comment": "GPT-Loadサービスを開始"
      },
      "verify": {
        "title": "デプロイメント確認",
        "accessAdmin": "管理インターフェースにアクセス",
        "useAuthKey": "使用する",
        "fileSet": "ファイルに設定された",
        "login": "で管理インターフェースにログイン"
      }
    },
    "commands": {
      "title": "一般的なコマンド",
      "checkStatus": "ステータス確認",
      "viewLogs": "ログ表示",
      "restart": "サービス再起動",
      "update": "バージョン更新"
    },
    "nextSteps": {
      "description": "MySQL/PostgreSQLの使用やクラスターデプロイメントなど、より多くのデプロイメントオプションを学びたいですか？完全な",
      "deploymentGuide": "デプロイメントガイド",
      "period": "をご覧ください。"
    }
  },
  "architectureDesign": {
    "title": "システムアーキテクチャ",
    "subtitle": "GPT-Loadの技術アーキテクチャと設計理念の詳細理解",
    "overview": {
      "title": "アーキテクチャ概要",
      "highlightTitle": "高性能透明プロキシアーキテクチャ",
      "highlightDescription": "Go言語ベースの高性能OpenAI APIプロキシサービス、マルチキーローテーション、負荷分散、インテリジェントフェイルオーバーをサポート"
    },
    "components": {
      "apiGateway": {
        "title": "APIゲートウェイ",
        "description": "統合APIエントリポイントとルーティング"
      },
      "loadBalancer": {
        "title": "負荷分散",
        "description": "インテリジェントキーローテーションと分散"
      },
      "dataStorage": {
        "title": "データストレージ",
        "description": "MySQL + Redis二重ストレージ"
      },
      "securityMonitor": {
        "title": "セキュリティ監視",
        "description": "レート制限、認証、監視"
      }
    },
    "systemComponents": {
      "title": "システムコンポーネント",
      "coreService": {
        "title": "コアサービス層",
        "apiProxy": {
          "title": "APIプロキシサービス",
          "features": ["HTTP/HTTPS透明プロキシ", "リクエストルーティングと転送", "ストリーミングレスポンス処理", "エラーハンドリングと再試行"]
        },
        "loadBalancer": {
          "title": "負荷分散装置",
          "features": ["ラウンドロビンアルゴリズム", "重み割り当て戦略", "ヘルスチェック機構", "自動フェイルオーバー"]
        }
      },
      "managementLayer": {
        "title": "管理サービス層",
        "webInterface": {
          "title": "Web管理インターフェース",
          "features": ["Vue 3 + TypeScript", "Naive UIコンポーネントライブラリ", "リアルタイム監視ダッシュボード", "設定管理インターフェース"]
        },
        "restApi": {
          "title": "REST API",
          "features": ["キー管理インターフェース", "統計データインターフェース", "システム設定インターフェース", "監視メトリクスインターフェース"]
        }
      },
      "dataLayer": {
        "title": "データストレージ層",
        "mysql": {
          "title": "MySQLデータベース",
          "features": ["キーと設定の永続化", "ユーザー認証データ", "履歴統計レコード", "システムログストレージ"]
        },
        "redis": {
          "title": "Redisキャッシュ",
          "features": ["キーステータスキャッシュ", "レート制限カウンター", "分散ロック機構", "セッション状態管理"]
        }
      }
    },
    "dataFlow": {
      "title": "データフロー",
      "steps": [
        {
          "title": "クライアントリクエスト",
          "description": "APIゲートウェイがOpenAI互換リクエストを受信"
        },
        {
          "title": "キー選択",
          "description": "負荷分散装置が利用可能なAPIキーを選択"
        },
        {
          "title": "リクエスト転送",
          "description": "プロキシサービスがOpenAI APIにリクエストを転送"
        },
        {
          "title": "レスポンス処理",
          "description": "ストリーミングレスポンス処理してクライアントに返却"
        },
        {
          "title": "データ記録",
          "description": "統計データとログをデータベースに記録"
        }
      ]
    },
    "deploymentArchitectures": {
      "title": "デプロイメントアーキテクチャ",
      "standalone": {
        "title": "スタンドアロンデプロイメント",
        "scenarios": {
          "title": "適用シナリオ",
          "items": ["中小規模アプリケーション", "開発テスト環境", "個人プロジェクト使用"]
        }
      },
      "cluster": {
        "title": "クラスターデプロイメント",
        "scenarios": {
          "title": "適用シナリオ",
          "items": ["大規模本番環境", "高可用性要件", "エンタープライズグレードアプリケーション"]
        }
      }
    },
    "techStack": {
      "title": "技術スタック",
      "backend": {
        "title": "バックエンド技術",
        "items": ["Go 1.23+", "Gin Webフレームワーク", "GORM ORM", "Go-Redis"]
      },
      "frontend": {
        "title": "フロントエンド技術",
        "items": ["Vue 3", "TypeScript", "Naive UI", "Vite"]
      },
      "infrastructure": {
        "title": "インフラストラクチャ",
        "items": ["MySQL 8.2+", "Redis", "Docker", "Nginx"]
      }
    },
    "designPrinciples": {
      "title": "設計原則",
      "highPerformance": {
        "title": "高性能",
        "description": "Go言語ベースの高同時性処理能力、数千QPSのリクエスト処理をサポート"
      },
      "highAvailability": {
        "title": "高可用性",
        "description": "自動フェイルオーバー、ヘルスチェック、分散デプロイメントでサービス可用性を保証"
      },
      "scalability": {
        "title": "スケーラビリティ",
        "description": "モジュラー設計とマイクロサービスアーキテクチャで水平スケーリングと機能拡張をサポート"
      },
      "transparentProxy": {
        "title": "透明プロキシ",
        "description": "OpenAI APIと完全互換、既存コードの変更なしで統合可能"
      }
    }
  },
  "seo": {
    "pages": {
      "home": {
        "title": "GPT-Load - 高性能AI APIトランスペアレントプロキシ",
        "description": "エンタープライズグレードのAI APIプロキシサービス。各AIプロバイダーのネイティブAPIフォーマットを完全に保持。キーローテーション、マルチグループ管理、ロードバランシング機能を提供。",
        "keywords": "GPT, OpenAI, API, トランスペアレントプロキシ, ロードバランシング, キーローテーション, Go, 高性能, AIプロキシ, Gemini, Claude"
      },
      "docs": {
        "quickStart": {
          "title": "クイックスタート - GPT-Load デプロイメントガイド",
          "description": "Dockerワンクリック起動で5分でGPT-Loadをデプロイ。完全なデータベースとキャッシュサービスを含む。",
          "keywords": "GPT-Loadデプロイメント, Dockerデプロイメント, クイックスタート, AIプロキシインストール"
        }
      },
      "introduction": {
        "title": "プロジェクト紹介 - GPT-Load アーキテクチャと技術スタック",
        "description": "GPT-Loadのコアコンセプト、技術アーキテクチャ、サポートされているAIサービス、エンタープライズ機能の詳細。",
        "keywords": "GPT-Loadアーキテクチャ, AIプロキシ技術, 透明プロキシ原理, マイクロサービスアーキテクチャ, Go言語"
      }
    }
  },
  "keyManagement": {
    "title": "インテリジェントキー管理",
    "subtitle": "GPT-Loadはポーリング負荷分散、自動障害検出と復旧メカニズムを通じてインテリジェントキー管理機構を採用し、サービスの高可用性と安定性を確保します。",
    "polling": {
      "title": "ポーリングメカニズム",
      "objective": {
        "title": "目標",
        "description": "グループ内の複数キー間での要求の公平な負荷分散を実現。"
      },
      "implementation": {
        "title": "実装方式",
        "atomicCounter": {
          "title": "アトミックカウンター",
          "description": "高同時実行下でのポーリング一貫性と公平性を保証"
        },
        "statusFilter": {
          "title": "ステータスフィルタリング",
          "description": "ポーリング範囲はグループ内の「有効」ステータスのキーに限定"
        }
      }
    },
    "retry": {
      "title": "リトライと障害処理",
      "trigger": {
        "title": "トリガーシナリオ",
        "description": "リクエストが失敗した場合（HTTPステータス≥400またはネットワークエラー）に自動的にトリガー"
      },
      "process": {
        "title": "処理フロー",
        "step1": {
          "title": "失敗マーク",
          "description": "現在失敗したキーの失敗カウントを1増やす"
        },
        "step2": {
          "title": "新しいキーを取得",
          "description": "ポーリングメカニズムを通じてグループ内の次の利用可能なキーを即座に取得"
        },
        "step3": {
          "title": "透明リトライ",
          "description": "新しいキーを使用してリクエストを再実行、クライアントには透明"
        },
        "step4": {
          "title": "リトライ上限",
          "description": "設定された最大リトライ回数。すべての試行が失敗した場合、最終エラーをクライアントに返す"
        }
      }
    },
    "blacklist": {
      "title": "キーブラックリストと復旧",
      "mechanism": {
        "title": "ブラックリストメカニズム",
        "trigger": {
          "title": "トリガー条件",
          "description": "キーの累積失敗回数がブラックリスト閾値に達した時"
        },
        "actions": {
          "title": "実行アクション",
          "items": [
            "キーステータスを「無効」に更新",
            "ポーリングキューから除去、新しいリクエストを受け取らない"
          ]
        }
      }
    },
    "recovery": {
      "title": "復旧メカニズム",
      "timing": {
        "title": "トリガータイミング",
        "description": "キー検証間隔サイクルに従って実行されるバックグラウンド定期タスク"
      },
      "process": {
        "title": "復旧フロー",
        "step1": {
          "title": "ヘルスチェック",
          "description": "ブラックリストされたキーを使用して検証エンドポイント（モデルリストなど）をリクエスト"
        },
        "step2": {
          "title": "検証成功",
          "items": [
            "キーステータスを「有効」に復元",
            "失敗カウントを0にリセット",
            "ポーリングキューに再追加"
          ]
        },
        "step3": {
          "title": "検証失敗",
          "description": "「無効」ステータスを維持、次の検査サイクルを待つ"
        }
      }
    },
    "advantages": {
      "title": "メカニズムの利点",
      "loadBalancing": {
        "title": "負荷分散",
        "description": "アトミックカウンターが高同時実行下での公平なポーリングを保証"
      },
      "autoRecovery": {
        "title": "自動復旧",
        "description": "定期的なヘルスチェックと障害キーの自動復旧"
      },
      "faultIsolation": {
        "title": "障害分離",
        "description": "障害キーを迅速に特定し、サービスの安定性を確保"
      }
    }
  },
  "routingStrategy": {
    "title": "ルーティング戦略",
    "subtitle": "GPT-Loadのパス処理メカニズムを理解し、柔軟なパス設定方法をマスターして、クライアントとアップストリームサービス間の正しい接続を確保する。",
    "coreProcessing": {
      "title": "パス処理原理",
      "transparentPrinciple": {
        "title": "透過原則",
        "description": "GPT-Loadは透過原則に従い、パス置換のみを担当し、最大限の柔軟性を維持します。コアロジックは、クライアントリクエスト内のプロキシプレフィックスを実際のアップストリームアドレスに置き換えることです。",
        "rule": "置換ルール：GPT-Loadサービスアドレス + /proxy/ + グループ名    置換先    アップストリームアドレス"
      }
    },
    "processingFlow": {
      "title": "処理フロー例",
      "serviceAddress": "サービスアドレス",
      "upstreamAddress": "アップストリームアドレス",
      "groupName": "グループ名",
      "clientRequest": "クライアントリクエスト",
      "actualRequest": "実際のリクエスト"
    },
    "configurationMethods": {
      "title": "設定方法詳細",
      "description": "OpenRouterを例に（完全パス：https://openrouter.ai/api/v1/chat/completions）、グループ名がopenrouter、チャンネルタイプがopenai：",
      "method1": {
        "title": "設定方法1：ドメイン分離",
        "gptLoadConfig": "GPT-Load設定",
        "upstreamAddress": "アップストリームアドレス",
        "testPath": "テストパス",
        "clientConfig": "クライアント設定",
        "cherryStudioApi": "Cherry Studio APIアドレス"
      },
      "method2": {
        "title": "設定方法2：APIパスを含む（推奨）",
        "gptLoadConfig": "GPT-Load設定",
        "upstreamAddress": "アップストリームアドレス",
        "testPath": "テストパス",
        "clientConfig": "クライアント設定",
        "cherryStudioApi": "Cherry Studio APIアドレス"
      },
      "method3": {
        "title": "設定方法3：完全バージョンパス",
        "gptLoadConfig": "GPT-Load設定",
        "upstreamAddress": "アップストリームアドレス",
        "testPath": "テストパス",
        "clientConfig": "クライアント設定",
        "cherryStudioApi": "Cherry Studio APIアドレス",
        "note": "注意：/で終わる必要があり、クライアントの自動v1パス追加を避ける"
      }
    },
    "bestPractices": {
      "title": "ベストプラクティス",
      "configurationSuggestions": {
        "title": "設定提案",
        "items": [
          "• 設定方法2を推奨、構造が明確で理解しやすい",
          "• まず完全なアップストリームAPIアドレスを確定",
          "• クライアントの特性に応じて適切なパス分割点を選択",
          "• 設定の一貫性と保守性を維持"
        ]
      },
      "debuggingTips": {
        "title": "デバッグのコツ",
        "items": [
          "• GPT-Loadリクエストログを確認してアップストリームアドレスを確認",
          "• テストパスを使用して設定の正確性を検証",
          "• クライアントのパス連結ルールに注意",
          "• 異なるシナリオに適応するため柔軟に設定を調整"
        ]
      }
    },
    "summary": {
      "title": "設定要点まとめ",
      "description": "パス処理ロジックの理解が鍵：GPT-Loadは単純な文字列置換のみを担当し、柔軟な設定方法で様々なクライアントとアップストリームサービスのニーズに対応できます。",
      "corePrinciple": "コア原則",
      "principle": "テストアドレスとクライアントリクエストアドレスがGPT-Loadプロキシを経由した後、最終的なアップストリームアドレスが正確であることを確保。"
    }
  },
  "channels": {
    "title": "チャネルタイプ",
    "subtitle": "GPT-Loadは複数の主流AIサービスプロバイダーをサポートし、ネイティブAPIフォーマットと体験を保持したまま、完全に透明なプロキシアクセスを提供します。",
    "supportedServices": {
      "title": "サポートされているサービス",
      "openai": {
        "title": "OpenAI",
        "features": [
          "Chat Completions API",
          "Embeddings API",
          "Images API",
          "Audio API",
          "Files API",
          "Models API"
        ]
      },
      "gemini": {
        "title": "Google Gemini",
        "features": [
          "Generate Content API",
          "ストリーミングサポート",
          "マルチモーダル入力",
          "安全設定",
          "生成設定",
          "モデル管理"
        ]
      },
      "claude": {
        "title": "Anthropic Claude",
        "features": [
          "Messages API",
          "ストリーミング応答",
          "システムプロンプト",
          "ツール使用",
          "トークンカウント",
          "モデルアクセス"
        ]
      },
      "extensibility": {
        "title": "拡張性",
        "description": "アーキテクチャ設計により、標準化されたインターフェースアダプテーション層を通じて、新しいAIサービスプロバイダーを迅速に追加し、統合アクセスを実現します。"
      }
    },
    "proxyFormat": {
      "title": "プロキシフォーマット",
      "unifiedEndpoint": {
        "title": "統一プロキシエンドポイント",
        "format": "http://localhost:3001/proxy/{group-name}"
      },
      "parameters": {
        "title": "パラメータ説明",
        "items": [
          "group-name: 管理画面で作成されたグループ名",
          "任意のパスサフィックスをサポート、完全透明転送",
          "元のAPIのすべての機能特性を保持"
        ]
      },
      "authentication": {
        "title": "認証方式",
        "items": [
          "元のサービスのAPI Keyを使用",
          "Authorization: Bearer {token} ヘッダーで渡す",
          "グループレベルのキーローテーションと負荷分散をサポート"
        ]
      }
    },
    "openaiFormat": {
      "title": "OpenAI形式接続",
      "authentication": {
        "title": "認証設定",
        "description": "GPT-LoadはOpenAI SDKと完全に互換性があり、base_urlを変更するだけでシームレスに切り替えできます。"
      },
      "examples": {
        "original": {
          "title": "元のOpenAIリクエスト",
          "code": "curl https://api.openai.com/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n    \"model\": \"gpt-4\",\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"Hello!\"\n      }\n    ]\n  }'"
        },
        "proxy": {
          "title": "GPT-Loadプロキシ経由",
          "code": "curl http://localhost:3001/proxy/openai/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n    \"model\": \"gpt-4\",\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"Hello!\"\n      }\n    ]\n  }'"
        }
      },
      "migration": {
        "step1": "APIベースアドレスの変更のみ、その他のコードは完全に変更不要",
        "step2": "すべてのOpenAI SDK機能をサポート"
      },
      "endpoints": {
        "title": "サポートされているエンドポイント",
        "main": {
          "title": "コアAPI",
          "items": [
            "/v1/chat/completions - チャット補完",
            "/v1/embeddings - ベクトル埋め込み",
            "/v1/images/generations - 画像生成",
            "/v1/audio/speech - 音声合成",
            "/v1/audio/transcriptions - 音声文字起こし"
          ]
        },
        "other": {
          "title": "その他のAPI",
          "items": [
            "/v1/models - モデル一覧",
            "/v1/files - ファイル管理",
            "/v1/fine_tuning/jobs - ファインチューニングジョブ",
            "/v1/assistants - アシスタントAPI",
            "/v1/threads - 会話スレッド"
          ]
        }
      },
      "sdk": {
        "title": "SDK設定",
        "python": {
          "title": "Python SDK",
          "code": "from openai import OpenAI\n\nclient = OpenAI(\n    api_key=\"your-openai-api-key\",\n    base_url=\"http://localhost:3001/proxy/openai\"\n)\n\nresponse = client.chat.completions.create(\n    model=\"gpt-4\",\n    messages=[\n        {\"role\": \"user\", \"content\": \"Hello!\"}\n    ]\n)"
        },
        "nodejs": {
          "title": "Node.js SDK",
          "code": "import OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: 'your-openai-api-key',\n  baseURL: 'http://localhost:3001/proxy/openai'\n});\n\nconst response = await openai.chat.completions.create({\n  model: 'gpt-4',\n  messages: [\n    { role: 'user', content: 'Hello!' }\n  ]\n});"
        }
      }
    },
    "geminiFormat": {
      "title": "Gemini形式接続",
      "authentication": {
        "title": "認証設定",
        "description": "Google Gemini APIと完全に互換性があり、マルチモーダル入力やストリーミング応答を含むすべてのネイティブ機能をサポートします。"
      },
      "examples": {
        "original": {
          "title": "元のGeminiリクエスト",
          "code": "curl https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=$API_KEY \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"contents\": [{\n      \"parts\": [{\n        \"text\": \"Write a story about a magic backpack.\"\n      }]\n    }]\n  }'"
        },
        "proxy": {
          "title": "GPT-Loadプロキシ経由",
          "code": "curl http://localhost:3001/proxy/gemini/v1beta/models/gemini-pro:generateContent?key=$API_KEY \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"contents\": [{\n      \"parts\": [{\n        \"text\": \"Write a story about a magic backpack.\"\n      }]\n    }]\n  }'"
        }
      },
      "migration": {
        "step1": "リクエストベースアドレスをGPT-Loadプロキシアドレスに置換",
        "step2": "すべてのパラメータと認証方式は変更せず"
      },
      "endpoints": {
        "title": "サポートされているエンドポイント",
        "content": {
          "title": "コンテンツ生成",
          "items": [
            "/v1beta/models/*/generateContent - コンテンツ生成",
            "/v1beta/models/*/streamGenerateContent - ストリーミング生成",
            "/v1beta/models/*/countTokens - トークンカウント",
            "/v1beta/models/*/embedContent - ベクトル埋め込み"
          ]
        },
        "models": {
          "title": "モデル管理",
          "items": [
            "/v1beta/models - モデル一覧",
            "/v1beta/models/* - モデル詳細",
            "/v1beta/tuning/createTunedModel - ファインチューニング作成",
            "/v1beta/tuning/tunedModels - ファインチューニング一覧"
          ]
        }
      },
      "sdk": {
        "title": "SDK設定",
        "python": {
          "title": "Python SDK",
          "code": "import google.generativeai as genai\n\n# API Key設定\ngenai.configure(\n    api_key=\"your-gemini-api-key\",\n    client_options={\"api_endpoint\": \"http://localhost:3001/proxy/gemini\"}\n)\n\nmodel = genai.GenerativeModel('gemini-pro')\nresponse = model.generate_content(\"Hello!\")"
        },
        "http": {
          "title": "HTTPリクエスト",
          "code": "POST http://localhost:3001/proxy/gemini/v1beta/models/gemini-pro:generateContent?key=YOUR_API_KEY\nContent-Type: application/json\n\n{\n  \"contents\": [{\n    \"parts\": [{\n      \"text\": \"Explain how AI works\"\n    }]\n  }]\n}"
        }
      }
    },
    "claudeFormat": {
      "title": "Claude形式接続",
      "authentication": {
        "title": "認証設定",
        "description": "Anthropic Claude APIと完全に互換性があり、Messages API、ツール使用、ストリーミング応答などすべての高度な機能をサポートします。"
      },
      "examples": {
        "original": {
          "title": "元のClaudeリクエスト",
          "code": "curl https://api.anthropic.com/v1/messages \\\n  -H \"Content-Type: application/json\" \\\n  -H \"x-api-key: $ANTHROPIC_API_KEY\" \\\n  -H \"anthropic-version: 2023-06-01\" \\\n  -d '{\n    \"model\": \"claude-3-sonnet-20240229\",\n    \"max_tokens\": 1024,\n    \"messages\": [\n      {\"role\": \"user\", \"content\": \"Hello, Claude\"}\n    ]\n  }'"
        },
        "proxy": {
          "title": "GPT-Loadプロキシ経由",
          "code": "curl http://localhost:3001/proxy/claude/v1/messages \\\n  -H \"Content-Type: application/json\" \\\n  -H \"x-api-key: $ANTHROPIC_API_KEY\" \\\n  -H \"anthropic-version: 2023-06-01\" \\\n  -d '{\n    \"model\": \"claude-3-sonnet-20240229\",\n    \"max_tokens\": 1024,\n    \"messages\": [\n      {\"role\": \"user\", \"content\": \"Hello, Claude\"}\n    ]\n  }'"
        }
      },
      "migration": {
        "step1": "APIベースアドレスをGPT-Loadプロキシエンドポイントに更新",
        "step2": "すべてのヘッダー情報とリクエスト形式は変更せず"
      },
      "endpoints": {
        "title": "サポートされているエンドポイント",
        "main": {
          "title": "コアAPI",
          "items": [
            "/v1/messages - メッセージ会話",
            "/v1/messages/streaming - ストリーミング会話",
            "/v1/complete - テキスト補完（レガシー）",
            "/v1/tools - ツール使用"
          ]
        },
        "models": {
          "title": "モデル管理",
          "items": [
            "/v1/models - 利用可能モデル一覧",
            "Claude-3全シリーズモデルをサポート",
            "カスタムmax_tokens制限をサポート",
            "システムプロンプト設定をサポート"
          ]
        }
      },
      "sdk": {
        "title": "SDK設定",
        "python": {
          "title": "Python SDK",
          "code": "from anthropic import Anthropic\n\nclient = Anthropic(\n    api_key=\"your-claude-api-key\",\n    base_url=\"http://localhost:3001/proxy/claude\"\n)\n\nmessage = client.messages.create(\n    model=\"claude-3-sonnet-20240229\",\n    max_tokens=1024,\n    messages=[\n        {\"role\": \"user\", \"content\": \"Hello!\"}\n    ]\n)"
        },
        "http": {
          "title": "HTTPリクエスト",
          "code": "POST http://localhost:3001/proxy/claude/v1/messages\nContent-Type: application/json\nx-api-key: YOUR_API_KEY\nanthropic-version: 2023-06-01\n\n{\n  \"model\": \"claude-3-sonnet-20240229\",\n  \"max_tokens\": 1024,\n  \"messages\": [\n    {\"role\": \"user\", \"content\": \"Hello!\"}\n  ]\n}"
        }
      }
    },
    "groupManagement": {
      "title": "グループ管理",
      "creation": {
        "title": "グループ作成",
        "steps": [
          "GPT-Load管理画面にアクセス",
          "「環境管理」->「グループ設定」に移動",
          "「新規グループ」をクリックしてグループ情報を入力",
          "対応するチャネルタイプ（OpenAI/Gemini/Claude）を選択",
          "アップストリームアドレスとテストパスを設定",
          "API キーを追加して接続をテスト",
          "設定を保存してグループを有効化"
        ]
      },
      "configuration": {
        "title": "設定要点",
        "items": [
          "グループ名はプロキシパスの一部になります",
          "一つのグループに複数のAPI キーを設定可能",
          "自動的にキーローテーションと負荷分散を実行",
          "キーヘルスチェックとフェイルオーバーをサポート",
          "リクエスト頻度制限とクォータ管理を設定可能"
        ]
      }
    },
    "migration": {
      "title": "移行ガイド",
      "guide": {
        "title": "移行ステップ",
        "steps": [
          {
            "title": "現状評価",
            "description": "現在使用しているAIサービスとAPI呼び出し方法を分析"
          },
          {
            "title": "GPT-Loadデプロイ",
            "description": "クイックスタートガイドに従ってGPT-Loadサービスをデプロイ"
          },
          {
            "title": "設定更新",
            "description": "アプリケーション内のAPIベースアドレスをGPT-Loadに向けるよう修正"
          }
        ]
      },
      "seamless": {
        "title": "シームレス移行",
        "description": "GPT-Loadの設計思想は完全に透明で、移行プロセス中はビジネスロジックを修正する必要がなく、APIエンドポイントアドレスを変更するだけで統一管理と負荷分散の利点を享受できます。"
      }
    },
    "summary": {
      "title": "まとめ",
      "transparent": {
        "title": "透明プロキシ",
        "features": [
          "ネイティブAPIフォーマットを保持",
          "ビジネスコードの修正不要",
          "すべての機能特性をサポート"
        ]
      },
      "unified": {
        "title": "統一管理",
        "features": [
          "マルチサービス統一アクセス",
          "集中キー管理",
          "統一監視アラート"
        ]
      },
      "scalable": {
        "title": "高スケーラブル",
        "features": [
          "負荷分散とフェイルオーバー",
          "水平スケーリングサポート",
          "エンタープライズグレードパフォーマンス"
        ]
      }
    }
  },
  "performance": {
    "title": "パフォーマンス詳解",
    "subtitle": "GPT-Loadは「プロキシパス優先」の高性能設計哲学を採用し、すべての最適化はコアプロキシリクエストの究極の性能と安定性を保障するためです。",
    "coreFeatures": {
      "title": "コアパフォーマンス特性",
      "zeroIO": {
        "title": "ゼロI/O操作",
        "description": "プロキシリクエストの完全メモリ内処理"
      },
      "zeroCopy": {
        "title": "ゼロコピーストリーミング",
        "description": "直接ストリーミングデータ転送"
      },
      "lockFree": {
        "title": "ロックフリー並行処理",
        "description": "効率的なアトミック操作処理"
      },
      "lowResource": {
        "title": "極低リソース使用量",
        "description": "シングルコア128MBメモリで動作"
      }
    },
    "proxyPerformance": {
      "title": "究極のプロキシリクエスト性能",
      "description": "最低レイテンシと最高同時実行性を実現するため、プロキシリクエストのコアパスは「ゼロI/O操作」として設計されています。",
      "inMemory": {
        "title": "完全メモリ内サービス",
        "description": "ルーティングと意思決定に必要なすべてのデータ（グループ設定、キー情報など）は、サービス起動と設定変更時にメモリに事前ロードされます。プロキシリクエスト中にデータベースやディスクアクセスは不要です。"
      },
      "zeroCopyStreaming": {
        "title": "ゼロコピーストリーミング",
        "mechanism": {
          "title": "リアルタイム透過伝送メカニズム",
          "description": "GPT-Loadはリアルタイム透過伝送モードを採用し、上流サービスのデータストリームを中間バッファリング、行別読み取り、内容解析なしでクライアント応答に直接接続します。"
        },
        "comparison": {
          "title": "従来のストリーミング処理との違い",
          "traditional": {
            "label": "❌ 従来の方式",
            "flow": "行読み取り → 解析処理 → バッファ出力"
          },
          "gptLoad": {
            "label": "✅ GPT-Load方式",
            "flow": "上流データストリーム → 直接透過 → クライアント"
          }
        },
        "advantages": {
          "title": "コア優位性",
          "leftColumn": [
            {
              "title": "データパケット切断回避",
              "description": "行別読み取りによる元のデータパケット構造の破損を回避"
            },
            {
              "title": "究極の互換性",
              "description": "SSE、JSONストリーム、バイナリなどすべてのデータ形式を自然にサポート"
            },
            {
              "title": "無制限応答能力",
              "description": "理論的に任意サイズの上流応答データを処理可能"
            }
          ],
          "rightColumn": [
            {
              "title": "ゼロレイテンシ伝送",
              "description": "データ到着即転送、バッファ待機時間なし"
            },
            {
              "title": "極低メモリ使用量",
              "description": "データキャッシュなし、メモリ使用量は応答サイズに無関係"
            },
            {
              "title": "ネイティブ性能体験",
              "description": "応答速度が上流サービスのネイティブ性能に無限に近い"
            }
          ]
        }
      },
      "asyncLogging": {
        "title": "非同期ログ",
        "description": "リクエストログの記録は遅延非同期書き込み戦略を採用し、リクエスト-応答ライフサイクルから完全に分離され、ログ操作がリアルタイムプロキシ性能に干渉しないことを保証します。"
      }
    },
    "resourceManagement": {
      "title": "動的リソースと並行管理",
      "httpReuse": {
        "title": "効率的なHTTPクライアント再利用",
        "features": [
          "各グループに独立した、再利用可能な基盤接続を持つHTTPクライアントインスタンスを維持",
          "グループ設定（タイムアウトなど）が変更されると、システムはリアルタイムで動的に新しいクライアントインスタンスを生成し、設定の即時有効性を保証"
        ]
      },
      "atomicOperations": {
        "title": "アトミック操作とロックフリー設計",
        "description": "キーポーリングカウントなどの高頻度並行操作では、sync/atomicパッケージを使用してロックフリープログラミングを行い、ミューテックスロック（Mutex）による性能オーバーヘッドを回避します。"
      }
    },
    "asyncTasks": {
      "title": "非同期タスクとスケーラビリティ",
      "massiveKeys": {
        "title": "大量キーの非同期管理",
        "mechanism": {
          "title": "メカニズム",
          "description": "キーの追加と検証などの操作はすべて非同期バックグラウンドタスクとして実行されます。"
        },
        "advantage": {
          "title": "優位性",
          "description": "管理操作がサービスをブロックせず、理論的にシステムが数百万レベルの大量キーを管理することを可能にします。"
        }
      },
      "clusterSupport": {
        "title": "クラスターサポートと設定同期",
        "architecture": {
          "title": "アーキテクチャ",
          "description": "水平スケーリングのためのマルチノードMaster-Slaveアーキテクチャをサポート。"
        },
        "sync": {
          "title": "同期",
          "redis": "マスターノードの設定変更はRedis Pub/Sub通知でプッシュ",
          "consistency": "スレーブノードは内蔵の設定同期器を通じて更新を監視・取得し、クラスター間設定の最終一貫性を実現"
        }
      }
    },
    "lightweight": {
      "title": "軽量とリソース効率",
      "lowResource": {
        "title": "極低リソース使用量",
        "description": "Go言語の効率的なメモリ管理と上記の性能最適化（ゼロコピー、接続プール再利用など）により、GPT-Loadはコンパイル済みバイナリファイルとして実行され、追加のランタイム依存関係なしで極低リソース使用量を実現します。",
        "cpu": "シングルコアCPU",
        "memory": "128MBメモリ"
      },
      "versatility": {
        "title": "広い適用性",
        "description": "典型的なシングルマシンデプロイメントシナリオでは、低いCPUとメモリのみでサービスのスムーズな動作を保障できます。",
        "scenarios": [
          "大企業の高同時実行シナリオに対応",
          "リソース制限のある個人開発者環境に適合"
        ]
      }
    }
  },
  "configurationPage": {
    "title": "設定説明",
    "subtitle": "GPT-Loadは強力で柔軟な3層設定システムを採用し、異なるシナリオでの設定ニーズに対応します",
    "threeLayerArchitecture": {
      "title": "3層設定システムアーキテクチャ",
      "priorityTitle": "設定優先度",
      "groupConfig": {
        "name": "グループ設定",
        "priority": "最高優先度"
      },
      "systemSettings": {
        "name": "システム設定",
        "priority": "中程度優先度"
      },
      "environmentVars": {
        "name": "環境変数",
        "priority": "基本優先度"
      },
      "managerDescription": "設定システムは",
      "managerFunction": "を通じて設定の読み込み、統合、ホットアップデートを管理します"
    },
    "features": {
      "title": "設定機能",
      "items": [
        "• <strong>3層アーキテクチャ</strong>：環境、システム、グループ",
        "• <strong>優先度上書き</strong>：上位層が下位層を上書き",
        "• <strong>ホットアップデートサポート</strong>：実行時の動的効果",
        "• <strong>設定検証</strong>：厳密なデータ検証"
      ]
    },
    "useCases": {
      "title": "使用シナリオ",
      "items": [
        "• <strong>環境設定</strong>：基本サービスパラメータ",
        "• <strong>システム設定</strong>：グローバルビジネス設定",
        "• <strong>グループ設定</strong>：特定グループのカスタマイズ",
        "• <strong>動的調整</strong>：リアルタイムパフォーマンス最適化"
      ]
    },
    "managementMethods": {
      "title": "管理方法",
      "items": [
        "• <strong>環境変数</strong>：.envファイルまたはシステム環境",
        "• <strong>Web管理</strong>：オンライン設定インターフェース",
        "• <strong>APIインターフェース</strong>：プログラムによる設定管理",
        "• <strong>設定ファイル</strong>：JSON形式のインポート/エクスポート"
      ]
    },
    "bestPractices": {
      "title": "ベストプラクティス",
      "recommendations": {
        "title": "設定管理の推奨事項",
        "items": [
          "• <strong>統一管理</strong>：一貫性を確保するため、プラットフォームのWebインターフェースを使用した集中管理を推奨します。",
          "• <strong>定期監査</strong>：定期的に設定を見直し、使用されなくなったパラメータを削除してシステムを整理します。",
          "• <strong>バージョン管理</strong>：重要な設定変更については、追跡とロールバックのためにバージョン管理システムに記録することを推奨します。"
        ]
      },
      "warnings": {
        "title": "注意事項",
        "items": [
          "• <strong>機密情報</strong>：プロジェクト設定にパスワード、APIキーなどの機密情報を保存しないでください。環境変数を使用してください。",
          "• <strong>ホットアップデートの慎重な使用</strong>：ホットアップデート機能は強力ですが、本番環境で予期しない動作を引き起こさないよう慎重に使用してください。",
          "• <strong>パフォーマンスへの影響</strong>：頻繁な設定変更はシステムパフォーマンスに軽微な影響を与える可能性があります。オフピーク時間での操作を推奨します。"
        ]
      }
    },
    "furtherReading": {
      "title": "詳細情報",
      "environment": {
        "title": "環境設定",
        "description": "環境変数または.envファイルによるインフラストラクチャレベルの設定を確認します。"
      },
      "project": {
        "title": "プロジェクト設定",
        "description": "データベースで管理されるシステムレベルおよびグループレベルの動的設定を探索します。"
      },
      "cloudflareAiGateway": {
        "title": "Cloudflare AI Gateway",
        "description": "Cloudflare AI Gatewayをアップストリームプロキシとして設定し、AIサービスのパフォーマンスを最適化します。"
      }
    }
  },
  "cloudflareAIGateway": {
    "title": "Cloudflare AI Gateway アップストリーム設定",
    "subtitle": "このガイドでは、GPT-LoadのアップストリームプロキシとしてCloudflare AI Gatewayを設定し、Cloudflareのグローバルネットワークを通じてAIサービスリクエストのパフォーマンスと安定性を最適化する方法を説明します。",
    "importantNotice": {
      "title": "重要なお知らせ",
      "description": "Cloudflare AI Gatewayは特定のAIサービスプロバイダーのみをサポートしています。設定前に、必要なAIサービスチャネルがCloudflareのサポートリストに含まれていることを確認してください。APIプラットフォームのドロップダウンリストにチャネルがない場合、そのチャネルは利用できません。"
    },
    "step1": {
      "title": "Cloudflareに登録・ログイン",
      "dashboard": {
        "title": "Cloudflare Dashboardにアクセス",
        "description": "Cloudflare公式サイトでアカウントを登録し、コンソールにログインします"
      }
    },
    "step2": {
      "title": "AI Gateway管理ページにアクセス",
      "navigation": {
        "title": "AI Gatewayに移動",
        "selectMenu": {
          "title": "メニューを選択",
          "description": "左側のナビゲーションバーで順次選択：<strong>AI → AI Gateway</strong>"
        },
        "accessPage": {
          "title": "管理ページにアクセス",
          "description": "AI Gateway管理ページに入ると、現在のゲートウェイリストが表示されます"
        }
      },
      "screenshot": {
        "alt": "Cloudflare AI Gatewayメニューナビゲーションのスクリーンショット"
      }
    },
    "step3": {
      "title": "AI Gatewayを作成",
      "createButton": {
        "title": "ゲートウェイ作成をクリック",
        "description": "AI Gatewayページで<strong>&ldquo;ゲートウェイを作成&rdquo;</strong>ボタンをクリックして新しいゲートウェイの設定を開始します"
      },
      "configuration": {
        "title": "ゲートウェイパラメータを設定",
        "gatewayName": {
          "title": "ゲートウェイ名を設定",
          "note": "名前は任意に設定できます。ここでは&ldquo;gpt-load&rdquo;を例として使用します"
        },
        "defaultSettings": {
          "title": "デフォルト設定を維持",
          "description": "その他の設定項目はデフォルト値のままで構いません"
        },
        "important": {
          "title": "重要な設定項目",
          "items": [
            "• <strong>キャッシュを有効にしない</strong> - CFのキャッシュは一部のチャネルでバグがあります",
            "• <strong>ゲートウェイ認証を有効にしない</strong> - 認証機能は無効のままにしてください"
          ]
        }
      },
      "screenshot": {
        "alt": "Cloudflare AI Gateway作成フォームのスクリーンショット"
      }
    },
    "step4": {
      "title": "チャネルプロキシアドレスを取得",
      "endpoint": {
        "title": "APIエンドポイントを表示",
        "clickAPI": {
          "title": "APIボタンをクリック",
          "description": "作成完了後、右上角の<strong>&ldquo;API&rdquo;</strong>ボタンをクリックします"
        },
        "selectChannel": {
          "title": "対象チャネルを選択",
          "description": "APIプラットフォームのドロップダウンリストで必要なAIサービスプロバイダーを見つけ、対応するプロキシアドレスをコピーします"
        },
        "note": "各AIサービスプロバイダーには対応するプロキシアドレスがあります。正しいチャネルを選択してください"
      },
      "screenshot": {
        "alt": "Cloudflare AI Gateway APIエンドポイントリストのスクリーンショット"
      }
    },
    "step5": {
      "title": "GPT-Loadに設定",
      "configuration": {
        "title": "アップストリームアドレスを追加",
        "copyAddress": {
          "title": "プロキシアドレスをコピー",
          "description": "Cloudflare AI Gatewayから取得したプロキシアドレスを、GPT-Loadの対応するグループのアップストリームアドレス設定にコピーします"
        },
        "example": {
          "title": "アドレス例：",
          "explanation": "ここで<code className=\"bg-gray-100 px-1 rounded\">b7fbxxxxxfdba</code>はあなたのアカウントID、<code className=\"bg-gray-100 px-1 rounded\">gpt-load</code>はゲートウェイ名、<code className=\"bg-gray-100 px-1 rounded\">google-ai-studio</code>は具体的なAIサービスプロバイダーです"
        }
      },
      "screenshot": {
        "title": "GPT-Load設定例",
        "alt": "GPT-LoadでCloudflare AI Gatewayアップストリームアドレスを設定する例のスクリーンショット"
      }
    },
    "geminiNotice": {
      "title": "Geminiチャネル特別注意事項",
      "reminder": "重要なリマインダー",
      "description": "GeminiチャネルタイプをCloudflare AI Gatewayと組み合わせて使用する場合：",
      "items": [
        "<strong>推奨：</strong>Geminiネイティブフォーマットの呼び出しを使用、正常に動作します",
        "<strong>非推奨：</strong>Gemini公式のOpenAIフォーマット呼び出しを使用、出力が文字化けする可能性があります"
      ],
      "recommendation": "これはCloudflare AI Gatewayの既知の問題です。最適な互換性を確保するため、常にGeminiネイティブフォーマットを使用することを推奨します。"
    },
    "networkNotice": {
      "title": "ネットワークルーティング問題のリマインダー",
      "regionalBlock": "地域ブロックについてのリマインダー",
      "description1": "GPT-Loadサーバーが中国本土または香港に位置する場合、Cloudflareはリクエストを香港ノードにルーティングする可能性があります。",
      "description2": "多くのAIサービスプロバイダー（OpenAIなど）がこの地域をサポートしていないため、これにより",
      "description3": "エラーが発生する可能性があります。",
      "solution": "この問題が発生した場合は、サーバーのネットワーク環境を調整してから再試行してください。"
    },
    "verification": {
      "title": "設定を検証",
      "testConnection": "接続をテスト",
      "description": "設定完了後、テストリクエストを送信してプロキシが正常に動作することを確認してください。問題が発生した場合は、Cloudflare AI GatewayのステータスとGPT-Load設定が正しいかを確認してください。"
    },
    "relatedResources": {
      "title": "関連リソース",
      "officialDocs": "Cloudflare AI Gateway公式ドキュメント",
      "gptLoadConfig": "GPT-Load設定ガイド",
      "channelTypes": "チャネルタイプガイド"
    }
  },
  "environmentConfiguration": {
    "title": "環境設定",
    "characteristics": {
      "title": "設定特点",
      "loadingMethod": {
        "title": "加載方式",
        "items": [
          "• 環境変数または .env ファイルで",
          "• アプリケーション起動時に一度読み込み",
          "• 実行時に変更不可",
          "• 基本設定デフォルト値を提供"
        ]
      },
      "useCase": {
        "title": "適用シーン",
        "items": [
          "• サーバー基本パラメータ設定",
          "• データベース接続情報",
          "• セキュリティ認証キー",
          "• ログと監視設定"
        ]
      }
    },
    "serverConfig": {
      "title": "サーバー設定",
      "table": {
        "configItem": "設定項目",
        "envVar": "環境変数",
        "defaultValue": "デフォルト値",
        "description": "説明"
      },
      "items": [
        {
          "name": "サービスポート",
          "envVar": "PORT",
          "defaultValue": "3001",
          "description": "HTTP サーバーリスニングポート"
        },
        {
          "name": "サービスアドレス",
          "envVar": "HOST",
          "defaultValue": "0.0.0.0",
          "description": "HTTP サーバーバインドアドレス"
        },
        {
          "name": "読み取りタイムアウト",
          "envVar": "SERVER_READ_TIMEOUT",
          "defaultValue": "60",
          "description": "HTTP サーバー読み取りタイムアウト（秒）"
        },
        {
          "name": "書き込みタイムアウト",
          "envVar": "SERVER_WRITE_TIMEOUT",
          "defaultValue": "600",
          "description": "HTTP サーバー書き込みタイムアウト（秒）"
        },
        {
          "name": "アイドルタイムアウト",
          "envVar": "SERVER_IDLE_TIMEOUT",
          "defaultValue": "120",
          "description": "HTTP 接続アイドルタイムアウト（秒）"
        },
        {
          "name": "グレースフルシャットダウンタイムアウト",
          "envVar": "SERVER_GRACEFUL_SHUTDOWN_TIMEOUT",
          "defaultValue": "10",
          "description": "サービスグレースフルシャットダウン待機時間（秒）"
        },
        {
          "name": "スレーブノードモード",
          "envVar": "IS_SLAVE",
          "defaultValue": "false",
          "description": "クラスター展開時のスレーブノード識別子"
        },
        {
          "name": "タイムゾーン",
          "envVar": "TZ",
          "defaultValue": "Asia/Shanghai",
          "description": "タイムゾーンを指定"
        }
      ]
    },
    "authDatabaseConfig": {
      "title": "認証・データベース設定",
      "table": {
        "configItem": "設定項目",
        "envVar": "環境変数",
        "defaultValue": "デフォルト値",
        "description": "説明"
      },
      "items": [
        {
          "name": "管理キー",
          "envVar": "AUTH_KEY",
          "defaultValue": "sk-123456",
          "description": "管理端のアクセス認証キー、強固なパスワードに変更してください"
        },
        {
          "name": "データベース接続",
          "envVar": "DATABASE_DSN",
          "defaultValue": "./data/gpt-load.db",
          "description": "データベース接続文字列（DSN）またはファイルパス"
        },
        {
          "name": "Redis 接続",
          "envVar": "REDIS_DSN",
          "defaultValue": "-",
          "description": "Redis 接続文字列、空の場合はメモリストレージを使用"
        }
      ]
    },
    "performanceCorsConfig": {
      "title": "パフォーマンス・CORS設定",
      "table": {
        "configItem": "設定項目",
        "envVar": "環境変数",
        "defaultValue": "デフォルト値",
        "description": "説明"
      },
      "items": [
        {
          "name": "最大同時リクエスト",
          "envVar": "MAX_CONCURRENT_REQUESTS",
          "defaultValue": "100",
          "description": "システムが許可する最大同時リクエスト数"
        },
        {
          "name": "CORS 有効化",
          "envVar": "ENABLE_CORS",
          "defaultValue": "true",
          "description": "クロスオリジンリソース共有を有効にするかどうか"
        },
        {
          "name": "許可オリジン",
          "envVar": "ALLOWED_ORIGINS",
          "defaultValue": "*",
          "description": "許可されるオリジン、カンマ区切り"
        },
        {
          "name": "許可メソッド",
          "envVar": "ALLOWED_METHODS",
          "defaultValue": "GET,POST,PUT,DELETE,OPTIONS",
          "description": "許可される HTTP メソッド"
        },
        {
          "name": "許可ヘッダー",
          "envVar": "ALLOWED_HEADERS",
          "defaultValue": "*",
          "description": "許可されるリクエストヘッダー、カンマ区切り"
        },
        {
          "name": "認証情報許可",
          "envVar": "ALLOW_CREDENTIALS",
          "defaultValue": "false",
          "description": "認証情報の送信を許可するかどうか"
        }
      ]
    },
    "logConfig": {
      "title": "ログ設定",
      "table": {
        "configItem": "設定項目",
        "envVar": "環境変数",
        "defaultValue": "デフォルト値",
        "description": "説明"
      },
      "items": [
        {
          "name": "ログレベル",
          "envVar": "LOG_LEVEL",
          "defaultValue": "info",
          "description": "ログレベル：debug, info, warn, error"
        },
        {
          "name": "ログフォーマット",
          "envVar": "LOG_FORMAT",
          "defaultValue": "text",
          "description": "ログフォーマット：text, json"
        },
        {
          "name": "ファイルログ有効",
          "envVar": "LOG_ENABLE_FILE",
          "defaultValue": "false",
          "description": "ファイルログ出力を有効にするかどうか"
        },
        {
          "name": "ログファイルパス",
          "envVar": "LOG_FILE_PATH",
          "defaultValue": "./data/logs/app.log",
          "description": "ログファイル保存パス"
        }
      ]
    },
    "proxyConfig": {
      "title": "プロキシ設定",
      "priority": {
        "title": "優先度説明",
        "description": "プロキシ設定は3層優先度をサポート：",
        "fallback": "グループ設定 > システム設定 > 環境設定",
        "envNote": "環境プロキシはグローバルフォールバック設定として機能し、システム設定とグループ設定のどちらもプロキシ設定がない場合のみ有効。"
      },
      "autoRead": "GPT-Load は環境変数からプロキシ設定を自動的に読み取り、上流 AI サービスプロバイダーへのリクエストに使用します。",
      "settings": {
        "title": "プロキシ設定",
        "table": {
          "configItem": "設定項目",
          "envVar": "環境変数",
          "defaultValue": "デフォルト値",
          "description": "説明"
        },
        "items": [
          {
            "name": "HTTP プロキシ",
            "envVar": "HTTP_PROXY",
            "defaultValue": "-",
            "description": "HTTP リクエスト用プロキシサーバーアドレス"
          },
          {
            "name": "HTTPS プロキシ",
            "envVar": "HTTPS_PROXY",
            "defaultValue": "-",
            "description": "HTTPS リクエスト用プロキシサーバーアドレス"
          },
          {
            "name": "プロキシなし",
            "envVar": "NO_PROXY",
            "defaultValue": "-",
            "description": "プロキシアクセスが不要なホストまたはドメイン、カンマ区切り"
          }
        ]
      },
      "formats": {
        "title": "サポートされているプロトコルフォーマット",
        "items": [
          {
            "protocol": "HTTP",
            "format": "http://user:pass@host:port"
          },
          {
            "protocol": "HTTPS",
            "format": "https://user:pass@host:port"
          },
          {
            "protocol": "SOCKS5",
            "format": "socks5://user:pass@host:port"
          }
        ]
      }
    },
    "summary": {
      "title": "環境設定まとめ",
      "description": "環境設定は GPT-Load 設定システムの基盤で、アプリケーションの実行に必要なインフラストラクチャパラメータを提供する主要な役割を担っています。",
      "features": [
        "<strong>基本サービスパラメータ</strong>：アプリケーションの起動と実行が依存するコアサービスを定義し、サーバーポート、データベース接続など。",
        "<strong>管理特性</strong>：<code>.env</code> ファイルまたはオペレーティングシステムの環境変数で設定し、アプリケーション起動時にロードし、設定の安定性と一貫性を保証。",
        "<strong>使用上の利点</strong>：システムに信頼性の高いデフォルト値を提供し、同時に機密情報（データベースパスワード、APIキーなど）をコードベースから分離し、セキュリティを強化。"
      ]
    }
  }
}