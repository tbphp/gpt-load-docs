{
  "nav": {
    "home": "ホーム",
    "docs": "ドキュメント",
    "sponsor": "スポンサー", 
    "github": "GitHub",
    "menu": "ドキュメントメニュー",
    "close": "メニューを閉じる"
  },
  "hero": {
    "title": "GPT-Load",
    "subtitle": "高性能AI APIトランスペアレントプロキシ",
    "description": "Go 1.23+で開発されたエンタープライズグレードのAI APIプロキシサービス。OpenAI、Google Gemini、Anthropic Claudeなどの複数のAIプロバイダーをサポート。インテリジェントキー管理、ロードバランシング、高同期処理、包括的監視機能を提供。",
    "buttons": {
      "docs": "ドキュメント",
      "install": "インストール",
      "github": "GitHub"
    },
    "tech": {
      "backend": "バックエンド言語",
      "database": "データストレージ",
      "cache": "キャッシュシステム",
      "frontend": "管理インターフェース"
    },
    "quickStart": {
      "title": "クイックスタート",
      "security": {
        "title": "セキュリティ警告",
        "message": "'your-secure-key-here'を強力なキーに置き換えてください！デフォルトまたは簡単なキーの使用は深刻なセキュリティリスクをもたらします。"
      },
      "access": "管理パネルにアクセス："
    }
  },
  "architecture": {
    "title": "システムアーキテクチャ",
    "subtitle": "高性能トランスペアレントプロキシアーキテクチャ",
    "description": "GPT-Loadは3層アーキテクチャ設計を採用し、高性能・高可用性のAI APIプロキシサービスを提供します",
    "components": {
      "client": {
        "title": "クライアントアプリケーション",
        "description": "WebおよびモバイルアプリがOpenAI API標準フォーマットで呼び出し",
        "items": ["HTTP/HTTPSリクエスト", "ベアラートークン認証", "JSONフォーマット交流"]
      },
      "proxy": {
        "title": "GPT-Loadプロキシ層",
        "description": "リクエスト転送と管理を担当するコアプロキシサービス",
        "items": ["トランスペアレントプロキシ", "キー管理", "ロードバランシング", "リクエストログ"]
      },
      "providers": {
        "title": "AIサービスプロバイダー",
        "description": "複数のAIサービスの統一アクセス",
        "items": ["OpenAI API", "Google Gemini", "Anthropic Claude", "その他の互換サービス"]
      }
    },
    "infrastructure": {
      "title": "インフラストラクチャ",
      "mysql": {
        "title": "MySQL 8.2+",
        "description": "永続ストレージ",
        "details": ["設定データ", "ユーザー情報", "リクエストログ"]
      },
      "redis": {
        "title": "Redis",
        "description": "キャッシュとロック",
        "details": ["キーキャッシュ", "分散ロック", "セッションストレージ"]
      },
      "management": {
        "title": "管理インターフェース",
        "description": "Webコントロールパネル",
        "details": ["ビジュアル設定", "監視ダッシュボード", "ログビューア"]
      }
    }
  },
  "features": {
    "title": "コア機能",
    "subtitle": "エンタープライズグレード機能",
    "highPerformance": {
      "title": "高性能アーキテクチャ",
      "description": "Go 1.23+で構築、ゼロコピーストリーミング、コルーチン同時実行モデル、高同時処理をサポート",
      "technical": "Goコルーチン + HTTP/2接続プーリング"
    },
    "transparentProxy": {
      "title": "トランスペアレントプロキシ",
      "description": "ネイティブAPIフォーマットを完全保持、コード変更なしで複数のAIサービスにアクセス可能",
      "technical": "OpenAI + Gemini + Anthropicサポート"
    },
    "keyManagement": {
      "title": "インテリジェントキー管理",
      "description": "グループ管理、動的ローテーション、自動リトライ、高サービス可用性を確保",
      "technical": "Redisキャッシュ + 障害回復"
    },
    "loadBalancing": {
      "title": "ロードバランシング",
      "description": "マルチアップストリームサポート、重み設定、ヘルスチェック、使用可能ノードへのインテリジェントルーティング",
      "technical": "重み付きラウンドロビン + ヘルスチェック"
    },
    "hotReload": {
      "title": "ホットリロード設定",
      "description": "3層設定システム：環境変数、システム設定、グループ設定、ホットアップデートをサポート",
      "technical": "環境変数 → システム設定 → グループ設定"
    },
    "clusterSupport": {
      "title": "クラスターサポート",
      "description": "水平スケーリング、分散デプロイメント、高可用性アーキテクチャ設計",
      "technical": "Docker + Kubernetesサポート"
    },
    "security": {
      "title": "セキュリティ機能",
      "description": "Bearer Token認証、グループ分離、リクエストログ、機密情報マスキング",
      "technical": "JWT + アクセス制御 + 監査ログ"
    },
    "admin": {
      "title": "管理ダッシュボード",
      "description": "Vue 3モダンインターフェース、リアルタイム監視、ログ表示、設定管理",
      "technical": "Vue 3 + TypeScript + Naive UI"
    },
    "developerFriendly": {
      "title": "開発者フレンドリー",
      "description": "完全なRESTful API、詳細ドキュメント、Dockerワンクリックデプロイメント",
      "technical": "OpenAPI + Docker Compose"
    }
  },
  "quickStart": {
    "title": "クイックスタート",
    "subtitle": "5分間の素早い体験",
    "steps": [
      {
        "title": "ダウンロード・インストール",
        "description": "Dockerでワンクリックデプロイメント"
      },
      {
        "title": "キー設定",
        "description": "AIサービスプロバイダーのAPIキーを追加"
      },
      {
        "title": "使用開始",
        "description": "プロキシアドレス経由でAIサービスにアクセス"
      }
    ],
    "getStarted": "今すぐ始める"
  },
  "cta": {
    "title": "GPT-Loadを今すぐ使い始める",
    "subtitle": "数分でデプロイし、高性能AI APIプロキシサービスをお楽しみください",
    "buttons": {
      "quickDeploy": "クイックデプロイ",
      "viewDocs": "ドキュメントを見る",
      "github": "GitHub",
      "sponsor": "スポンサー"
    }
  },
  "footer": {
    "description": "複数の大規模モデルサービスに統一された負荷分散とキー管理を提供する高性能AIゲートウェイ。",
    "product": "製品",
    "community": "コミュニティ",
    "resources": "デプロイメント",
    "links": {
      "docs": "ドキュメント",
      "changelog": "更新ログ",
      "sponsor": "スポンサー",
      "github": "GitHub",
      "issues": "問題報告",
      "telegram": "Telegram",
      "standalone": "スタンドアローン",
      "cluster": "クラスター"
    },
    "copyright": "全著作権所有",
    "license": "MITライセンス",
    "openSource": "オープンソース"
  },
  "dataFlow": "データフローアーキテクチャ",
  "infrastructure": "インフラストラクチャコンポーネント",
  "deploymentOptions": {
    "title": "柔軟なデプロイメントオプション",
    "standalone": {
      "title": "スタンドアローンデプロイメント",
      "features": [
        "Docker Composeワンクリック起動",
        "完全なMySQL + Redisを含む",
        "開発および小規模本番に適合"
      ]
    },
    "cluster": {
      "title": "クラスターデプロイメント",
      "features": [
        "Master/Slaveアーキテクチャ",
        "水平スケーリングサポート",
        "高可用性保証"
      ]
    }
  },
  "systemRequirements": "システム要件",
  "runtime": "ランタイム環境",
  "storage": "データストレージ",
  "cache": "キャッシュサービス",
  "containerRuntime": "コンテナランタイム",
  "productionReady": {
    "title": "本番対応のエンタープライズアーキテクチャ",
    "description": "スタンドアローンデプロイメントから分散クラスターまで、開発環境から本番環境まで、GPT-Loadは完全なソリューションを提供",
    "runtime": "ランタイム環境",
    "persistence": "データ永続化",
    "cacheAndLock": "キャッシュ&ロック",
    "adminUI": "管理インターフェース"
  },
  "performanceComponent": {
    "title": "技術特性",
    "subtitle": "Go 1.23+ベースの高性能アーキテクチャ設計で、エンタープライズアプリケーションに信頼性の高いプロキシサービスを提供",
    "metrics": {
      "defaultConcurrency": {
        "label": "デフォルト同時実行数",
        "description": "MAX_CONCURRENT_REQUESTSデフォルト値"
      },
      "goVersion": {
        "label": "Goバージョン要件",
        "description": "最低バージョン要件"
      },
      "connectionPool": {
        "label": "接続プール設定",
        "description": "最大アイドル接続数/ホスト毎接続数"
      },
      "requestTimeout": {
        "label": "リクエストタイムアウト",
        "description": "デフォルトリクエストタイムアウト"
      }
    },
    "comparison": {
      "title": "パフォーマンス比較",
      "subtitle": "直接API呼び出し vs GPT-Loadプロキシ使用のパフォーマンス差異の比較",
      "headers": {
        "metric": "パフォーマンス指標",
        "directApi": "直接API呼び出し",
        "withGptLoad": "GPT-Load使用",
        "improvement": "パフォーマンス向上"
      },
      "items": {
        "configManagement": {
          "metric": "設定管理",
          "without": "静的設定ファイル",
          "with": "動的ホットリロード",
          "improvement": "再起動不要"
        },
        "keyManagement": {
          "metric": "キー管理",
          "without": "手動ローテーション",
          "with": "自動障害回復",
          "improvement": "スマートブラックリスト"
        },
        "clusterDeployment": {
          "metric": "クラスターデプロイメント",
          "without": "複雑な選出メカニズム",
          "with": "IS_SLAVEフラグ",
          "improvement": "シンプル設定"
        },
        "monitoring": {
          "metric": "監視機能",
          "without": "基本ログ",
          "with": "Web管理インターフェース",
          "improvement": "リアルタイム統計"
        }
      }
    },
    "monitoring": {
      "title": "リアルタイム監視機能",
      "features": {
        "detailedStats": {
          "title": "詳細統計",
          "description": "リクエスト数、レスポンス時間、エラー率などの包括的な監視"
        },
        "healthCheck": {
          "title": "ヘルスチェック",
          "description": "リアルタイムでサービス状態を監視し、異常を迅速に発見・処理"
        },
        "performanceAnalysis": {
          "title": "パフォーマンス分析",
          "description": "パフォーマンスのボトルネックを深く分析し、システム設定を最適化"
        }
      },
      "dashboard": {
        "title": "監視ダッシュボード",
        "metrics": {
          "totalRequests": "🟢 総リクエスト数:",
          "avgResponse": "⚡ 平均レスポンス:",
          "activeKeys": "🔑 アクティブキー:",
          "errorRate": "❌ エラー率:"
        }
      }
    }
  },
  "quickStartComponent": {
    "title": "クイックスタート",
    "subtitle": "3ステップでGPT-Loadを開始",
    "description": "Docker Composeによるクイックデプロイメント、完全なデータベースとキャッシュサービスを含む",
    "steps": {
      "clone": {
        "title": "1. プロジェクトをクローン",
        "description": "GitHubから完全なプロジェクトコードをダウンロード"
      },
      "configure": {
        "title": "2. 環境設定",
        "description": "環境設定ファイルをコピーして編集"
      },
      "start": {
        "title": "3. サービス開始",
        "description": "Docker Composeでワンクリック起動"
      }
    },
    "requirements": {
      "title": "システム要件",
      "runtime": "ランタイム環境",
      "storage": "データストレージ",
      "cache": "キャッシュサービス",
      "containerRuntime": "コンテナランタイム",
      "viewDocs": "詳細デプロイメントドキュメントを表示"
    },
    "codeComments": {
      "copyEnv": "環境設定ファイルをコピー",
      "editConfig": "設定を編集（オプション）",
      "mainConfig": "主要设定项目:",
      "startServices": "サービス開始（MySQLとRedisを含む）",
      "accessAdmin": "管理インターフェースにアクセス"
    }
  },
  "docs": {
    "quickStart": "クイックスタート",
    "introduction": "プロジェクト紹介",
    "deployment": "デプロイメント",
    "standalone": "スタンドアローン",
    "source": "ソースコード",
    "cluster": "クラスター",
    "clawCloud": "Claw Cloud",
    "configuration": "設定管理",
    "environment": "環境設定",
    "project": "プロジェクト設定",
    "management": "管理設定",
    "cloudflareAigateway": "Cloudflare AI Gateway",
    "architectureDesign": "アーキテクチャ設計",
    "performance": "パフォーマンス",
    "routingStrategy": "ルーティング戦略",
    "keyManagement": "キー管理",
    "channels": "チャンネル",
    "geminiOpenai": "Gemini公式OpenAI互換",
    "integrations": "統合ガイド",
    "rooCode": "Roo Code",
    "claudeCodeRouter": "Claude Code Router", 
    "newApi": "New API",
    "cherryStudio": "Cherry Studio",
    "sponsor": "スポンサー",
    "contributors": "貢献者",
    "faq": "よくある質問"
  },
  "geminiOpenai": {
    "title": "Gemini 公式 OpenAI 互換フォーマット",
    "subtitle": "GPT-Load は Google Gemini の公式 OpenAI 互換フォーマットをサポートし、標準の OpenAI SDK とツールを使用して Gemini モデルの強力な機能にアクセスできます。",
    "notice": "注意：これはフォーマット変換ではなく、Gemini公式のOpenAI互換フォーマットの透明プロキシです。詳細は公式ドキュメントを参照してください：",
    "configuration": {
      "title": "GPT-Load での設定",
      "steps": [
        {
          "title": "ステップ1：Geminiグループの作成",
          "items": [
            "• <strong>グループ名</strong>：gemini（推奨名）",
            "• <strong>チャネルタイプ</strong>：&ldquo;gemini&rdquo; タイプを選択",
            "• <strong>アップストリームアドレス</strong>：https://generativelanguage.googleapis.com",
            "• <strong>API キー</strong>：Gemini API Key を追加"
          ]
        },
        {
          "title": "ステップ2：プロキシエンドポイントの取得",
          "items": []
        }
      ],
      "groupConfig": {
        "title": "グループ設定"
      },
      "importantNotes": {
        "title": "重要事項",
        "items": [
          "• 公式 Google の generativelanguage.googleapis.com エンドポイントを使用",
          "• API キーが有効で十分なクォータがあることを確認",
          "• グループ作成後、自動的に OpenAI 互換フォーマットをサポート",
          "• ロードバランシングとフェイルオーバーをサポート"
        ]
      },
      "proxyEndpoint": {
        "format": "プロキシエンドポイント形式：",
        "description": "GPT-Load は Gemini グループ専用の OpenAI 互換エンドポイントを生成します",
        "fullPath": "完全な呼び出しパス",
        "endpoint": "http://localhost:3001/proxy/gemini/v1beta/openai/chat/completions"
      }
    },
    "examples": {
      "title": "クライアント呼び出し例",
      "cherryStudio": {
        "title": "Cherry Studio 設定",
        "recommended": "推奨：",
        "description": "Cherry Studio は優秀な AI クライアントで、Gemini OpenAI 互換フォーマットを完全にサポートします",
        "stepsTitle": "設定手順",
        "steps": [
          "Cherry Studio を開く",
          "新しいチャネルを作成し、プロバイダータイプで OpenAI を選択",
          "ベース URL をプロキシエンドポイントに設定",
          "プロキシキーを入力",
          "Gemini モデルの使用を開始"
        ],
        "paramsTitle": "設定パラメータ",
        "params": [
          {
            "label": "プロバイダータイプ：",
            "value": "OpenAI"
          },
          {
            "label": "ベース URL：",
            "value": "http://localhost:3001/proxy/gemini/v1beta/openai/",
            "note": "（/ で終わる必要があります）"
          },
          {
            "label": "API Key：",
            "value": "your-proxy-key"
          }
        ]
      },
      "curl": {
        "title": "cURL 直接呼び出し",
        "code": "curl -X POST \"http://localhost:3001/proxy/gemini/v1beta/openai/chat/completions\" \\\\\n  -H \"Authorization: Bearer your-proxy-key\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"model\": \"gemini-2.5-flash\",\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"hi\"\n      }\n    ]\n  }'"
      }
    },
    "notes": {
      "title": "注意事項",
      "items": [
        "• GPT-Load のバージョンが最新であることを確認し、Gemini OpenAI 互換フォーマットをサポートする",
        "• Cherry Studio のベース URL はスラッシュ（/）で終わる必要があり、そうでないと呼び出しが失敗する可能性があります",
        "• Gemini API Key には十分なクォータと正しい権限が必要です"
      ]
    }
  },
  "standalone": {
    "title": "スタンドアロンデプロイメント",
    "subtitle": "スタンドアロンデプロイメントは GPT-Load の最もシンプルなデプロイメント方法で、個人ユーザーや小規模チームがすぐに始められます。軽量なクイックスタートから完全機能のオプションデプロイメントまでサポートします。",
    "quickStart": {
      "title": "クイックスタート",
      "lightweight": {
        "title": "軽量デプロイメント",
        "description": "SQLiteデータベースとメモリストレージを使用し、個人使用やクイック体験に最適"
      }
    },
    "requirements": {
      "title": "システム要件",
      "items": [
        "Docker 20.10+ と Docker Compose",
        "Linux/macOS/Windows オペレーティングシステム",
        "最低128MBメモリと1GBディスク容量"
      ]
    },
    "installation": {
      "title": "インストール手順",
      "step1": {
        "title": "作業ディレクトリの作成",
        "comment": "# ディレクトリを作成して移動"
      },
      "step2": {
        "title": "セキュリティパラメータのダウンロードと設定",
        "dockerComment": "# Docker Compose設定をダウンロード",
        "envComment": "# 環境変数設定をダウンロード",
        "securityConfig": {
          "title": "必須実行：管理キーの変更",
          "editFile": "すぐに編集",
          "changeFrom": "ファイルで、次を変更：",
          "changeTo": "安全なキーに置き換える：",
          "reminder": {
            "title": "注意：",
            "message": "独自のランダムキーを生成してください。上記のサンプルキーは使用しないでください！"
          }
        }
      },
      "step3": {
        "title": "サービスの開始",
        "comment": "# GPT-Loadサービスを開始"
      },
      "step4": {
        "title": "デプロイメントの検証",
        "accessAdmin": "管理インターフェースにアクセス：",
        "useAuthKey": "カスタム管理キーでログイン",
        "fileSet": "つまり、",
        "login": "ファイルに設定された",
        "value": "の値",
        "securityTip": {
          "title": "セキュリティのヒント：",
          "message": "管理キーを安全に保管し、ログ、ドキュメント、またはコードに平文で保存しないでください。"
        }
      }
    },
    "security": {
      "warning": {
        "title": "重要なセキュリティ警告",
        "message": "デプロイメント前にデフォルトの管理キーを変更する必要があります。そうしないと深刻なセキュリティリスクがあります！"
      },
      "requirements": {
        "title": "セキュリティキー要件：",
        "items": [
          "最低20文字",
          "大文字、小文字、数字、特殊記号を含む",
          "辞書の単語や個人情報の使用を避ける",
          "推奨形式：sk-prod-[32文字のランダム文字列]"
        ]
      },
      "risk": "⚠️ 弱いキーを使用すると、悪意のあるシステムアクセスにつながり、データ漏洩やサービス悪用を引き起こす可能性があります！"
    },
    "commonCommands": {
      "title": "一般的なコマンド",
      "items": [
        {
          "title": "ステータス確認",
          "code": "docker compose ps"
        },
        {
          "title": "ログ表示",
          "code": "docker compose logs -f"
        },
        {
          "title": "サービス再起動",
          "code": "docker compose down && docker compose up -d"
        },
        {
          "title": "バージョン更新",
          "code": "docker compose pull && docker compose down && docker compose up -d"
        }
      ]
    },
    "optional": {
      "title": "オプションデプロイメント",
      "performance": {
        "title": "パフォーマンス向上",
        "description": "MySQL/PostgreSQLデータベースとRedisキャッシュを設定してシステムパフォーマンスと信頼性を向上"
      },
      "database": {
        "title": "データベース設定",
        "configs": [
          {
            "name": "MySQL設定",
            "steps": [
              "1. <code class=\"bg-gray-100 px-1 rounded\">docker-compose.yml</code>を編集し、MySQLサービスのコメントアウトを解除：<div class=\"bg-gray-900 text-gray-100 p-4 rounded-lg text-sm\"><code>&nbsp;&nbsp;depends_on:<br />&nbsp;&nbsp;&nbsp;&nbsp;mysql:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;condition: service_healthy<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart: true<br /><br />mysql:<br />&nbsp;&nbsp;image: mysql:8.2<br />&nbsp;&nbsp;container_name: gpt-load-mysql<br />&nbsp;&nbsp;restart: always<br />&nbsp;&nbsp;environment:<br />&nbsp;&nbsp;&nbsp;&nbsp;MYSQL_ROOT_PASSWORD: 123456<br />&nbsp;&nbsp;&nbsp;&nbsp;MYSQL_DATABASE: gpt-load<br />&nbsp;&nbsp;volumes:<br />&nbsp;&nbsp;&nbsp;&nbsp;- ./data/mysql:/var/lib/mysql<br />&nbsp;&nbsp;healthcheck:<br />&nbsp;&nbsp;&nbsp;&nbsp;test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\"]<br />&nbsp;&nbsp;&nbsp;&nbsp;interval: 5s<br />&nbsp;&nbsp;&nbsp;&nbsp;timeout: 5s<br />&nbsp;&nbsp;&nbsp;&nbsp;retries: 10</code></div>",
              "2. <code class=\"bg-gray-100 px-1 rounded\">.env</code>ファイルでデータベース接続を設定：<div class=\"bg-gray-900 text-gray-100 p-4 rounded-lg text-sm\"><code>DATABASE_DSN=root:123456@tcp(mysql:3306)/gpt-load?charset=utf8mb4&parseTime=True&loc=Local</code></div>"
            ]
          },
          {
            "name": "PostgreSQL設定",
            "steps": [
              "1. <code class=\"bg-gray-100 px-1 rounded\">docker-compose.yml</code>を編集し、PostgreSQLサービスのコメントアウトを解除：<div class=\"bg-gray-900 text-gray-100 p-4 rounded-lg text-sm\"><code>&nbsp;&nbsp;depends_on:<br />&nbsp;&nbsp;&nbsp;&nbsp;postgres:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;condition: service_healthy<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart: true<br /><br />postgres:<br />&nbsp;&nbsp;image: \"postgres:16\"<br />&nbsp;&nbsp;container_name: gpt-load-postgres<br />&nbsp;&nbsp;environment:<br />&nbsp;&nbsp;&nbsp;&nbsp;POSTGRES_USER: postgres<br />&nbsp;&nbsp;&nbsp;&nbsp;POSTGRES_PASSWORD: 123456<br />&nbsp;&nbsp;&nbsp;&nbsp;POSTGRES_DB: gpt-load<br />&nbsp;&nbsp;volumes:<br />&nbsp;&nbsp;&nbsp;&nbsp;- ./data/postgres:/var/lib/postgresql/data<br />&nbsp;&nbsp;healthcheck:<br />&nbsp;&nbsp;&nbsp;&nbsp;test: [\"CMD-SHELL\", \"pg_isready -U postgres -d \"]<br />&nbsp;&nbsp;&nbsp;&nbsp;interval: 5s<br />&nbsp;&nbsp;&nbsp;&nbsp;timeout: 5s<br />&nbsp;&nbsp;&nbsp;&nbsp;retries: 10</code></div>",
              "2. <code class=\"bg-gray-100 px-1 rounded\">.env</code>ファイルでデータベース接続を設定：<div class=\"bg-gray-900 text-gray-100 p-4 rounded-lg text-sm\"><code>DATABASE_DSN=postgres://postgres:123456@postgres:5432/gpt-load?sslmode=disable</code></div>"
            ]
          }
        ]
      },
      "redis": {
        "title": "Redis設定",
        "step1": {
          "description": "1. 編集",
          "action": "、Redisサービスのコメントアウトを解除：",
          "code": "&nbsp;&nbsp;depends_on:<br />&nbsp;&nbsp;&nbsp;&nbsp;redis:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;condition: service_healthy<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart: true<br /><br />redis:<br />&nbsp;&nbsp;image: redis:latest<br />&nbsp;&nbsp;container_name: gpt-load-redis<br />&nbsp;&nbsp;restart: always<br />&nbsp;&nbsp;healthcheck:<br />&nbsp;&nbsp;&nbsp;&nbsp;test: [\"CMD\", \"redis-cli\", \"ping\"]<br />&nbsp;&nbsp;&nbsp;&nbsp;interval: 5s<br />&nbsp;&nbsp;&nbsp;&nbsp;timeout: 3s<br />&nbsp;&nbsp;&nbsp;&nbsp;retries: 3"
        },
        "step2": {
          "description": "2. Redis接続を設定",
          "action": "ファイル："
        }
      },
      "restart": {
        "title": "サービスの再起動",
        "description": "設定完了後、すべてのサービスを再起動：",
        "stopComment": "# サービス停止",
        "startComment": "# サービス再起動"
      }
    },
    "troubleshooting": {
      "title": "トラブルシューティング",
      "commonIssues": {
        "title": "よくある問題"
      },
      "items": [
        {
          "title": "管理インターフェースにログインできない",
          "description": "正しい管理キーを使用しているか確認してください：",
          "solution": "<ul class=\"text-gray-600 text-sm space-y-1 ml-4\"><li>• <code class=\"bg-gray-100 px-1 rounded\">.env</code>ファイルのAUTH_KEYが変更されていることを確認</li><li>• サービス再起動後に新しいキーが有効になります：<code class=\"bg-gray-100 px-1 rounded\">docker compose restart</code></li><li>• キーは大文字小文字を区別します。正確な入力を確認してください</li></ul>"
        },
        {
          "title": "ポート競合",
          "description": "ポート3001が使用されている場合、<code class=\"bg-gray-100 px-1 rounded\">.env</code>ファイルで変更できます：",
          "solution": "<div class=\"bg-gray-100 p-2 rounded text-sm\"><code>PORT=3002</code></div>"
        },
        {
          "title": "データベース接続失敗",
          "description": "データベースサービスが正常に動作しているか確認：",
          "solution": "<div class=\"bg-gray-100 p-2 rounded text-sm\"><code>docker compose logs mysql</code></div>"
        },
        {
          "title": "メモリ不足",
          "description": "システムに十分なメモリリソースがあることを確認してください。データベースサービスを有効にした後、最低1GBの利用可能メモリを推奨",
          "solution": ""
        }
      ]
    },
    "nextSteps": {
      "title": "次のステップ",
      "description": "デプロイメント完了後、以下ができます：",
      "items": [
        "プロキシキーの設定とAIサービスグループの管理",
        "AIサービスプロバイダのAPIキーの追加と管理",
        "システム設定とパフォーマンスパラメータの調整",
        "APIプロキシサービスの使用開始"
      ],
      "buttons": {
        "configuration": "設定ガイドを表示",
        "management": "管理設定"
      }
    }
  },
  "clawCloud": {
    "title": "Claw Cloud デプロイメント",
    "subtitle": "Claw Cloudを使用してGPT-Loadを無料でデプロイ。サーバー不要、ワンクリックデプロイメントで素早い体験。",
    "warning": {
      "title": "⚠️ 重要なお知らせ：データのバックアップを必ず行ってください！",
      "description": "Claw Cloudは実験的な無料サービスで、安定性の保証はありません。以下のリスクがあります：",
      "risks": [
        "サービスが不安定になったり一時的に利用できなくなる可能性があります",
        "サービス障害によりデータが失われる可能性があります",
        "無料サービスにはSLA保証がありません",
        "インスタンスが再起動または再割り当てされる可能性があります"
      ],
      "recommendation": {
        "title": "🔄 強く推奨いたします：",
        "items": [
          "設定データを定期的にエクスポートしてバックアップしてください",
          "すべての重要なAPIキーと設定情報を保存してください",
          "本番環境では安定した有料クラウドサービスの使用をご検討ください",
          "Claw Cloudはテストと学習目的にのみご使用ください"
        ]
      }
    },
    "overview": {
      "title": "サービス概要",
      "service": {
        "title": "Claw Cloud 無料デプロイメント",
        "description": "SQLiteデータベースとメモリストレージを使用した軽量クラウドデプロイメントソリューション、完全無料の月額5ドルクォータ"
      },
      "features": {
        "freeQuota": {
          "title": "無料クォータ",
          "description": "月額5ドルの無料使用クォータ"
        },
        "globalDeploy": {
          "title": "グローバルデプロイメント",
          "description": "複数の地域へのデプロイメントをサポートし、アクセス速度を最適化"
        },
        "simpleAuth": {
          "title": "シンプル認証",
          "description": "GitHubアカウントのみで開始可能"
        }
      }
    },
    "prerequisites": {
      "title": "前提条件",
      "accountRequirement": {
        "title": "アカウント要件",
        "description": "Claw Cloudサービスを使用するには、6か月以上の履歴があるGitHubアカウントが必要です"
      },
      "serviceFeatures": {
        "title": "サービス機能",
        "freeQuota": {
          "title": "無料クォータ",
          "items": [
            "• 月額5ドルの無料使用クォータ",
            "• 個人ユーザーや小規模テストに適しています",
            "• クレジットカード認証不要",
            "• クォータ超過後は有料で継続使用可能"
          ]
        },
        "techSpecs": {
          "title": "技術仕様",
          "items": [
            "• SQLiteデータベースを使用",
            "• メモリストレージ（Redisなし）",
            "• 自動バックアップと復旧",
            "• 内蔵監視とログ機能"
          ]
        }
      }
    },
    "deploymentSteps": {
      "title": "デプロイメント手順",
      "step1": {
        "title": "登録とログイン",
        "githubLogin": {
          "title": "GitHubでClaw Cloudにログイン",
          "description": "Claw CloudのWebサイトにアクセスし、'Get started for free'をクリックして、GitHubアカウントでログインしてください。"
        },
        "regionSelection": {
          "title": "デプロイメント地域の選択",
          "description": "ログイン後、左上角で適切なデプロイメント地域を選択してください：",
          "recommended": "推奨地域：",
          "regions": [
            "• Singapore - シンガポール",
            "• Japan - 日本"
          ]
        },
        "image": {
          "alt": "Claw Cloud 地域選択インターフェース",
          "caption": "Claw Cloud 地域選択インターフェース"
        }
      },
      "step2": {
        "title": "アプリケーション作成",
        "launchApp": {
          "title": "アプリケーション作成の開始",
          "description": "中央の「App Launchpad」をクリックし、右上角の「Create App」をクリックしてアプリケーション作成を開始します"
        },
        "image": {
          "alt": "Claw Cloud アプリケーション作成インターフェース",
          "caption": "App Launchpad - アプリケーション作成"
        }
      },
      "step3": {
        "title": "アプリケーション設定",
        "form": {
          "title": "アプリケーション設定フォームの入力",
          "basic": {
            "title": "Basic（基本情報）",
            "appName": {
              "label": "Application Name",
              "value": "gpt-load"
            },
            "image": {
              "label": "Image",
              "value": "Publicを選択"
            },
            "imageName": {
              "label": "Image Name",
              "value": "ghcr.io/tbphp/gpt-load:latest"
            }
          },
          "usage": {
            "title": "Usage（リソース設定）",
            "usage": {
              "label": "Usage",
              "value": "Fixed"
            },
            "replicas": {
              "label": "Replicas",
              "value": "1"
            },
            "cpu": {
              "label": "CPU",
              "value": "1（必要に応じて調整可能）"
            },
            "memory": {
              "label": "Memory",
              "value": "512M（必要に応じて調整可能）"
            }
          },
          "resourceTip": {
            "title": "リソース設定の推奨事項",
            "description": "5ドルクォータの計算に基づいて、推奨設定はCPU: 1、Memory: 512Mです。個人使用でネットワークトラフィックが少ない場合は、コスト削減のため設定を下げることができます。"
          }
        },
        "network": {
          "title": "Network（ネットワーク設定）",
          "containerPort": {
            "label": "Container Port",
            "value": "3001"
          },
          "publicAccess": {
            "label": "Public Access",
            "value": "✅ 有効"
          }
        },
        "environment": {
          "title": "Environment Variables（環境変数）",
          "description": "「Environment Variables」をクリックして以下の設定を追加してください：",
          "authKey": {
            "label": "AUTH_KEY",
            "value": "sk-your-custom-key"
          },
          "warning": "⚠️ sk-your-custom-keyを独自のパスワードに置き換えてください。デフォルト値を使用したり、公開で共有したりしないでください"
        },
        "storage": {
          "title": "Local Storage（ストレージ設定）",
          "localStorage": {
            "label": "Local Storage",
            "value": "「Add」をクリックしてストレージを追加"
          },
          "capacity": {
            "label": "Capacity",
            "value": "1G"
          },
          "mountPath": {
            "label": "Mount Path",
            "value": "/app/data"
          },
          "note": "設定完了後、「Confirm」をクリックしてストレージ設定を保存してください"
        },
        "image": {
          "alt": "Claw Cloud アプリケーション設定インターフェース",
          "caption": "アプリケーション設定フォーム"
        }
      },
      "step4": {
        "title": "アプリケーションデプロイ",
        "startDeploy": {
          "title": "デプロイメント開始",
          "description": "設定完了後、右上角の「Deploy Application」ボタンをクリックしてアプリケーションのデプロイメントを開始します"
        },
        "completed": {
          "title": "デプロイメント完了",
          "description": "全体の作成プロセスは非常にシンプルで便利です！デプロイメント完了後、パブリックアドレスが有効になるまで数分間お待ちください。"
        },
        "waitService": {
          "title": "サービス開始を待機",
          "description": "「Public Address」のステータスが緑色の「Available」になるまで辛抱強くお待ちください。その後、GPT-Loadサービスにアクセスできます"
        }
      }
    },
    "accessUsage": {
      "title": "アクセスと使用",
      "firstAccess": {
        "title": "初回アクセス",
        "getAddress": {
          "title": "アクセスアドレス取得",
          "description": "デプロイメント完了後、Claw Cloudコンソールでアプリケーションのパブリックアドレスを確認できます",
          "example": {
            "label": "アクセスアドレスの例",
            "value": "https://ax***fta.region.clawcloudrun.com"
          }
        },
        "login": {
          "title": "管理インターフェースへのログイン",
          "description": "アプリケーションアドレスにアクセスし、設定したAUTH_KEYを使用して管理インターフェースにログインしてください",
          "securityTip": {
            "title": "セキュリティのヒント",
            "description": "AUTH_KEYが安全であることを確認し、公共の場所や文書で共有しないでください"
          }
        }
      },
      "apiUsage": {
        "title": "API使用",
        "proxyAddress": {
          "title": "APIプロキシアドレス",
          "label": "APIプロキシエンドポイント：",
          "value": "https://ax***fta.region.clawcloudrun.com/proxy/{group_name}"
        },
        "example": {
          "title": "使用例",
          "code": "curl -X POST https://ax***fta.region.clawcloudrun.com/proxy/openai/v1/chat/completions \\\n  -H \"Authorization: Bearer your-auth-key\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"model\": \"gpt-4o-mini\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'"
        }
      }
    },
    "updateMaintenance": {
      "title": "更新とメンテナンス",
      "versionUpdate": {
        "title": "バージョン更新",
        "steps": {
          "title": "更新手順",
          "items": [
            "App Launchpadに入り、作成したアプリケーションを選択します",
            "右上角の「Update」ボタンをクリックします",
            "更新ページで、設定を変更する必要はありません。直接「Update」ボタンをクリックしてください",
            "更新と再起動の完了をお待ちください"
          ]
        },
        "autoUpdate": {
          "title": "自動更新",
          "description": "更新プロセスは自動的に最新バージョンのイメージをプルします。手動設定は不要です"
        }
      },
      "monitoring": {
        "title": "監視とログ",
        "appMonitoring": {
          "title": "アプリケーション監視",
          "items": [
            "• Claw Cloudコンソールでアプリケーションステータスを確認",
            "• リソース使用量とコストを監視",
            "• アプリケーション実行ログを表示",
            "• アラートと通知を設定"
          ]
        },
        "costControl": {
          "title": "コスト管理",
          "items": [
            "• 月次使用量とコストを定期的に確認",
            "• 実際の使用状況に基づいてリソース設定を調整",
            "• 予算とコストアラートを設定",
            "• トラフィック低下時のサービス一時停止を検討"
          ]
        }
      }
    },
    "troubleshooting": {
      "title": "トラブルシューティング",
      "commonIssues": {
        "title": "よくある問題",
        "appNotStart": {
          "title": "アプリケーションが起動しない",
          "cause": "考えられる原因：イメージプルの失敗、設定エラー、またはリソース不足",
          "solution": "解決策：アプリケーションログを確認し、イメージアドレスと設定が正しいことを確認してください"
        },
        "accessFailed": {
          "title": "パブリックアドレスにアクセスできない",
          "cause": "考えられる原因：DNS伝播の遅延またはネットワーク問題",
          "solution": "解決策：数分間待ってから再試行し、ネットワーク接続を確認してください"
        },
        "authFailed": {
          "title": "認証失敗",
          "cause": "考えられる原因：AUTH_KEYの設定エラーまたは未設定",
          "solution": "解決策：環境変数の設定を確認し、AUTH_KEYが正しいことを確認してください"
        }
      }
    },
    "nextSteps": {
      "title": "次のステップ",
      "description": "Claw Cloudデプロイメント完了後、以下のことができます：",
      "tasks": [
        "Web管理インターフェースを通じてAIサービスを設定",
        "APIキーを追加してプロキシサービスの使用を開始",
        "使用状況とコストを監視",
        "必要に応じてより高い設定にアップグレード"
      ],
      "buttons": {
        "configuration": "設定ガイド",
        "management": "管理設定"
      }
    }
  },
  "imageViewer": {
    "closeButton": "閉じる (Esc)",
    "instructions": "Escキーまたは背景をクリックして閉じる",
    "clickToEnlarge": "画像をクリックして拡大表示"
  },
  "docsQuickStart": {
    "title": "クイックスタート",
    "subtitle": "以下の手順でGPT-Loadを迅速に起動・実行します。",
    "quickLaunch": {
      "title": "クイック起動",
      "lightweightDeployment": {
        "title": "軽量デプロイメント",
        "description": "SQLiteデータベースとメモリストレージを使用、個人使用とクイックテストに最適"
      }
    },
    "requirements": {
      "title": "システム要件",
      "docker": "Docker 20.10+ と Docker Compose",
      "os": "Linux/macOS/Windows オペレーティングシステム",
      "resources": "最低128MBメモリと1GBディスク容量"
    },
    "installation": {
      "title": "インストール手順"
    },
    "security": {
      "title": "重要なセキュリティ通知",
      "warning": "デプロイ前にデフォルトの管理キーを変更する必要があります！",
      "requirements": {
        "complex": "複素キーには最低20文字を使用",
        "characters": "大文字、小文字、数字、特殊文字を含む",
        "avoid": "決して使用しない",
        "simpleKeys": "やその他のデフォルト/シンプルキー",
        "productionRisk": "本番環境で弱いキーを使用すると深刻なセキュリティリスクが生じます"
      },
      "recommendedFormat": "推奨キー形式",
      "randomString": "ランダム文字列",
      "characters": "文字"
    },
    "steps": {
      "createDirectory": {
        "title": "作業ディレクトリを作成",
        "comment": "ディレクトリを作成して入る"
      },
      "downloadConfig": {
        "title": "設定ファイルをダウンロード",
        "dockerComment": "Docker Compose設定をダウンロード",
        "envComment": "環境変数設定をダウンロード",
        "securityConfig": {
          "title": "セキュリティ設定を即座に変更",
          "editFile": "編集",
          "changeFrom": "ファイル、次の内容を変更：",
          "changeTo": "強いキーに："
        }
      },
      "startServices": {
        "title": "サービス開始",
        "comment": "GPT-Loadサービスを開始"
      },
      "verify": {
        "title": "デプロイメント確認",
        "accessAdmin": "管理インターフェースにアクセス",
        "useAuthKey": "使用する",
        "fileSet": "ファイルに設定された",
        "login": "で管理インターフェースにログイン"
      }
    },
    "commands": {
      "title": "一般的なコマンド",
      "checkStatus": "ステータス確認",
      "viewLogs": "ログ表示",
      "restart": "サービス再起動",
      "update": "バージョン更新"
    },
    "nextSteps": {
      "description": "MySQL/PostgreSQLの使用やクラスターデプロイメントなど、より多くのデプロイメントオプションを学びたいですか？完全な",
      "deploymentGuide": "デプロイメントガイド",
      "period": "をご覧ください。"
    }
  },
  "architectureDesign": {
    "title": "システムアーキテクチャ",
    "subtitle": "GPT-Loadの技術アーキテクチャと設計理念の詳細理解",
    "overview": {
      "title": "アーキテクチャ概要",
      "highlightTitle": "高性能透明プロキシアーキテクチャ",
      "highlightDescription": "Go言語ベースの高性能OpenAI APIプロキシサービス、マルチキーローテーション、負荷分散、インテリジェントフェイルオーバーをサポート"
    },
    "components": {
      "apiGateway": {
        "title": "APIゲートウェイ",
        "description": "統合APIエントリポイントとルーティング"
      },
      "loadBalancer": {
        "title": "負荷分散",
        "description": "インテリジェントキーローテーションと分散"
      },
      "dataStorage": {
        "title": "データストレージ",
        "description": "MySQL + Redis二重ストレージ"
      },
      "securityMonitor": {
        "title": "セキュリティ監視",
        "description": "レート制限、認証、監視"
      }
    },
    "systemComponents": {
      "title": "システムコンポーネント",
      "coreService": {
        "title": "コアサービス層",
        "apiProxy": {
          "title": "APIプロキシサービス",
          "features": ["HTTP/HTTPS透明プロキシ", "リクエストルーティングと転送", "ストリーミングレスポンス処理", "エラーハンドリングと再試行"]
        },
        "loadBalancer": {
          "title": "負荷分散装置",
          "features": ["ラウンドロビンアルゴリズム", "重み割り当て戦略", "ヘルスチェック機構", "自動フェイルオーバー"]
        }
      },
      "managementLayer": {
        "title": "管理サービス層",
        "webInterface": {
          "title": "Web管理インターフェース",
          "features": ["Vue 3 + TypeScript", "Naive UIコンポーネントライブラリ", "リアルタイム監視ダッシュボード", "設定管理インターフェース"]
        },
        "restApi": {
          "title": "REST API",
          "features": ["キー管理インターフェース", "統計データインターフェース", "システム設定インターフェース", "監視メトリクスインターフェース"]
        }
      },
      "dataLayer": {
        "title": "データストレージ層",
        "mysql": {
          "title": "MySQLデータベース",
          "features": ["キーと設定の永続化", "ユーザー認証データ", "履歴統計レコード", "システムログストレージ"]
        },
        "redis": {
          "title": "Redisキャッシュ",
          "features": ["キーステータスキャッシュ", "レート制限カウンター", "分散ロック機構", "セッション状態管理"]
        }
      }
    },
    "dataFlow": {
      "title": "データフロー",
      "steps": [
        {
          "title": "クライアントリクエスト",
          "description": "APIゲートウェイがOpenAI互換リクエストを受信"
        },
        {
          "title": "キー選択",
          "description": "負荷分散装置が利用可能なAPIキーを選択"
        },
        {
          "title": "リクエスト転送",
          "description": "プロキシサービスがOpenAI APIにリクエストを転送"
        },
        {
          "title": "レスポンス処理",
          "description": "ストリーミングレスポンス処理してクライアントに返却"
        },
        {
          "title": "データ記録",
          "description": "統計データとログをデータベースに記録"
        }
      ]
    },
    "deploymentArchitectures": {
      "title": "デプロイメントアーキテクチャ",
      "standalone": {
        "title": "スタンドアロンデプロイメント",
        "scenarios": {
          "title": "適用シナリオ",
          "items": ["中小規模アプリケーション", "開発テスト環境", "個人プロジェクト使用"]
        }
      },
      "cluster": {
        "title": "クラスターデプロイメント",
        "scenarios": {
          "title": "適用シナリオ",
          "items": ["大規模本番環境", "高可用性要件", "エンタープライズグレードアプリケーション"]
        }
      }
    },
    "techStack": {
      "title": "技術スタック",
      "backend": {
        "title": "バックエンド技術",
        "items": ["Go 1.23+", "Gin Webフレームワーク", "GORM ORM", "Go-Redis"]
      },
      "frontend": {
        "title": "フロントエンド技術",
        "items": ["Vue 3", "TypeScript", "Naive UI", "Vite"]
      },
      "infrastructure": {
        "title": "インフラストラクチャ",
        "items": ["MySQL 8.2+", "Redis", "Docker", "Nginx"]
      }
    },
    "designPrinciples": {
      "title": "設計原則",
      "highPerformance": {
        "title": "高性能",
        "description": "Go言語ベースの高同時性処理能力、数千QPSのリクエスト処理をサポート"
      },
      "highAvailability": {
        "title": "高可用性",
        "description": "自動フェイルオーバー、ヘルスチェック、分散デプロイメントでサービス可用性を保証"
      },
      "scalability": {
        "title": "スケーラビリティ",
        "description": "モジュラー設計とマイクロサービスアーキテクチャで水平スケーリングと機能拡張をサポート"
      },
      "transparentProxy": {
        "title": "透明プロキシ",
        "description": "OpenAI APIと完全互換、既存コードの変更なしで統合可能"
      }
    }
  },
  "seo": {
    "pages": {
      "home": {
        "title": "GPT-Load - 高性能AI APIトランスペアレントプロキシ",
        "description": "エンタープライズグレードのAI APIプロキシサービス。各AIプロバイダーのネイティブAPIフォーマットを完全に保持。キーローテーション、マルチグループ管理、ロードバランシング機能を提供。",
        "keywords": "GPT, OpenAI, API, トランスペアレントプロキシ, ロードバランシング, キーローテーション, Go, 高性能, AIプロキシ, Gemini, Claude"
      },
      "docs": {
        "quickStart": {
          "title": "クイックスタート - GPT-Load デプロイメントガイド",
          "description": "Dockerワンクリック起動で5分でGPT-Loadをデプロイ。完全なデータベースとキャッシュサービスを含む。",
          "keywords": "GPT-Loadデプロイメント, Dockerデプロイメント, クイックスタート, AIプロキシインストール"
        }
      },
      "introduction": {
        "title": "プロジェクト紹介 - GPT-Load アーキテクチャと技術スタック",
        "description": "GPT-Loadのコアコンセプト、技術アーキテクチャ、サポートされているAIサービス、エンタープライズ機能の詳細。",
        "keywords": "GPT-Loadアーキテクチャ, AIプロキシ技術, 透明プロキシ原理, マイクロサービスアーキテクチャ, Go言語"
      }
    }
  },
  "keyManagement": {
    "title": "インテリジェントキー管理",
    "subtitle": "GPT-Loadはポーリング負荷分散、自動障害検出と復旧メカニズムを通じてインテリジェントキー管理機構を採用し、サービスの高可用性と安定性を確保します。",
    "polling": {
      "title": "ポーリングメカニズム",
      "objective": {
        "title": "目標",
        "description": "グループ内の複数キー間での要求の公平な負荷分散を実現。"
      },
      "implementation": {
        "title": "実装方式",
        "atomicCounter": {
          "title": "アトミックカウンター",
          "description": "高同時実行下でのポーリング一貫性と公平性を保証"
        },
        "statusFilter": {
          "title": "ステータスフィルタリング",
          "description": "ポーリング範囲はグループ内の「有効」ステータスのキーに限定"
        }
      }
    },
    "retry": {
      "title": "リトライと障害処理",
      "trigger": {
        "title": "トリガーシナリオ",
        "description": "リクエストが失敗した場合（HTTPステータス≥400またはネットワークエラー）に自動的にトリガー"
      },
      "process": {
        "title": "処理フロー",
        "step1": {
          "title": "失敗マーク",
          "description": "現在失敗したキーの失敗カウントを1増やす"
        },
        "step2": {
          "title": "新しいキーを取得",
          "description": "ポーリングメカニズムを通じてグループ内の次の利用可能なキーを即座に取得"
        },
        "step3": {
          "title": "透明リトライ",
          "description": "新しいキーを使用してリクエストを再実行、クライアントには透明"
        },
        "step4": {
          "title": "リトライ上限",
          "description": "設定された最大リトライ回数。すべての試行が失敗した場合、最終エラーをクライアントに返す"
        }
      }
    },
    "blacklist": {
      "title": "キーブラックリストと復旧",
      "mechanism": {
        "title": "ブラックリストメカニズム",
        "trigger": {
          "title": "トリガー条件",
          "description": "キーの累積失敗回数がブラックリスト閾値に達した時"
        },
        "actions": {
          "title": "実行アクション",
          "items": [
            "キーステータスを「無効」に更新",
            "ポーリングキューから除去、新しいリクエストを受け取らない"
          ]
        }
      }
    },
    "recovery": {
      "title": "復旧メカニズム",
      "timing": {
        "title": "トリガータイミング",
        "description": "キー検証間隔サイクルに従って実行されるバックグラウンド定期タスク"
      },
      "process": {
        "title": "復旧フロー",
        "step1": {
          "title": "ヘルスチェック",
          "description": "ブラックリストされたキーを使用して検証エンドポイント（モデルリストなど）をリクエスト"
        },
        "step2": {
          "title": "検証成功",
          "items": [
            "キーステータスを「有効」に復元",
            "失敗カウントを0にリセット",
            "ポーリングキューに再追加"
          ]
        },
        "step3": {
          "title": "検証失敗",
          "description": "「無効」ステータスを維持、次の検査サイクルを待つ"
        }
      }
    },
    "advantages": {
      "title": "メカニズムの利点",
      "loadBalancing": {
        "title": "負荷分散",
        "description": "アトミックカウンターが高同時実行下での公平なポーリングを保証"
      },
      "autoRecovery": {
        "title": "自動復旧",
        "description": "定期的なヘルスチェックと障害キーの自動復旧"
      },
      "faultIsolation": {
        "title": "障害分離",
        "description": "障害キーを迅速に特定し、サービスの安定性を確保"
      }
    }
  },
  "routingStrategy": {
    "title": "ルーティング戦略",
    "subtitle": "GPT-Loadのパス処理メカニズムを理解し、柔軟なパス設定方法をマスターして、クライアントとアップストリームサービス間の正しい接続を確保する。",
    "coreProcessing": {
      "title": "パス処理原理",
      "transparentPrinciple": {
        "title": "透過原則",
        "description": "GPT-Loadは透過原則に従い、パス置換のみを担当し、最大限の柔軟性を維持します。コアロジックは、クライアントリクエスト内のプロキシプレフィックスを実際のアップストリームアドレスに置き換えることです。",
        "rule": "置換ルール：GPT-Loadサービスアドレス + /proxy/ + グループ名    置換先    アップストリームアドレス"
      }
    },
    "processingFlow": {
      "title": "処理フロー例",
      "serviceAddress": "サービスアドレス",
      "upstreamAddress": "アップストリームアドレス",
      "groupName": "グループ名",
      "clientRequest": "クライアントリクエスト",
      "actualRequest": "実際のリクエスト"
    },
    "configurationMethods": {
      "title": "設定方法詳細",
      "description": "OpenRouterを例に（完全パス：https://openrouter.ai/api/v1/chat/completions）、グループ名がopenrouter、チャンネルタイプがopenai：",
      "method1": {
        "title": "設定方法1：ドメイン分離",
        "gptLoadConfig": "GPT-Load設定",
        "upstreamAddress": "アップストリームアドレス",
        "testPath": "テストパス",
        "clientConfig": "クライアント設定",
        "cherryStudioApi": "Cherry Studio APIアドレス"
      },
      "method2": {
        "title": "設定方法2：APIパスを含む（推奨）",
        "gptLoadConfig": "GPT-Load設定",
        "upstreamAddress": "アップストリームアドレス",
        "testPath": "テストパス",
        "clientConfig": "クライアント設定",
        "cherryStudioApi": "Cherry Studio APIアドレス"
      },
      "method3": {
        "title": "設定方法3：完全バージョンパス",
        "gptLoadConfig": "GPT-Load設定",
        "upstreamAddress": "アップストリームアドレス",
        "testPath": "テストパス",
        "clientConfig": "クライアント設定",
        "cherryStudioApi": "Cherry Studio APIアドレス",
        "note": "注意：/で終わる必要があり、クライアントの自動v1パス追加を避ける"
      }
    },
    "bestPractices": {
      "title": "ベストプラクティス",
      "configurationSuggestions": {
        "title": "設定提案",
        "items": [
          "• 設定方法2を推奨、構造が明確で理解しやすい",
          "• まず完全なアップストリームAPIアドレスを確定",
          "• クライアントの特性に応じて適切なパス分割点を選択",
          "• 設定の一貫性と保守性を維持"
        ]
      },
      "debuggingTips": {
        "title": "デバッグのコツ",
        "items": [
          "• GPT-Loadリクエストログを確認してアップストリームアドレスを確認",
          "• テストパスを使用して設定の正確性を検証",
          "• クライアントのパス連結ルールに注意",
          "• 異なるシナリオに適応するため柔軟に設定を調整"
        ]
      }
    },
    "summary": {
      "title": "設定要点まとめ",
      "description": "パス処理ロジックの理解が鍵：GPT-Loadは単純な文字列置換のみを担当し、柔軟な設定方法で様々なクライアントとアップストリームサービスのニーズに対応できます。",
      "corePrinciple": "コア原則",
      "principle": "テストアドレスとクライアントリクエストアドレスがGPT-Loadプロキシを経由した後、最終的なアップストリームアドレスが正確であることを確保。"
    }
  },
  "channels": {
    "title": "チャネルタイプ",
    "subtitle": "GPT-Loadは複数の主流AIサービスプロバイダーをサポートし、ネイティブAPIフォーマットと体験を保持したまま、完全に透明なプロキシアクセスを提供します。",
    "supportedServices": {
      "title": "サポートされているサービス",
      "openai": {
        "title": "OpenAI",
        "features": [
          "Chat Completions API",
          "Embeddings API",
          "Images API",
          "Audio API",
          "Files API",
          "Models API"
        ]
      },
      "gemini": {
        "title": "Google Gemini",
        "features": [
          "Generate Content API",
          "ストリーミングサポート",
          "マルチモーダル入力",
          "安全設定",
          "生成設定",
          "モデル管理"
        ]
      },
      "claude": {
        "title": "Anthropic Claude",
        "features": [
          "Messages API",
          "ストリーミング応答",
          "システムプロンプト",
          "ツール使用",
          "トークンカウント",
          "モデルアクセス"
        ]
      },
      "extensibility": {
        "title": "拡張性",
        "description": "アーキテクチャ設計により、標準化されたインターフェースアダプテーション層を通じて、新しいAIサービスプロバイダーを迅速に追加し、統合アクセスを実現します。"
      }
    },
    "proxyFormat": {
      "title": "プロキシフォーマット",
      "unifiedEndpoint": {
        "title": "統一プロキシエンドポイント",
        "format": "http://localhost:3001/proxy/{group-name}"
      },
      "parameters": {
        "title": "パラメータ説明",
        "items": [
          "group-name: 管理画面で作成されたグループ名",
          "任意のパスサフィックスをサポート、完全透明転送",
          "元のAPIのすべての機能特性を保持"
        ]
      },
      "authentication": {
        "title": "認証方式",
        "items": [
          "元のサービスのAPI Keyを使用",
          "Authorization: Bearer {token} ヘッダーで渡す",
          "グループレベルのキーローテーションと負荷分散をサポート"
        ]
      }
    },
    "openaiFormat": {
      "title": "OpenAI形式接続",
      "authentication": {
        "title": "認証設定",
        "description": "GPT-LoadはOpenAI SDKと完全に互換性があり、base_urlを変更するだけでシームレスに切り替えできます。"
      },
      "examples": {
        "original": {
          "title": "元のOpenAIリクエスト",
          "code": "curl https://api.openai.com/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n    \"model\": \"gpt-4\",\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"Hello!\"\n      }\n    ]\n  }'"
        },
        "proxy": {
          "title": "GPT-Loadプロキシ経由",
          "code": "curl http://localhost:3001/proxy/openai/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n    \"model\": \"gpt-4\",\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"Hello!\"\n      }\n    ]\n  }'"
        }
      },
      "migration": {
        "step1": "APIベースアドレスの変更のみ、その他のコードは完全に変更不要",
        "step2": "すべてのOpenAI SDK機能をサポート"
      },
      "endpoints": {
        "title": "サポートされているエンドポイント",
        "main": {
          "title": "コアAPI",
          "items": [
            "/v1/chat/completions - チャット補完",
            "/v1/embeddings - ベクトル埋め込み",
            "/v1/images/generations - 画像生成",
            "/v1/audio/speech - 音声合成",
            "/v1/audio/transcriptions - 音声文字起こし"
          ]
        },
        "other": {
          "title": "その他のAPI",
          "items": [
            "/v1/models - モデル一覧",
            "/v1/files - ファイル管理",
            "/v1/fine_tuning/jobs - ファインチューニングジョブ",
            "/v1/assistants - アシスタントAPI",
            "/v1/threads - 会話スレッド"
          ]
        }
      },
      "sdk": {
        "title": "SDK設定",
        "python": {
          "title": "Python SDK",
          "code": "from openai import OpenAI\n\nclient = OpenAI(\n    api_key=\"your-openai-api-key\",\n    base_url=\"http://localhost:3001/proxy/openai\"\n)\n\nresponse = client.chat.completions.create(\n    model=\"gpt-4\",\n    messages=[\n        {\"role\": \"user\", \"content\": \"Hello!\"}\n    ]\n)"
        },
        "nodejs": {
          "title": "Node.js SDK",
          "code": "import OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: 'your-openai-api-key',\n  baseURL: 'http://localhost:3001/proxy/openai'\n});\n\nconst response = await openai.chat.completions.create({\n  model: 'gpt-4',\n  messages: [\n    { role: 'user', content: 'Hello!' }\n  ]\n});"
        }
      }
    },
    "geminiFormat": {
      "title": "Gemini形式接続",
      "authentication": {
        "title": "認証設定",
        "description": "Google Gemini APIと完全に互換性があり、マルチモーダル入力やストリーミング応答を含むすべてのネイティブ機能をサポートします。"
      },
      "examples": {
        "original": {
          "title": "元のGeminiリクエスト",
          "code": "curl https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=$API_KEY \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"contents\": [{\n      \"parts\": [{\n        \"text\": \"Write a story about a magic backpack.\"\n      }]\n    }]\n  }'"
        },
        "proxy": {
          "title": "GPT-Loadプロキシ経由",
          "code": "curl http://localhost:3001/proxy/gemini/v1beta/models/gemini-pro:generateContent?key=$API_KEY \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"contents\": [{\n      \"parts\": [{\n        \"text\": \"Write a story about a magic backpack.\"\n      }]\n    }]\n  }'"
        }
      },
      "migration": {
        "step1": "リクエストベースアドレスをGPT-Loadプロキシアドレスに置換",
        "step2": "すべてのパラメータと認証方式は変更せず"
      },
      "endpoints": {
        "title": "サポートされているエンドポイント",
        "content": {
          "title": "コンテンツ生成",
          "items": [
            "/v1beta/models/*/generateContent - コンテンツ生成",
            "/v1beta/models/*/streamGenerateContent - ストリーミング生成",
            "/v1beta/models/*/countTokens - トークンカウント",
            "/v1beta/models/*/embedContent - ベクトル埋め込み"
          ]
        },
        "models": {
          "title": "モデル管理",
          "items": [
            "/v1beta/models - モデル一覧",
            "/v1beta/models/* - モデル詳細",
            "/v1beta/tuning/createTunedModel - ファインチューニング作成",
            "/v1beta/tuning/tunedModels - ファインチューニング一覧"
          ]
        }
      },
      "sdk": {
        "title": "SDK設定",
        "python": {
          "title": "Python SDK",
          "code": "import google.generativeai as genai\n\n# API Key設定\ngenai.configure(\n    api_key=\"your-gemini-api-key\",\n    client_options={\"api_endpoint\": \"http://localhost:3001/proxy/gemini\"}\n)\n\nmodel = genai.GenerativeModel('gemini-pro')\nresponse = model.generate_content(\"Hello!\")"
        },
        "http": {
          "title": "HTTPリクエスト",
          "code": "POST http://localhost:3001/proxy/gemini/v1beta/models/gemini-pro:generateContent?key=YOUR_API_KEY\nContent-Type: application/json\n\n{\n  \"contents\": [{\n    \"parts\": [{\n      \"text\": \"Explain how AI works\"\n    }]\n  }]\n}"
        }
      }
    },
    "claudeFormat": {
      "title": "Claude形式接続",
      "authentication": {
        "title": "認証設定",
        "description": "Anthropic Claude APIと完全に互換性があり、Messages API、ツール使用、ストリーミング応答などすべての高度な機能をサポートします。"
      },
      "examples": {
        "original": {
          "title": "元のClaudeリクエスト",
          "code": "curl https://api.anthropic.com/v1/messages \\\n  -H \"Content-Type: application/json\" \\\n  -H \"x-api-key: $ANTHROPIC_API_KEY\" \\\n  -H \"anthropic-version: 2023-06-01\" \\\n  -d '{\n    \"model\": \"claude-3-sonnet-20240229\",\n    \"max_tokens\": 1024,\n    \"messages\": [\n      {\"role\": \"user\", \"content\": \"Hello, Claude\"}\n    ]\n  }'"
        },
        "proxy": {
          "title": "GPT-Loadプロキシ経由",
          "code": "curl http://localhost:3001/proxy/claude/v1/messages \\\n  -H \"Content-Type: application/json\" \\\n  -H \"x-api-key: $ANTHROPIC_API_KEY\" \\\n  -H \"anthropic-version: 2023-06-01\" \\\n  -d '{\n    \"model\": \"claude-3-sonnet-20240229\",\n    \"max_tokens\": 1024,\n    \"messages\": [\n      {\"role\": \"user\", \"content\": \"Hello, Claude\"}\n    ]\n  }'"
        }
      },
      "migration": {
        "step1": "APIベースアドレスをGPT-Loadプロキシエンドポイントに更新",
        "step2": "すべてのヘッダー情報とリクエスト形式は変更せず"
      },
      "endpoints": {
        "title": "サポートされているエンドポイント",
        "main": {
          "title": "コアAPI",
          "items": [
            "/v1/messages - メッセージ会話",
            "/v1/messages/streaming - ストリーミング会話",
            "/v1/complete - テキスト補完（レガシー）",
            "/v1/tools - ツール使用"
          ]
        },
        "models": {
          "title": "モデル管理",
          "items": [
            "/v1/models - 利用可能モデル一覧",
            "Claude-3全シリーズモデルをサポート",
            "カスタムmax_tokens制限をサポート",
            "システムプロンプト設定をサポート"
          ]
        }
      },
      "sdk": {
        "title": "SDK設定",
        "python": {
          "title": "Python SDK",
          "code": "from anthropic import Anthropic\n\nclient = Anthropic(\n    api_key=\"your-claude-api-key\",\n    base_url=\"http://localhost:3001/proxy/claude\"\n)\n\nmessage = client.messages.create(\n    model=\"claude-3-sonnet-20240229\",\n    max_tokens=1024,\n    messages=[\n        {\"role\": \"user\", \"content\": \"Hello!\"}\n    ]\n)"
        },
        "http": {
          "title": "HTTPリクエスト",
          "code": "POST http://localhost:3001/proxy/claude/v1/messages\nContent-Type: application/json\nx-api-key: YOUR_API_KEY\nanthropic-version: 2023-06-01\n\n{\n  \"model\": \"claude-3-sonnet-20240229\",\n  \"max_tokens\": 1024,\n  \"messages\": [\n    {\"role\": \"user\", \"content\": \"Hello!\"}\n  ]\n}"
        }
      }
    },
    "groupManagement": {
      "title": "グループ管理",
      "creation": {
        "title": "グループ作成",
        "steps": [
          "GPT-Load管理画面にアクセス",
          "「環境管理」->「グループ設定」に移動",
          "「新規グループ」をクリックしてグループ情報を入力",
          "対応するチャネルタイプ（OpenAI/Gemini/Claude）を選択",
          "アップストリームアドレスとテストパスを設定",
          "API キーを追加して接続をテスト",
          "設定を保存してグループを有効化"
        ]
      },
      "configuration": {
        "title": "設定要点",
        "items": [
          "グループ名はプロキシパスの一部になります",
          "一つのグループに複数のAPI キーを設定可能",
          "自動的にキーローテーションと負荷分散を実行",
          "キーヘルスチェックとフェイルオーバーをサポート",
          "リクエスト頻度制限とクォータ管理を設定可能"
        ]
      }
    },
    "migration": {
      "title": "移行ガイド",
      "guide": {
        "title": "移行ステップ",
        "steps": [
          {
            "title": "現状評価",
            "description": "現在使用しているAIサービスとAPI呼び出し方法を分析"
          },
          {
            "title": "GPT-Loadデプロイ",
            "description": "クイックスタートガイドに従ってGPT-Loadサービスをデプロイ"
          },
          {
            "title": "設定更新",
            "description": "アプリケーション内のAPIベースアドレスをGPT-Loadに向けるよう修正"
          }
        ]
      },
      "seamless": {
        "title": "シームレス移行",
        "description": "GPT-Loadの設計思想は完全に透明で、移行プロセス中はビジネスロジックを修正する必要がなく、APIエンドポイントアドレスを変更するだけで統一管理と負荷分散の利点を享受できます。"
      }
    },
    "summary": {
      "title": "まとめ",
      "transparent": {
        "title": "透明プロキシ",
        "features": [
          "ネイティブAPIフォーマットを保持",
          "ビジネスコードの修正不要",
          "すべての機能特性をサポート"
        ]
      },
      "unified": {
        "title": "統一管理",
        "features": [
          "マルチサービス統一アクセス",
          "集中キー管理",
          "統一監視アラート"
        ]
      },
      "scalable": {
        "title": "高スケーラブル",
        "features": [
          "負荷分散とフェイルオーバー",
          "水平スケーリングサポート",
          "エンタープライズグレードパフォーマンス"
        ]
      }
    }
  },
  "performance": {
    "title": "パフォーマンス詳解",
    "subtitle": "GPT-Loadは「プロキシパス優先」の高性能設計哲学を採用し、すべての最適化はコアプロキシリクエストの究極の性能と安定性を保障するためです。",
    "coreFeatures": {
      "title": "コアパフォーマンス特性",
      "zeroIO": {
        "title": "ゼロI/O操作",
        "description": "プロキシリクエストの完全メモリ内処理"
      },
      "zeroCopy": {
        "title": "ゼロコピーストリーミング",
        "description": "直接ストリーミングデータ転送"
      },
      "lockFree": {
        "title": "ロックフリー並行処理",
        "description": "効率的なアトミック操作処理"
      },
      "lowResource": {
        "title": "極低リソース使用量",
        "description": "シングルコア128MBメモリで動作"
      }
    },
    "proxyPerformance": {
      "title": "究極のプロキシリクエスト性能",
      "description": "最低レイテンシと最高同時実行性を実現するため、プロキシリクエストのコアパスは「ゼロI/O操作」として設計されています。",
      "inMemory": {
        "title": "完全メモリ内サービス",
        "description": "ルーティングと意思決定に必要なすべてのデータ（グループ設定、キー情報など）は、サービス起動と設定変更時にメモリに事前ロードされます。プロキシリクエスト中にデータベースやディスクアクセスは不要です。"
      },
      "zeroCopyStreaming": {
        "title": "ゼロコピーストリーミング",
        "mechanism": {
          "title": "リアルタイム透過伝送メカニズム",
          "description": "GPT-Loadはリアルタイム透過伝送モードを採用し、上流サービスのデータストリームを中間バッファリング、行別読み取り、内容解析なしでクライアント応答に直接接続します。"
        },
        "comparison": {
          "title": "従来のストリーミング処理との違い",
          "traditional": {
            "label": "❌ 従来の方式",
            "flow": "行読み取り → 解析処理 → バッファ出力"
          },
          "gptLoad": {
            "label": "✅ GPT-Load方式",
            "flow": "上流データストリーム → 直接透過 → クライアント"
          }
        },
        "advantages": {
          "title": "コア優位性",
          "leftColumn": [
            {
              "title": "データパケット切断回避",
              "description": "行別読み取りによる元のデータパケット構造の破損を回避"
            },
            {
              "title": "究極の互換性",
              "description": "SSE、JSONストリーム、バイナリなどすべてのデータ形式を自然にサポート"
            },
            {
              "title": "無制限応答能力",
              "description": "理論的に任意サイズの上流応答データを処理可能"
            }
          ],
          "rightColumn": [
            {
              "title": "ゼロレイテンシ伝送",
              "description": "データ到着即転送、バッファ待機時間なし"
            },
            {
              "title": "極低メモリ使用量",
              "description": "データキャッシュなし、メモリ使用量は応答サイズに無関係"
            },
            {
              "title": "ネイティブ性能体験",
              "description": "応答速度が上流サービスのネイティブ性能に無限に近い"
            }
          ]
        }
      },
      "asyncLogging": {
        "title": "非同期ログ",
        "description": "リクエストログの記録は遅延非同期書き込み戦略を採用し、リクエスト-応答ライフサイクルから完全に分離され、ログ操作がリアルタイムプロキシ性能に干渉しないことを保証します。"
      }
    },
    "resourceManagement": {
      "title": "動的リソースと並行管理",
      "httpReuse": {
        "title": "効率的なHTTPクライアント再利用",
        "features": [
          "各グループに独立した、再利用可能な基盤接続を持つHTTPクライアントインスタンスを維持",
          "グループ設定（タイムアウトなど）が変更されると、システムはリアルタイムで動的に新しいクライアントインスタンスを生成し、設定の即時有効性を保証"
        ]
      },
      "atomicOperations": {
        "title": "アトミック操作とロックフリー設計",
        "description": "キーポーリングカウントなどの高頻度並行操作では、sync/atomicパッケージを使用してロックフリープログラミングを行い、ミューテックスロック（Mutex）による性能オーバーヘッドを回避します。"
      }
    },
    "asyncTasks": {
      "title": "非同期タスクとスケーラビリティ",
      "massiveKeys": {
        "title": "大量キーの非同期管理",
        "mechanism": {
          "title": "メカニズム",
          "description": "キーの追加と検証などの操作はすべて非同期バックグラウンドタスクとして実行されます。"
        },
        "advantage": {
          "title": "優位性",
          "description": "管理操作がサービスをブロックせず、理論的にシステムが数百万レベルの大量キーを管理することを可能にします。"
        }
      },
      "clusterSupport": {
        "title": "クラスターサポートと設定同期",
        "architecture": {
          "title": "アーキテクチャ",
          "description": "水平スケーリングのためのマルチノードMaster-Slaveアーキテクチャをサポート。"
        },
        "sync": {
          "title": "同期",
          "redis": "マスターノードの設定変更はRedis Pub/Sub通知でプッシュ",
          "consistency": "スレーブノードは内蔵の設定同期器を通じて更新を監視・取得し、クラスター間設定の最終一貫性を実現"
        }
      }
    },
    "lightweight": {
      "title": "軽量とリソース効率",
      "lowResource": {
        "title": "極低リソース使用量",
        "description": "Go言語の効率的なメモリ管理と上記の性能最適化（ゼロコピー、接続プール再利用など）により、GPT-Loadはコンパイル済みバイナリファイルとして実行され、追加のランタイム依存関係なしで極低リソース使用量を実現します。",
        "cpu": "シングルコアCPU",
        "memory": "128MBメモリ"
      },
      "versatility": {
        "title": "広い適用性",
        "description": "典型的なシングルマシンデプロイメントシナリオでは、低いCPUとメモリのみでサービスのスムーズな動作を保障できます。",
        "scenarios": [
          "大企業の高同時実行シナリオに対応",
          "リソース制限のある個人開発者環境に適合"
        ]
      }
    }
  },
  "configurationPage": {
    "title": "設定説明",
    "subtitle": "GPT-Loadは強力で柔軟な3層設定システムを採用し、異なるシナリオでの設定ニーズに対応します",
    "threeLayerArchitecture": {
      "title": "3層設定システムアーキテクチャ",
      "priorityTitle": "設定優先度",
      "groupConfig": {
        "name": "グループ設定",
        "priority": "最高優先度"
      },
      "systemSettings": {
        "name": "システム設定",
        "priority": "中程度優先度"
      },
      "environmentVars": {
        "name": "環境変数",
        "priority": "基本優先度"
      },
      "managerDescription": "設定システムは",
      "managerFunction": "を通じて設定の読み込み、統合、ホットアップデートを管理します"
    },
    "features": {
      "title": "設定機能",
      "items": [
        "• <strong>3層アーキテクチャ</strong>：環境、システム、グループ",
        "• <strong>優先度上書き</strong>：上位層が下位層を上書き",
        "• <strong>ホットアップデートサポート</strong>：実行時の動的効果",
        "• <strong>設定検証</strong>：厳密なデータ検証"
      ]
    },
    "useCases": {
      "title": "使用シナリオ",
      "items": [
        "• <strong>環境設定</strong>：基本サービスパラメータ",
        "• <strong>システム設定</strong>：グローバルビジネス設定",
        "• <strong>グループ設定</strong>：特定グループのカスタマイズ",
        "• <strong>動的調整</strong>：リアルタイムパフォーマンス最適化"
      ]
    },
    "managementMethods": {
      "title": "管理方法",
      "items": [
        "• <strong>環境変数</strong>：.envファイルまたはシステム環境",
        "• <strong>Web管理</strong>：オンライン設定インターフェース",
        "• <strong>APIインターフェース</strong>：プログラムによる設定管理",
        "• <strong>設定ファイル</strong>：JSON形式のインポート/エクスポート"
      ]
    },
    "bestPractices": {
      "title": "ベストプラクティス",
      "recommendations": {
        "title": "設定管理の推奨事項",
        "items": [
          "• <strong>統一管理</strong>：一貫性を確保するため、プラットフォームのWebインターフェースを使用した集中管理を推奨します。",
          "• <strong>定期監査</strong>：定期的に設定を見直し、使用されなくなったパラメータを削除してシステムを整理します。",
          "• <strong>バージョン管理</strong>：重要な設定変更については、追跡とロールバックのためにバージョン管理システムに記録することを推奨します。"
        ]
      },
      "warnings": {
        "title": "注意事項",
        "items": [
          "• <strong>機密情報</strong>：プロジェクト設定にパスワード、APIキーなどの機密情報を保存しないでください。環境変数を使用してください。",
          "• <strong>ホットアップデートの慎重な使用</strong>：ホットアップデート機能は強力ですが、本番環境で予期しない動作を引き起こさないよう慎重に使用してください。",
          "• <strong>パフォーマンスへの影響</strong>：頻繁な設定変更はシステムパフォーマンスに軽微な影響を与える可能性があります。オフピーク時間での操作を推奨します。"
        ]
      }
    },
    "furtherReading": {
      "title": "詳細情報",
      "environment": {
        "title": "環境設定",
        "description": "環境変数または.envファイルによるインフラストラクチャレベルの設定を確認します。"
      },
      "project": {
        "title": "プロジェクト設定",
        "description": "データベースで管理されるシステムレベルおよびグループレベルの動的設定を探索します。"
      },
      "cloudflareAiGateway": {
        "title": "Cloudflare AI Gateway",
        "description": "Cloudflare AI Gatewayをアップストリームプロキシとして設定し、AIサービスのパフォーマンスを最適化します。"
      }
    }
  },
  "cloudflareAIGateway": {
    "title": "Cloudflare AI Gateway アップストリーム設定",
    "subtitle": "このガイドでは、GPT-LoadのアップストリームプロキシとしてCloudflare AI Gatewayを設定し、Cloudflareのグローバルネットワークを通じてAIサービスリクエストのパフォーマンスと安定性を最適化する方法を説明します。",
    "importantNotice": {
      "title": "重要なお知らせ",
      "description": "Cloudflare AI Gatewayは特定のAIサービスプロバイダーのみをサポートしています。設定前に、必要なAIサービスチャネルがCloudflareのサポートリストに含まれていることを確認してください。APIプラットフォームのドロップダウンリストにチャネルがない場合、そのチャネルは利用できません。"
    },
    "step1": {
      "title": "Cloudflareに登録・ログイン",
      "dashboard": {
        "title": "Cloudflare Dashboardにアクセス",
        "description": "Cloudflare公式サイトでアカウントを登録し、コンソールにログインします"
      }
    },
    "step2": {
      "title": "AI Gateway管理ページにアクセス",
      "navigation": {
        "title": "AI Gatewayに移動",
        "selectMenu": {
          "title": "メニューを選択",
          "description": "左側のナビゲーションバーで順次選択：<strong>AI → AI Gateway</strong>"
        },
        "accessPage": {
          "title": "管理ページにアクセス",
          "description": "AI Gateway管理ページに入ると、現在のゲートウェイリストが表示されます"
        }
      },
      "screenshot": {
        "alt": "Cloudflare AI Gatewayメニューナビゲーションのスクリーンショット"
      }
    },
    "step3": {
      "title": "AI Gatewayを作成",
      "createButton": {
        "title": "ゲートウェイ作成をクリック",
        "description": "AI Gatewayページで<strong>&ldquo;ゲートウェイを作成&rdquo;</strong>ボタンをクリックして新しいゲートウェイの設定を開始します"
      },
      "configuration": {
        "title": "ゲートウェイパラメータを設定",
        "gatewayName": {
          "title": "ゲートウェイ名を設定",
          "note": "名前は任意に設定できます。ここでは&ldquo;gpt-load&rdquo;を例として使用します"
        },
        "defaultSettings": {
          "title": "デフォルト設定を維持",
          "description": "その他の設定項目はデフォルト値のままで構いません"
        },
        "important": {
          "title": "重要な設定項目",
          "items": [
            "• <strong>キャッシュを有効にしない</strong> - CFのキャッシュは一部のチャネルでバグがあります",
            "• <strong>ゲートウェイ認証を有効にしない</strong> - 認証機能は無効のままにしてください"
          ]
        }
      },
      "screenshot": {
        "alt": "Cloudflare AI Gateway作成フォームのスクリーンショット"
      }
    },
    "step4": {
      "title": "チャネルプロキシアドレスを取得",
      "endpoint": {
        "title": "APIエンドポイントを表示",
        "clickAPI": {
          "title": "APIボタンをクリック",
          "description": "作成完了後、右上角の<strong>&ldquo;API&rdquo;</strong>ボタンをクリックします"
        },
        "selectChannel": {
          "title": "対象チャネルを選択",
          "description": "APIプラットフォームのドロップダウンリストで必要なAIサービスプロバイダーを見つけ、対応するプロキシアドレスをコピーします"
        },
        "note": "各AIサービスプロバイダーには対応するプロキシアドレスがあります。正しいチャネルを選択してください"
      },
      "screenshot": {
        "alt": "Cloudflare AI Gateway APIエンドポイントリストのスクリーンショット"
      }
    },
    "step5": {
      "title": "GPT-Loadに設定",
      "configuration": {
        "title": "アップストリームアドレスを追加",
        "copyAddress": {
          "title": "プロキシアドレスをコピー",
          "description": "Cloudflare AI Gatewayから取得したプロキシアドレスを、GPT-Loadの対応するグループのアップストリームアドレス設定にコピーします"
        },
        "example": {
          "title": "アドレス例：",
          "explanation": "ここで<code className=\"bg-gray-100 px-1 rounded\">b7fbxxxxxfdba</code>はあなたのアカウントID、<code className=\"bg-gray-100 px-1 rounded\">gpt-load</code>はゲートウェイ名、<code className=\"bg-gray-100 px-1 rounded\">google-ai-studio</code>は具体的なAIサービスプロバイダーです"
        }
      },
      "screenshot": {
        "title": "GPT-Load設定例",
        "alt": "GPT-LoadでCloudflare AI Gatewayアップストリームアドレスを設定する例のスクリーンショット"
      }
    },
    "geminiNotice": {
      "title": "Geminiチャネル特別注意事項",
      "reminder": "重要なリマインダー",
      "description": "GeminiチャネルタイプをCloudflare AI Gatewayと組み合わせて使用する場合：",
      "items": [
        "<strong>推奨：</strong>Geminiネイティブフォーマットの呼び出しを使用、正常に動作します",
        "<strong>非推奨：</strong>Gemini公式のOpenAIフォーマット呼び出しを使用、出力が文字化けする可能性があります"
      ],
      "recommendation": "これはCloudflare AI Gatewayの既知の問題です。最適な互換性を確保するため、常にGeminiネイティブフォーマットを使用することを推奨します。"
    },
    "networkNotice": {
      "title": "ネットワークルーティング問題のリマインダー",
      "regionalBlock": "地域ブロックについてのリマインダー",
      "description1": "GPT-Loadサーバーが中国本土または香港に位置する場合、Cloudflareはリクエストを香港ノードにルーティングする可能性があります。",
      "description2": "多くのAIサービスプロバイダー（OpenAIなど）がこの地域をサポートしていないため、これにより",
      "description3": "エラーが発生する可能性があります。",
      "solution": "この問題が発生した場合は、サーバーのネットワーク環境を調整してから再試行してください。"
    },
    "verification": {
      "title": "設定を検証",
      "testConnection": "接続をテスト",
      "description": "設定完了後、テストリクエストを送信してプロキシが正常に動作することを確認してください。問題が発生した場合は、Cloudflare AI GatewayのステータスとGPT-Load設定が正しいかを確認してください。"
    },
    "relatedResources": {
      "title": "関連リソース",
      "officialDocs": "Cloudflare AI Gateway公式ドキュメント",
      "gptLoadConfig": "GPT-Load設定ガイド",
      "channelTypes": "チャネルタイプガイド"
    }
  },
  "managementPage": {
    "title": "グループ設定管理",
    "subtitle": "グループ作成と設定の完全ガイド。基本設定、アップストリームアドレス、高級設定などの機能の詳細な設定方法を含みます",
    "basicConfig": {
      "title": "基本設定",
      "groupName": {
        "label": "グループ名",
        "description": "グループの一意識別子で、システム内部での識別と管理に使用。意味のある名前を推奨"
      },
      "displayName": {
        "label": "表示名",
        "description": "グループのフレンドリーな表示名で、フロントエンドインターフェースでの表示に使用し、可読性を向上"
      },
      "channelType": {
        "label": "チャンネルタイプ",
        "description": "アップストリームサービスのタイプ識別子で、API互換性とリクエスト形式を決定"
      },
      "testModel": {
        "label": "テストモデル",
        "description": "接続テストに使用するモデル名で、設定の正確性を確保"
      },
      "proxyKey": {
        "label": "プロキシキー",
        "description": "システムが生成するプロキシキーで、APIアクセス認証に使用。生成とコピー操作をサポート"
      },
      "priority": {
        "label": "優先度重み",
        "description": "グループの優先度重みで、数値が高いほど優先度が高く、ロードバランシング戦略に影響"
      }
    },
    "upstreamConfig": {
      "title": "アップストリームアドレス設定",
      "multiAddress": {
        "title": "マルチアドレスロードバランシング",
        "description": "ロード分散と高可用性を実現するために複数のアップストリームアドレスの設定をサポート。注意：複数のアドレスは同一サービスの異なるアクセスポインであり、異なるサービスプロバイダーではありません。",
        "loadBalancing": "重みベースのラウンドロビンアルゴリズムでリクエストを分散",
        "sameService": "すべてのアドレスは同一アップストリームサービスの異なるノードである必要",
        "weightRoundRobin": "重み付きラウンドロビンをサポートし、スマートなロード分散を実現"
      },
      "configuration": {
        "title": "設定例",
        "weight1": "重み: 1 (メインアドレス)",
        "weight2": "重み: 1 (バックアップアドレス)"
      },
      "features": {
        "title": "機能の利点",
        "highAvailability": "高可用性：単一障害時の自動切り替え",
        "autoFailover": "自動フェイルオーバー：異常ノードの自動除去",
        "performance": "パフォーマンス最適化：近隣ノードアクセスで応答速度向上",
        "monitoring": "リアルタイム監視：ノード状態と応答時間の監視"
      }
    },
    "advancedConfig": {
      "title": "高級設定",
      "groupOverride": {
        "title": "グループ設定オーバーライド",
        "description": "グループレベルの設定パラメータで、グローバルシステム設定よりも高い優先度を持ちます。未設定のパラメータはシステムデフォルト値を使用。",
        "priority": {
          "title": "設定優先度",
          "group": "グループ設定（最高優先度）",
          "system": "システム設定（中程度優先度）",
          "default": "デフォルト設定（最低優先度）"
        },
        "reference": {
          "title": "参考ドキュメント",
          "description": "詳細なオーバーライド可能設定項目はプロジェクト設定ページを参照"
        }
      },
      "customHeaders": {
        "title": "カスタムリクエストヘッダー",
        "functionality": {
          "title": "機能説明",
          "add": "カスタムHTTPリクエストヘッダーの追加",
          "remove": "既存のリクエストヘッダーフィールドの削除",
          "modify": "既存のリクエストヘッダー値の修正"
        },
        "examples": {
          "title": "設定例",
          "auth": "Authorization: Bearer custom-token",
          "userAgent": "User-Agent: GPT-Load/1.0"
        }
      },
      "parameterOverride": {
        "title": "パラメーターオーバーライド",
        "description": "高級JSON形式のリクエストパラメーターオーバーライド機能で、ユーザーリクエスト内の特定パラメーターを強制的にオーバーライド。設定後はすべてのリクエストに自動的にマージ。",
        "format": {
          "title": "JSON形式"
        },
        "useCases": {
          "title": "使用シナリオ",
          "defaultParams": "デフォルトパラメーター値の設定",
          "limitParams": "パラメーター範囲の制限",
          "securityParams": "セキュリティパラメーターの強制"
        }
      }
    },
    "bestPractices": {
      "title": "設定ベストプラクティス",
      "configuration": {
        "title": "設定管理",
        "testing": "設定変更前にテスト環境で検証",
        "backup": "重要な設定変更前に現在の設定をバックアップ",
        "validation": "テスト機能で設定の有効性を検証"
      },
      "security": {
        "title": "セキュリティ推奨",
        "keyRotation": "定期APIキーローテーションでセキュリティを確保",
        "accessControl": "管理インターフェースアクセス権限の制限",
        "monitoring": "異常アクセスとエラーログの監視"
      }
    }
  },
  "environmentConfiguration": {
    "title": "環境設定",
    "characteristics": {
      "title": "設定特点",
      "loadingMethod": {
        "title": "加載方式",
        "items": [
          "• 環境変数または .env ファイルで",
          "• アプリケーション起動時に一度読み込み",
          "• 実行時に変更不可",
          "• 基本設定デフォルト値を提供"
        ]
      },
      "useCase": {
        "title": "適用シーン",
        "items": [
          "• サーバー基本パラメータ設定",
          "• データベース接続情報",
          "• セキュリティ認証キー",
          "• ログと監視設定"
        ]
      }
    },
    "serverConfig": {
      "title": "サーバー設定",
      "table": {
        "configItem": "設定項目",
        "envVar": "環境変数",
        "defaultValue": "デフォルト値",
        "description": "説明"
      },
      "items": [
        {
          "name": "サービスポート",
          "envVar": "PORT",
          "defaultValue": "3001",
          "description": "HTTP サーバーリスニングポート"
        },
        {
          "name": "サービスアドレス",
          "envVar": "HOST",
          "defaultValue": "0.0.0.0",
          "description": "HTTP サーバーバインドアドレス"
        },
        {
          "name": "読み取りタイムアウト",
          "envVar": "SERVER_READ_TIMEOUT",
          "defaultValue": "60",
          "description": "HTTP サーバー読み取りタイムアウト（秒）"
        },
        {
          "name": "書き込みタイムアウト",
          "envVar": "SERVER_WRITE_TIMEOUT",
          "defaultValue": "600",
          "description": "HTTP サーバー書き込みタイムアウト（秒）"
        },
        {
          "name": "アイドルタイムアウト",
          "envVar": "SERVER_IDLE_TIMEOUT",
          "defaultValue": "120",
          "description": "HTTP 接続アイドルタイムアウト（秒）"
        },
        {
          "name": "グレースフルシャットダウンタイムアウト",
          "envVar": "SERVER_GRACEFUL_SHUTDOWN_TIMEOUT",
          "defaultValue": "10",
          "description": "サービスグレースフルシャットダウン待機時間（秒）"
        },
        {
          "name": "スレーブノードモード",
          "envVar": "IS_SLAVE",
          "defaultValue": "false",
          "description": "クラスター展開時のスレーブノード識別子"
        },
        {
          "name": "タイムゾーン",
          "envVar": "TZ",
          "defaultValue": "Asia/Shanghai",
          "description": "タイムゾーンを指定"
        }
      ]
    },
    "authDatabaseConfig": {
      "title": "認証・データベース設定",
      "table": {
        "configItem": "設定項目",
        "envVar": "環境変数",
        "defaultValue": "デフォルト値",
        "description": "説明"
      },
      "items": [
        {
          "name": "管理キー",
          "envVar": "AUTH_KEY",
          "defaultValue": "sk-123456",
          "description": "管理端のアクセス認証キー、強固なパスワードに変更してください"
        },
        {
          "name": "データベース接続",
          "envVar": "DATABASE_DSN",
          "defaultValue": "./data/gpt-load.db",
          "description": "データベース接続文字列（DSN）またはファイルパス"
        },
        {
          "name": "Redis 接続",
          "envVar": "REDIS_DSN",
          "defaultValue": "-",
          "description": "Redis 接続文字列、空の場合はメモリストレージを使用"
        }
      ]
    },
    "performanceCorsConfig": {
      "title": "パフォーマンス・CORS設定",
      "table": {
        "configItem": "設定項目",
        "envVar": "環境変数",
        "defaultValue": "デフォルト値",
        "description": "説明"
      },
      "items": [
        {
          "name": "最大同時リクエスト",
          "envVar": "MAX_CONCURRENT_REQUESTS",
          "defaultValue": "100",
          "description": "システムが許可する最大同時リクエスト数"
        },
        {
          "name": "CORS 有効化",
          "envVar": "ENABLE_CORS",
          "defaultValue": "true",
          "description": "クロスオリジンリソース共有を有効にするかどうか"
        },
        {
          "name": "許可オリジン",
          "envVar": "ALLOWED_ORIGINS",
          "defaultValue": "*",
          "description": "許可されるオリジン、カンマ区切り"
        },
        {
          "name": "許可メソッド",
          "envVar": "ALLOWED_METHODS",
          "defaultValue": "GET,POST,PUT,DELETE,OPTIONS",
          "description": "許可される HTTP メソッド"
        },
        {
          "name": "許可ヘッダー",
          "envVar": "ALLOWED_HEADERS",
          "defaultValue": "*",
          "description": "許可されるリクエストヘッダー、カンマ区切り"
        },
        {
          "name": "認証情報許可",
          "envVar": "ALLOW_CREDENTIALS",
          "defaultValue": "false",
          "description": "認証情報の送信を許可するかどうか"
        }
      ]
    },
    "logConfig": {
      "title": "ログ設定",
      "table": {
        "configItem": "設定項目",
        "envVar": "環境変数",
        "defaultValue": "デフォルト値",
        "description": "説明"
      },
      "items": [
        {
          "name": "ログレベル",
          "envVar": "LOG_LEVEL",
          "defaultValue": "info",
          "description": "ログレベル：debug, info, warn, error"
        },
        {
          "name": "ログフォーマット",
          "envVar": "LOG_FORMAT",
          "defaultValue": "text",
          "description": "ログフォーマット：text, json"
        },
        {
          "name": "ファイルログ有効",
          "envVar": "LOG_ENABLE_FILE",
          "defaultValue": "false",
          "description": "ファイルログ出力を有効にするかどうか"
        },
        {
          "name": "ログファイルパス",
          "envVar": "LOG_FILE_PATH",
          "defaultValue": "./data/logs/app.log",
          "description": "ログファイル保存パス"
        }
      ]
    },
    "proxyConfig": {
      "title": "プロキシ設定",
      "priority": {
        "title": "優先度説明",
        "description": "プロキシ設定は3層優先度をサポート：",
        "fallback": "グループ設定 > システム設定 > 環境設定",
        "envNote": "環境プロキシはグローバルフォールバック設定として機能し、システム設定とグループ設定のどちらもプロキシ設定がない場合のみ有効。"
      },
      "autoRead": "GPT-Load は環境変数からプロキシ設定を自動的に読み取り、上流 AI サービスプロバイダーへのリクエストに使用します。",
      "settings": {
        "title": "プロキシ設定",
        "table": {
          "configItem": "設定項目",
          "envVar": "環境変数",
          "defaultValue": "デフォルト値",
          "description": "説明"
        },
        "items": [
          {
            "name": "HTTP プロキシ",
            "envVar": "HTTP_PROXY",
            "defaultValue": "-",
            "description": "HTTP リクエスト用プロキシサーバーアドレス"
          },
          {
            "name": "HTTPS プロキシ",
            "envVar": "HTTPS_PROXY",
            "defaultValue": "-",
            "description": "HTTPS リクエスト用プロキシサーバーアドレス"
          },
          {
            "name": "プロキシなし",
            "envVar": "NO_PROXY",
            "defaultValue": "-",
            "description": "プロキシアクセスが不要なホストまたはドメイン、カンマ区切り"
          }
        ]
      },
      "formats": {
        "title": "サポートされているプロトコルフォーマット",
        "items": [
          {
            "protocol": "HTTP",
            "format": "http://user:pass@host:port"
          },
          {
            "protocol": "HTTPS",
            "format": "https://user:pass@host:port"
          },
          {
            "protocol": "SOCKS5",
            "format": "socks5://user:pass@host:port"
          }
        ]
      }
    },
    "summary": {
      "title": "環境設定まとめ",
      "description": "環境設定は GPT-Load 設定システムの基盤で、アプリケーションの実行に必要なインフラストラクチャパラメータを提供する主要な役割を担っています。",
      "features": [
        "<strong>基本サービスパラメータ</strong>：アプリケーションの起動と実行が依存するコアサービスを定義し、サーバーポート、データベース接続など。",
        "<strong>管理特性</strong>：<code>.env</code> ファイルまたはオペレーティングシステムの環境変数で設定し、アプリケーション起動時にロードし、設定の安定性と一貫性を保証。",
        "<strong>使用上の利点</strong>：システムに信頼性の高いデフォルト値を提供し、同時に機密情報（データベースパスワード、APIキーなど）をコードベースから分離し、セキュリティを強化。"
      ]
    }
  },
  "projectConfigurationPage": {
    "title": "プロジェクト設定",
    "systemSettings": {
      "title": "システム設定",
      "characteristics": {
        "title": "特徴",
        "storage": {
          "title": "保存方法",
          "database": "データベースに保存",
          "dynamicModification": "動的変更をサポート",
          "hotReload": "ホットリロードをサポート",
          "baseline": "グループ設定のベースラインとして機能"
        },
        "management": {
          "title": "管理方法",
          "webInterface": "Webインターフェース管理",
          "restfulApi": "RESTful APIインターフェース",
          "validation": "設定検証メカニズム",
          "history": "設定履歴記録"
        }
      },
      "table": {
        "headers": {
          "configItem": "設定項目",
          "fieldName": "フィールド名",
          "defaultValue": "デフォルト値",
          "groupOverridable": "グループオーバーライド可能",
          "description": "説明"
        }
      },
      "basicParameters": {
        "title": "基本パラメータ",
        "appUrl": {
          "name": "アプリケーションURL",
          "description": "アプリケーションアクセスの基本アドレス、絶対リンクの生成に使用"
        },
        "proxyKeys": {
          "name": "プロキシキー",
          "defaultValue": "なし",
          "description": "システムレベルのプロキシキー、グループキーで上書き可能"
        },
        "logRetention": {
          "name": "ログ保持日数",
          "description": "データベース内のリクエストログ保持時間"
        },
        "logWriteInterval": {
          "name": "ログ書き込み間隔",
          "description": "リクエストログの一括書き込み時間間隔（分）"
        },
        "enableRequestBodyLogging": {
          "name": "リクエストボディログを有効化",
          "description": "リクエストボディの内容をログに記録するかどうか"
        }
      },
      "requestSettings": {
        "title": "リクエスト設定",
        "requestTimeout": {
          "name": "リクエストタイムアウト",
          "description": "単一リクエストの最大待機時間（秒）"
        },
        "connectTimeout": {
          "name": "接続タイムアウト",
          "description": "接続確立の最大待機時間（秒）"
        },
        "idleConnTimeout": {
          "name": "アイドル接続タイムアウト",
          "description": "接続プール内のアイドル接続のタイムアウト時間（秒）"
        },
        "responseHeaderTimeout": {
          "name": "レスポンスヘッダータイムアウト",
          "description": "レスポンスヘッダーの最大待機時間（秒）"
        },
        "maxIdleConns": {
          "name": "最大アイドル接続数",
          "description": "接続プール内の最大アイドル接続数"
        },
        "maxIdleConnsPerHost": {
          "name": "ホスト毎の最大アイドル接続数",
          "description": "各ホストの最大アイドル接続数"
        },
        "proxyUrl": {
          "name": "プロキシURL",
          "description": "アップストリームにリクエストを送信する際に使用するプロキシサーバーアドレス"
        }
      },
      "keyConfiguration": {
        "title": "キー設定",
        "maxRetries": {
          "name": "最大リトライ回数",
          "description": "単一リクエスト失敗時の最大リトライ回数"
        },
        "blacklistThreshold": {
          "name": "ブラックリスト閾値",
          "description": "キーが連続して失敗する回数でブラックリストに追加"
        },
        "keyValidationInterval": {
          "name": "キー検証間隔",
          "description": "バックグラウンドでキーの有効性を検証する時間間隔（分）"
        },
        "keyValidationConcurrency": {
          "name": "キー検証同時実行数",
          "description": "キー検証の同時実行スレッド数"
        },
        "keyValidationTimeout": {
          "name": "キー検証タイムアウト",
          "description": "個別のキー検証リクエストのタイムアウト時間（秒）"
        }
      },
      "proxyConfigPriority": {
        "title": "プロキシ設定優先度",
        "description": "プロキシ設定は以下の優先順序に従い、上位の設定が下位の設定を上書きします：",
        "hierarchy": "グループプロキシ設定 > システムプロキシ設定 > 環境プロキシ設定",
        "fallback": "グループとシステムの両方でプロキシが設定されていない場合、環境変数のプロキシ設定にフォールバックします。"
      }
    },
    "groupConfiguration": {
      "title": "グループ設定",
      "characteristics": {
        "title": "特徴",
        "highestPriority": {
          "title": "最高優先度",
          "override": "システムと環境設定を上書き",
          "customize": "特定グループのパラメータをカスタマイズ",
          "tuning": "細かい調整をサポート",
          "isolation": "グループ間の設定分離を実現",
          "proxyPriority": "プロキシ設定の最高優先度"
        },
        "flexibility": {
          "title": "柔軟性",
          "jsonFormat": "JSON形式の設定",
          "inheritance": "システムデフォルト値を継承",
          "dynamicCalculation": "ランタイム動的計算",
          "validation": "設定有効性検証"
        }
      },
      "overridableSettings": {
        "title": "オーバーライド可能設定",
        "requestConnection": {
          "title": "リクエスト接続",
          "requestTimeout": "リクエストタイムアウト",
          "connectTimeout": "接続タイムアウト",
          "idleConnTimeout": "アイドル接続タイムアウト",
          "responseHeaderTimeout": "レスポンスヘッダータイムアウト",
          "maxIdleConns": "最大アイドル接続数",
          "maxIdleConnsPerHost": "ホスト毎の最大アイドル接続数",
          "proxyUrl": "プロキシURL"
        },
        "keyManagement": {
          "title": "キー管理",
          "maxRetries": "最大リトライ回数",
          "blacklistThreshold": "ブラックリスト閾値",
          "keyValidationInterval": "キー検証間隔",
          "keyValidationConcurrency": "キー検証同時実行数",
          "keyValidationTimeout": "キー検証タイムアウト",
          "enableRequestBodyLogging": "リクエストボディログを有効化"
        }
      }
    },
    "summary": {
      "title": "まとめ",
      "description": "GPT-Loadの3層設定システムは、異なるシナリオに対して柔軟で強力な設定管理機能を提供します。",
      "roleAndLayering": {
        "title": "役割分層",
        "description": "環境設定はインフラストラクチャパラメータを提供し、システム設定はグローバルビジネスルールを定義し、グループ設定は細かいカスタマイズを可能にします"
      },
      "managementFeatures": {
        "title": "管理機能",
        "description": "Webインターフェース管理、APIインターフェース操作、設定検証、ホットリロードなどの最新の設定管理機能をサポート"
      },
      "proxyConfigPriority": {
        "title": "プロキシ設定優先度",
        "description": "3層プロキシ設定により、グローバルからローカルまでの柔軟なプロキシ戦略を確保し、異なるシナリオでのネットワークニーズに対応"
      },
      "usageAdvantages": {
        "title": "使用上の利点",
        "description": "設定の集中管理、動的調整、バージョン管理、環境分離を実現し、システムの保守性と操作性を大幅に向上"
      }
    }
  },
  "deploymentPage": {
    "title": "デプロイメントガイド",
    "subtitle": "GPT-Loadは様々なシナリオのニーズに対応する複数のデプロイメントオプションを提供しています。軽量なスタンドアロンデプロイメントからエンタープライズグレードのクラスターデプロイメントまで、最適なソリューションをお選びください。",
    "viewDetails": "詳細を見る",
    "standalone": {
      "title": "スタンドアロンデプロイメント",
      "subtitle": "個人や小規模チーム向けの軽量デプロイメント",
      "quickStart": {
        "title": "クイックスタート",
        "description": "Docker Composeでワンクリックデプロイ、SQLite + メモリストレージ"
      },
      "optional": {
        "title": "オプションデプロイメント",
        "description": "MySQL/PostgreSQLとRedisを設定してパフォーマンスを向上"
      }
    },
    "source": {
      "title": "ソースコードデプロイメント",
      "subtitle": "開発者フレンドリー、完全カスタマイズ可能",
      "fullControl": {
        "title": "完全制御",
        "description": "ビルド、設定、デプロイプロセスをカスタマイズ"
      },
      "development": {
        "title": "開発デバッグ",
        "description": "開発環境と機能カスタマイズに適している"
      }
    },
    "cluster": {
      "title": "クラスターデプロイメント",
      "subtitle": "エンタープライズグレードの高可用性ソリューション",
      "masterSlave": {
        "title": "マスター/スレーブアーキテクチャ",
        "description": "水平スケーリングサポート付きの分散デプロイメント"
      },
      "highAvailability": {
        "title": "高可用性",
        "description": "フェイルオーバーとロードバランシング"
      }
    },
    "clawCloud": {
      "title": "Claw Cloud",
      "subtitle": "無料クラウドデプロイソリューション",
      "cloudDeploy": {
        "title": "クラウドデプロイ",
        "description": "サーバー不要、ワンクリックでクラウドにデプロイ"
      },
      "freeQuota": {
        "title": "無料クォータ",
        "description": "月額5ドルの無料クォータ"
      }
    },
    "comparison": {
      "title": "ソリューション比較",
      "headers": {
        "solution": "デプロイメントソリューション",
        "scenario": "適用シナリオ",
        "requirements": "技術要件",
        "performance": "パフォーマンス",
        "complexity": "運用の複雑さ"
      },
      "rows": {
        "standalone": {
          "solution": "スタンドアロンデプロイメント",
          "scenario": "個人、小規模チーム",
          "requirements": "Docker基礎知識",
          "performance": "中程度",
          "complexity": "シンプル"
        },
        "source": {
          "solution": "ソースコードデプロイメント",
          "scenario": "開発＆デバッグ",
          "requirements": "Go開発経験",
          "performance": "高い",
          "complexity": "中程度"
        },
        "cluster": {
          "solution": "クラスターデプロイメント",
          "scenario": "エンタープライズプロダクション",
          "requirements": "K8s/運用経験",
          "performance": "非常に高い",
          "complexity": "複雑"
        },
        "clawCloud": {
          "solution": "Claw Cloud",
          "scenario": "クイック体験",
          "requirements": "GitHubアカウント",
          "performance": "中程度",
          "complexity": "最もシンプル"
        }
      }
    },
    "gettingStarted": {
      "title": "デプロイを開始",
      "description": "GPT-Loadを初めて使用する場合は、最適な学習曲線とクイック体験を提供するスタンドアロンデプロイメントから始めることをお勧めします。",
      "buttons": {
        "standalone": "スタンドアロンクイックデプロイ",
        "clawCloud": "無料クラウド体験"
      }
    }
  },
  "cluster": {
    "title": "クラスターデプロイメント",
    "subtitle": "GPT-Load高可用性クラスターデプロイメントソリューション、マスタースレーブアーキテクチャと水平スケーリングをサポート",
    "overview": {
      "title": "クラスターアーキテクチャ概要",
      "architecture": {
        "title": "分散マスタースレーブアーキテクチャ",
        "description": "ワンマスターマルチスレーブの分散アーキテクチャを採用。マスターノードは管理機能を担当し、スレーブノードはプロキシサービスに専念し、高可用性と負荷分散を実現"
      },
      "components": {
        "master": {
          "title": "マスターノード",
          "description": "Web管理インターフェース、設定管理、統計分析"
        },
        "slave": {
          "title": "スレーブノード",
          "description": "APIプロキシサービスに専念、水平スケーリングをサポート"
        },
        "storage": {
          "title": "共有ストレージ",
          "description": "統一されたMySQLとRedisクラスター"
        }
      }
    },
    "prerequisites": {
      "title": "デプロイメント要件",
      "warning": {
        "title": "重要なお知らせ",
        "description": "クラスターデプロイメント時、データベースとRedisは必須です。分散協調と状態同期に使用されます"
      },
      "infrastructure": {
        "title": "インフラストラクチャ要件",
        "database": {
          "title": "データベースクラスター",
          "items": [
            "• MySQL 8.2+高可用性クラスター",
            "• マスタースレーブレプリケーションまたはGaleraクラスターをサポート",
            "• 読み書き分離の設定を推奨",
            "• 定期的なバックアップと障害復旧メカニズム"
          ]
        },
        "cache": {
          "title": "キャッシュクラスター",
          "items": [
            "• Redisクラスターまたはセンチネルモード",
            "• 分散ロックと状態同期に使用",
            "• 永続化とフェイルオーバーを設定",
            "• メモリ使用量とパフォーマンスを監視"
          ]
        }
      }
    },
    "deploymentSteps": {
      "title": "デプロイメント手順",
      "step1": {
        "title": "共有インフラストラクチャの準備",
        "database": {
          "title": "MySQLクラスター（またはPostgreSQL）のデプロイ",
          "description": "クラウドデータベースクラスターサービスの使用、または独立したMySQL/PostgreSQLクラスターの自己デプロイを推奨します。"
        },
        "redis": {
          "title": "Redisクラスターのデプロイ",
          "description": "Redis Sentinelまたはクラスターモードの使用を推奨し、高可用性とデータ一貫性を確保します。"
        }
      },
      "step2": {
        "title": "ノードdocker-compose.yml内容参考（マスタースレーブノード共通）",
        "dockerCompose": "services:\n  gpt-load:\n    image: ghcr.io/tbphp/gpt-load:latest\n    container_name: gpt-load\n    ports:\n      - \"${PORT:-3001}:${PORT:-3001}\"\n    env_file:\n      - .env\n    restart: always\n    volumes:\n      - ./data:/app/data\n    stop_grace_period: ${SERVER_GRACEFUL_SHUTDOWN_TIMEOUT:-10}s\n    healthcheck:\n      test: wget -q --spider -T 10 -O /dev/null http://localhost:${PORT:-3001}/health\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 40s",
        "slaveConfig": {
          "title": "設定を使用してマスタースレーブノードを区別",
          "code": "IS_SLAVE=true",
          "description1": "マスターノード：設定なしまたはIS_SLAVE=falseに設定。スレーブノード：IS_SLAVE=trueに設定。",
          "description2": "クラスター全体でマスターノードが1つだけであることを確保。"
        }
      },
      "step3": {
        "title": "ロードバランシング設定",
        "description": "Nginxまたは他のロードバランサーを使用して、リクエストを異なるスレーブノードに分散",
        "nginx": {
          "title": "Nginx設定例",
          "config": "# nginx.conf\nupstream gpt_load_cluster {\n    server master-node-ip:3001 weight=3;\n    server slave-node1-ip:3001 weight=5;\n    server slave-node2-ip:3001 weight=5;\n    # 必要に応じてスレーブノードを追加\n}\n\nserver {\n    listen 80;\n    server_name your-domain.com;\n\n    location / {\n        proxy_pass http://gpt_load_cluster;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n\n        # CFや他のプロキシサービスを使用する場合、リアルIPを設定\n        set_real_ip_from 0.0.0.0/0;\n        real_ip_header X-Forwarded-For;\n    }\n}"
        }
      }
    },
    "configurationManagement": {
      "title": "設定管理",
      "unified": {
        "title": "統一設定要件",
        "items": [
          {
            "key": "AUTH_KEY",
            "description": "同一である必要があります（管理キー）"
          },
          {
            "key": "DATABASE_DSN",
            "description": "同一である必要があります"
          },
          {
            "key": "REDIS_DSN",
            "description": "同一である必要があります"
          },
          {
            "key": "IS_SLAVE",
            "description": "スレーブノードはtrueに設定"
          }
        ]
      },
      "dynamic": {
        "title": "動的設定同期",
        "items": [
          "• システム設定はMySQLに保存され自動同期",
          "• グループ設定はすべてのノードにリアルタイム配信",
          "• キー状態はRedisを通じてリアルタイム共有",
          "• 設定変更時にサービス再起動は不要"
        ]
      }
    },
    "monitoring": {
      "title": "監視と運用",
      "healthCheck": {
        "title": "ヘルスチェック",
        "nodeStatus": {
          "title": "ノード健康状態",
          "code": "# ノード状態確認\ncurl http://node:3001/health\n\n# レスポンス例\n{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2025-07-15T12:56:00Z\",\n  \"uptime\": \"11.822967ms\"\n}"
        },
        "clusterStatus": {
          "title": "クラスター状態監視",
          "items": [
            "• 各ノードのリクエスト量とレスポンス時間を監視",
            "• データベースとRedis接続状態を確認"
          ]
        }
      },
      "scaling": {
        "title": "スケーリングと容量管理",
        "scaleOut": {
          "title": "水平スケーリング",
          "items": [
            "• 必要に応じてスレーブノード数を増加",
            "• ロードバランサー設定を更新",
            "• 新しいノードが自動的に設定を同期",
            "• 既存サービスにシームレスに統合"
          ]
        },
        "gracefulShutdown": {
          "title": "グレースフルシャットダウン",
          "items": [
            "• ロードバランサーからノードを削除",
            "• 既存リクエストの処理完了を待機",
            "• コンテナに停止信号を送信",
            "• 関連リソースとログをクリーンアップ"
          ]
        }
      }
    },
    "bestPractices": {
      "title": "ベストプラクティス",
      "recommended": {
        "title": "✅ 推奨事項",
        "items": [
          "• コンテナオーケストレーションツールの使用（Docker Swarm/K8s）",
          "• データベースとRedisの高可用性設定",
          "• 包括的な監視とアラートシステムの設定",
          "• 設定とデータの定期的なバックアップ",
          "• 統一デプロイメント用の設定管理ツールの使用",
          "• ブルーグリーンデプロイメントまたはローリングアップデートの実装"
        ]
      },
      "avoid": {
        "title": "❌ 避けるべき事項",
        "items": [
          "• データベースまたはキャッシュの単一障害点",
          "• ノード間の設定不整合",
          "• ネットワーク遅延と分割問題の無視",
          "• 監視とログ収集の不足",
          "• 大量のノード設定の手動管理",
          "• 本番環境設定の直接変更"
        ]
      }
    }
  },
  "deployment": {
    "source": {
      "title": "ソースコードデプロイメント",
      "subtitle": "ソースコードからGPT-Loadをビルドしてデプロイ。開発者が機能をカスタマイズしてデバッグするのに適しています。完全な制御と柔軟性を提供します。",
      "prerequisites": {
        "title": "環境要件",
        "development": {
          "title": "開発環境",
          "description": "Go開発環境と関連ツールチェーンのローカルインストールが必要"
        },
        "required": {
          "title": "必須ソフトウェア",
          "go": "Go 1.23+ 開発環境",
          "git": "Git バージョン管理ツール",
          "make": "Make ビルドツール",
          "database": "データベースサービス（MySQL/PostgreSQL/SQLite）"
        },
        "optional": {
          "title": "オプションソフトウェア",
          "redis": "Redis キャッシュサービス",
          "nodejs": "Node.js と npm（フロントエンド開発用）",
          "docker": "Docker（コンテナ化テスト用）",
          "ide": "IDE またはエディタ（VS Code/GoLand）"
        }
      },
      "installation": {
        "title": "インストール手順",
        "tip": "ヒント",
        "note": "注意",
        "step1": {
          "title": "ソースコードのクローン",
          "description": "GitHubからGPT-Loadソースコードリポジトリをクローン：",
          "tip": "特定のバージョンが必要な場合は、git checkout v1.x.x を使用して対応するバージョンタグに切り替えてください"
        },
        "step2": {
          "title": "依存関係のインストール",
          "description": "Goモジュールの依存関係をダウンロードしてインストール：",
          "code": "go mod tidy",
          "warning": "ネットワーク接続が安定していることを確認してください。一部の依存関係は海外サーバーからダウンロードする必要がある場合があります"
        },
        "step3": {
          "title": "データベース設定",
          "config": {
            "title": "設定ファイルの作成",
            "code": "cp .env.example .env",
            "description": "サンプル設定ファイルをコピーして環境に応じて変更"
          },
          "database": {
            "title": "データベース接続設定",
            "sqlite": "SQLite（開発用推奨）",
            "sqliteCode": "DATABASE_DSN=./data/gpt-load.db",
            "mysql": "MySQL",
            "mysqlCode": "DATABASE_DSN=root:123456@tcp(mysql:3306)/gpt-load?charset=utf8mb4&parseTime=True&loc=Local",
            "postgresql": "PostgreSQL",
            "postgresqlCode": "DATABASE_DSN=postgres://postgres:123456@postgres:5432/gpt-load?sslmode=disable"
          }
        },
        "step4": {
          "title": "ビルドと実行",
          "frontend": {
            "title": "フロントエンドのビルド",
            "code": "cd web && npm install && npm run build"
          },
          "backend": {
            "title": "バックエンド開発サービスの実行",
            "code": "go run main.go"
          },
          "dev": {
            "title": "フロントエンド開発サービスの実行",
            "code": "cd web && npm run dev"
          }
        }
      },
      "development": {
        "title": "開発ガイド",
        "structure": {
          "title": "プロジェクト構造",
          "root": "gpt-load/",
          "internal": "internal/ # 内部ビジネスロジック",
          "app": "app/ # アプリケーション初期化",
          "channel": "channel/ # チャネルタイプ管理",
          "config": "config/ # 設定管理",
          "container": "container/ # Digコンテナサービス管理",
          "db": "db/ # DB初期化とマイグレーションスクリプト",
          "errors": "errors/ # エラーメッセージ",
          "handler": "handler/ # 管理APIインターフェース",
          "httpclient": "httpclient/ # HTTPクライアントラッパー",
          "keypool": "keypool/ # キープール管理",
          "middleware": "middleware/ # ミドルウェア",
          "models": "models/ # データモデル",
          "proxy": "proxy/ # プロキシサービス",
          "response": "response/ # レスポンスラッパー",
          "router": "router/ # ルーティング",
          "services": "services/ # ビジネスロジック層",
          "store": "store/ # 統一メモリ",
          "syncer": "syncer/ # クラスター同期器",
          "types": "types/ # 型定義",
          "utils": "utils/ # ユーティリティ関数",
          "version": "version/ # バージョン定数",
          "web": "web/ # フロントエンドリソース",
          "gomod": "go.mod # Goモジュール定義",
          "envexample": ".env.example # 設定例",
          "dockercompose": "docker-compose.yml # 設定例",
          "dockerfile": "Dockerfile # 設定例",
          "makefile": "Makefile # ビルドルール",
          "maingo": "main.go # エントリープログラム"
        }
      },
      "troubleshooting": {
        "title": "トラブルシューティング",
        "error": "エラーメッセージ",
        "solution": "解決方法",
        "common": {
          "title": "よくある問題",
          "goVersion": {
            "title": "Goバージョンが低すぎる",
            "error": "go version go1.xx.x: minimum supported version is go1.23",
            "solution": "Goバージョンを1.23以上にアップグレード"
          },
          "dependency": {
            "title": "依存関係のダウンロード失敗",
            "cause": "考えられる原因：ネットワーク接続の問題またはプロキシ設定",
            "codeComment": "# Goプロキシを設定",
            "code": "go env -w GOPROXY=https://goproxy.cn,direct"
          }
        }
      },
      "nextSteps": {
        "title": "次のステップ",
        "description": "ソースコードデプロイメントが完了したら、以下のことができます：",
        "customize": "コード構造を深く理解し、機能をカスタマイズ",
        "contribute": "オープンソースプロジェクトに参加し、プルリクエストを提出",
        "docker": "カスタムDockerイメージをビルド",
        "cicd": "CI/CDパイプラインに統合",
        "configurationGuide": "設定ガイド",
        "systemArchitecture": "システムアーキテクチャ"
      }
    }
  },
  "integrations": {
    "title": "統合ガイド",
    "description": "GPT-Loadは様々なAIアプリケーションと開発ツールとの統合をサポートします。統一されたプロキシインターフェースを通じて、複数のAIサービスをお気に入りのアプリケーションに簡単に統合し、負荷分散とフェイルオーバーを実現できます。",
    "advantages": {
      "title": "統合の利点",
      "items": [
        {
          "title": "統一インターフェース",
          "description": "一度の設定で複数のAIサービスをサポート"
        },
        {
          "title": "負荷分散",
          "description": "自動的にリクエストを分散して可用性を向上"
        },
        {
          "title": "フェイルオーバー",
          "description": "サービス異常時に自動的にバックアップに切り替え"
        }
      ]
    },
    "integrations": [
      {
        "name": "Roo Code",
        "description": "複数のAIモデルをサポートするインテリジェントコードアシスタント",
        "status": "available",
        "icon": "Code2",
        "href": "/docs/integrations/roo-code",
        "category": "開発ツール"
      },
      {
        "name": "New API",
        "description": "複数のAIモデルをサポートするモダンAPI開発プラットフォーム",
        "status": "available",
        "icon": "Globe",
        "href": "/docs/integrations/new-api",
        "category": "APIツール"
      },
      {
        "name": "Cherry Studio",
        "description": "複数のAIモデルをサポートするデスクトップAIチャットアプリケーション",
        "status": "available",
        "icon": "Sparkles",
        "href": "/docs/integrations/cherry-studio",
        "category": "デスクトップアプリケーション"
      },
      {
        "name": "Claude Code Router",
        "description": "マルチモデル切り替えをサポートするインテリジェントコードルーティングツール",
        "status": "available",
        "icon": "Terminal",
        "href": "/docs/integrations/claude-code-router",
        "category": "開発ツール"
      }
    ],
    "categories": [
      {
        "title": "開発ツール",
        "description": "様々な開発ツールやIDEとの統合",
        "items": []
      },
      {
        "title": "APIツール",
        "description": "API開発とテストプラットフォームとの統合",
        "items": []
      },
      {
        "title": "デスクトップアプリケーション",
        "description": "デスクトップAIアプリケーションのアクセス設定",
        "items": []
      }
    ],
    "status": {
      "available": "利用可能",
      "comingSoon": "近日公開"
    },
    "viewGuide": "統合ガイドを表示",
    "comingSoon": "近日公開",
    "contribution": {
      "title": "統合ガイドに貢献",
      "description": "GPT-Loadを他のアプリケーションに統合できた場合は、ぜひ統合ガイドに貢献してください。これにより、より多くのユーザーが恩恵を受けることができます。",
      "githubLink": "GitHubで貢献"
    }
  },
  "claudeCodeRouter": {
    "title": "Claude Code Router 統合ガイド",
    "description": "このガイドは、GPT-LoadプロキシサービスをClaude Code Routerツールと統合する方法を説明します。マルチモデルインテリジェントルーティングとコードアシスタンス機能を有効にします。",
    "prerequisites": {
      "title": "前提条件",
      "items": [
        "GPT-Loadサービスが正常にデプロイされ、起動していることを確認してください。デフォルトでは http://localhost:3001 で実行されます",
        "Node.jsとnpm環境がインストールされていること"
      ]
    },
    "installation": {
      "title": "ツールのインストール",
      "globalInstall": {
        "title": "必要なコンポーネントのグローバルインストール"
      },
      "claudeCode": {
        "title": "Claude Code のインストール",
        "command": "npm install -g @anthropic-ai/claude-code"
      },
      "claudeCodeRouter": {
        "title": "Claude Code Router のインストール",
        "command": "npm install -g @musistudio/claude-code-router"
      },
      "reference": {
        "title": "参考ドキュメント：",
        "url": "https://github.com/musistudio/claude-code-router/blob/main/README_zh.md",
        "text": "Claude Code Router 公式ドキュメント"
      }
    },
    "configuration": {
      "title": "設定ファイルのセットアップ",
      "createConfig": {
        "title": "設定ファイルの作成"
      },
      "configPath": {
        "title": "設定ファイルのパス",
        "path": "~/.claude-code-router/config.json",
        "note": "ディレクトリが存在しない場合は、まずディレクトリ構造を作成してください"
      },
      "configExample": {
        "title": "設定例",
        "content": "{\n  \"Providers\": [\n    {\n      \"name\": \"gpt-load-openai\",\n      \"api_base_url\": \"http://localhost:3001/proxy/openai/v1/chat/completions\",\n      \"api_key\": \"sk-123456\",\n      \"models\": [\n        \"gpt-4.1-mini\",\n        \"gpt-4.1-nano\"\n      ]\n    },\n    {\n      \"name\": \"gpt-load-gemini\",\n      \"api_base_url\": \"http://localhost:3001/proxy/gemini/v1beta/models/\",\n      \"api_key\": \"sk-123456\",\n      \"models\": [\n        \"gemini-2.5-pro\",\n        \"gemini-2.5-flash\"\n      ],\n      \"transformer\": {\n        \"use\": [\n          \"gemini\"\n        ]\n      }\n    },\n    {\n      \"name\": \"gpt-load-gemini-openai\",\n      \"api_base_url\": \"http://localhost:3001/proxy/gemini/v1beta/openai/chat/completions\",\n      \"api_key\": \"sk-123456\",\n      \"models\": [\n        \"gemini-2.5-pro\",\n        \"gemini-2.5-flash\"\n      ]\n    },\n    {\n      \"name\": \"gpt-load-anthropic\",\n      \"api_base_url\": \"http://localhost:3001/proxy/anthropic/v1/messages\",\n      \"api_key\": \"sk-123456\",\n      \"models\": [\n        \"claude-sonnet-4-20250514\",\n        \"claude-3-haiku-20240307\"\n      ],\n      \"transformer\": {\n        \"use\": [\n          \"Anthropic\"\n        ]\n      }\n    }\n  ],\n  \"Router\": {\n    \"default\": \"gpt-load-gemini,gemini-2.5-pro\",\n    \"background\": \"gpt-load-gemini,gemini-2.5-flash\",\n    \"think\": \"gpt-load-gemini,gemini-2.5-pro\",\n    \"longContext\": \"gpt-load-gemini,gemini-2.5-pro\",\n    \"longContextThreshold\": 60000,\n    \"webSearch\": \"gpt-load-gemini,gemini-2.5-flash\"\n  }\n}"
      }
    },
    "explanation": {
      "title": "設定の説明",
      "providers": {
        "title": "Providers 設定詳細",
        "items": [
          {
            "name": "gpt-load-openai",
            "description": "OpenAI チャネルタイプ",
            "type": "green"
          },
          {
            "name": "gpt-load-gemini",
            "description": "Gemini ネイティブフォーマット",
            "type": "blue"
          },
          {
            "name": "gpt-load-gemini-openai",
            "description": "Gemini OpenAI 互換フォーマット",
            "type": "cyan"
          },
          {
            "name": "gpt-load-anthropic",
            "description": "Anthropic Claude チャネル",
            "type": "purple"
          }
        ],
        "important": {
          "title": "重要な設定注意事項",
          "items": [
            "localhost:3001 を実際の GPT-Load アクセスアドレスに置き換えてください",
            "Providers セクションのプロバイダーを、GPT-Loadで実際に設定したチャネルタイプに合わせて調整してください",
            "パス内の openai、gemini などは、GPT-Loadで設定したグループ名です",
            "モデルリストは、チャネルが実際にサポートするモデルに合わせて調整する必要があります",
            "Anthropic 設定では、transformer.use の値は Anthropic（大文字）にする必要があります"
          ]
        }
      },
      "router": {
        "title": "Router 設定",
        "items": [
          {
            "key": "default",
            "description": "デフォルトモデル"
          },
          {
            "key": "background",
            "description": "バックグラウンドタスク"
          },
          {
            "key": "think",
            "description": "思考モード"
          },
          {
            "key": "longContext",
            "description": "長コンテキスト"
          },
          {
            "key": "webSearch",
            "description": "ウェブ検索"
          }
        ],
        "note": {
          "title": "設定例の説明：",
          "description": "上記の例は主にGeminiモデルを設定しています。必要に応じて、OpenAIやAnthropicモデルなど、他のモデル組み合わせを設定できます。"
        }
      }
    },
    "usage": {
      "title": "起動と使用",
      "launch": {
        "title": "起動コマンド",
        "commandTitle": "Claude Code Router の起動",
        "command": "ccr code",
        "description": "設定が完了したら、このコマンドを使用してClaude Code Routerツールを起動します"
      }
    },
    "verification": {
      "title": "設定の確認",
      "test": {
        "title": "接続テスト",
        "description": "起動が成功したら、基本的なコード関連タスクを実行して、すべてのモデルが正常に応答することを確認してください。問題が発生した場合は、GPT-Loadサービスの状態、設定ファイルの構文、ネットワーク接続を確認してください。"
      }
    },
    "relatedResources": {
      "title": "関連リソース",
      "officialDocs": {
        "url": "https://github.com/musistudio/claude-code-router/blob/main/README_zh.md",
        "text": "Claude Code Router 公式ドキュメント"
      },
      "gptLoadConfig": "GPT-Load 設定ガイド",
      "channelTypes": "チャネルタイプガイド"
    }
  },
  "newApi": {
    "title": "New API 統合ガイド",
    "description": "このガイドは、GPT-LoadプロキシサービスをNew APIプラットフォームと統合する方法を説明します。OpenAI、Gemini、Gemini OpenAI互換、Anthropicのチャネルタイプをサポートします。",
    "prerequisites": {
      "title": "前提条件",
      "description": "GPT-Loadサービスが正常にデプロイされ、起動していることを確認してください（デフォルトでhttp://localhost:3001で実行）"
    },
    "openai": {
      "title": "OpenAI チャネル設定",
      "imageAlt": "New API OpenAI 設定スクリーンショット",
      "configSteps": {
        "title": "設定手順",
        "selectType": {
          "title": "タイプを選択",
          "description": "New APIで「OpenAI」タイプを選択"
        },
        "configKey": {
          "title": "キーを設定",
          "example": "sk-123456",
          "note": "GPT-Loadで設定したプロキシキーを使用"
        },
        "apiAddress": {
          "title": "APIアドレスを設定",
          "example": "http://localhost:3001/proxy/openai",
          "note": "「openai」は、GPT-Loadで設定したグループ名です"
        },
        "addModel": {
          "title": "モデルを追加してテスト",
          "description": "モデルリストを追加し、テスト検証を実行"
        }
      }
    },
    "gemini": {
      "title": "Gemini チャネル設定",
      "imageAlt": "New API Gemini 設定スクリーンショット",
      "configSteps": {
        "title": "設定手順",
        "selectType": {
          "title": "タイプを選択",
          "description": "New APIで「Google Gemini」タイプを選択"
        },
        "configKey": {
          "title": "キーを設定",
          "example": "sk-123456",
          "note": "GPT-Loadで設定したプロキシキーを使用"
        },
        "apiAddress": {
          "title": "APIアドレスを設定",
          "example": "http://localhost:3001/proxy/gemini",
          "note": "「gemini」は、GPT-Loadで設定したグループ名です"
        },
        "modelList": {
          "title": "モデルリスト設定",
          "description": "New APIのGeminiタイプのモデルリスト取得にバグがあるため、新規作成時は手動でモデル名を入力することをお勧めします"
        }
      },
      "modelListNotice": {
        "title": "モデルリスト取得について",
        "description": "New APIのGeminiタイプは新規チャネル作成時にモデルリストを自動取得できない場合があります。最初に手動でモデル名を入力することをお勧めします。作成後、編集モードでは通常正常にモデルリストを取得できます。"
      }
    },
    "geminiThinking": {
      "title": "Gemini 思考設定",
      "imageAlt": "New API Gemini 思考設定スクリーンショット",
      "config": {
        "title": "思考機能セットアップ",
        "enableAdaptation": {
          "title": "思考適応を有効にする",
          "description": "New APIのシステム設定 → モデル関連設定で「Gemini思考サフィックス適応を有効にする」を選択"
        },
        "useSuffix": {
          "title": "思考サフィックスを使用",
          "enableSuffix": "-thinking",
          "enableDescription": "思考モードを有効にする",
          "disableSuffix": "-nothinking",
          "disableDescription": "思考モードを無効にする",
          "note": "注意：gemini-2.5-proモデルは思考機能を無効にできません"
        }
      },
      "warning": {
        "title": "重要な注意",
        "description": "New APIで思考機能を設定した後、競合を避けるためGPT-Loadのパラメータオーバーライドで思考関連パラメータを再設定しないでください。"
      }
    },
    "geminiSearch": {
      "title": "Gemini 検索機能設定",
      "config": {
        "title": "公式検索ツールを有効にする",
        "configChoice": {
          "title": "設定の選択",
          "description": "検索モデルはNew APIまたはGPT-Loadのいずれかで設定できます（一方でのみ設定）"
        },
        "parameterConfig": {
          "title": "パラメータ設定",
          "description": "パラメータオーバーライドに以下の設定を追加：",
          "example": "{\n  \"tools\": [\n    {\n      \"google_search\": {}\n    }\n  ]\n}",
          "note": "設定完了後、公式検索ツール機能が有効になります"
        }
      }
    },
    "geminiOpenAI": {
      "title": "Gemini OpenAI 互換フォーマット",
      "imageAlt": "New API Gemini OpenAI 互換フォーマット設定スクリーンショット",
      "configSteps": {
        "title": "設定手順",
        "selectType": {
          "title": "タイプを選択",
          "description": "New APIで「カスタムチャネル」タイプを選択"
        },
        "configKey": {
          "title": "キーを設定",
          "example": "sk-123456",
          "note": "GPT-Loadで設定したプロキシキーを使用"
        },
        "fullAddress": {
          "title": "完全なアドレスを設定",
          "example": "http://localhost:3001/proxy/gemini/v1beta/openai/chat/completions",
          "note": "「gemini」は、GPT-Loadで設定したグループ名です"
        },
        "manualModel": {
          "title": "手動でモデルを追加",
          "description": "互換フォーマットではモデルリストを自動取得できないため、手動でモデル名を入力する必要があります"
        }
      },
      "limitation": {
        "title": "互換モードの制限",
        "description": "OpenAI互換モードを使用する場合、思考と検索パラメータは設定できません。これらの高度な機能が必要な場合は、ネイティブGeminiタイプを使用してください。"
      }
    },
    "anthropic": {
      "title": "Anthropic (Claude) チャネル設定",
      "imageAlt": "New API Anthropic 設定スクリーンショット",
      "configSteps": {
        "title": "設定手順",
        "selectType": {
          "title": "タイプを選択",
          "description": "New APIで「Anthropic Claude」タイプを選択"
        },
        "configKey": {
          "title": "キーを設定",
          "example": "sk-123456",
          "note": "GPT-Loadで設定したプロキシキーを使用"
        },
        "apiAddress": {
          "title": "APIアドレスを設定",
          "example": "http://localhost:3001/proxy/anthropic",
          "note": "「anthropic」は、GPT-Loadで設定したグループ名です"
        }
      }
    },
    "importantNotes": {
      "title": "重要な注意事項",
      "configuration": {
        "title": "設定に関する注意",
        "items": [
          "例のGPT-Loadアクセスアドレスを実際のサービスアドレスに置き換えてください",
          "パス内のグループ名（openai、gemini、anthropicなど）は、GPT-Loadでの実際の設定と一致させる必要があります",
          "まず小規模でテスト設定を行い、確認後に正式に使用することをお勧めします"
        ]
      }
    },
    "relatedResources": {
      "title": "関連リソース",
      "newApiDocs": {
        "url": "https://www.newapi.ai/getting-started/",
        "text": "New API 公式ドキュメント"
      },
      "gptLoadConfig": "GPT-Load 設定ガイド",
      "channelTypes": "チャネルタイプガイド"
    }
  },
  "cherryStudio": {
    "title": "Cherry Studio 統合ガイド",
    "description": "このガイドは、GPT-LoadプロキシサービスをCherry Studio AIクライアントと統合する方法を説明します。OpenAI、Gemini、Gemini OpenAI互換、Anthropicの4つのチャネルタイプの完全な設定をサポートします。",
    "prerequisites": {
      "title": "前提条件",
      "description": "GPT-Loadサービスが正常にデプロイされ、起動していることを確認してください。デフォルトでは http://localhost:3001 で実行されます"
    },
    "generalSteps": {
      "title": "一般的なセットアップ手順",
      "serviceLocation": {
        "title": "サービス設定場所",
        "step1": {
          "title": "設定ページにアクセス",
          "description": "Cherry Studioの左下角の「設定」→「モデルサービス」をクリック"
        },
        "step2": {
          "title": "新しいサービスを追加",
          "description": "ページ下部の「追加」ボタンをクリック（リストの既存サービスは使用しないでください）"
        },
        "step3": {
          "title": "設定後にモデルを取得",
          "description": "「管理」ボタンをクリックして、モデルリストを取得し、必要なモデルを選択"
        }
      },
      "reminder": {
        "title": "重要な注意事項",
        "description": "すべてのチャネルタイプは同じセットアッププロセスに従います：プロバイダータイプの選択 → APIアドレスとキーの設定 → モデルリストの取得。プロバイダータイプとAPIアドレス設定のみが異なります。"
      }
    },
    "openai": {
      "title": "OpenAI チャネル設定",
      "create": {
        "title": "ステップ1：サービス作成",
        "stepsTitle": "作成手順",
        "step1": {
          "title": "サービス名を入力",
          "description": "サービスに識別しやすい名前を設定"
        },
        "step2": {
          "title": "プロバイダータイプを選択",
          "description": "プロバイダータイプドロップダウンからOpenAIを選択"
        },
        "imageAlt": "Cherry Studio OpenAIサービス作成スクリーンショット"
      },
      "config": {
        "title": "ステップ2：サービス設定",
        "parametersTitle": "設定パラメータ",
        "apiKey": {
          "title": "APIキーを設定",
          "description": "GPT-Loadで設定したプロキシキーを使用"
        },
        "apiUrl": {
          "title": "APIアドレスを設定",
          "description": "ここで「openai」はGPT-Loadで設定したグループ名です"
        },
        "models": {
          "title": "モデルリストを取得",
          "description": "設定完了後、「管理」ボタンをクリックして必要なモデルを取得・選択"
        },
        "imageAlt": "Cherry Studio OpenAIサービス設定スクリーンショット"
      }
    },
    "gemini": {
      "title": "Gemini チャネル設定",
      "create": {
        "title": "ステップ1：サービス作成",
        "stepsTitle": "作成手順",
        "step1": {
          "title": "サービス名を入力",
          "description": "Geminiサービスに識別しやすい名前を設定"
        },
        "step2": {
          "title": "プロバイダータイプを選択",
          "description": "プロバイダータイプドロップダウンからGeminiを選択"
        },
        "imageAlt": "Cherry Studio Geminiサービス作成スクリーンショット"
      },
      "config": {
        "title": "ステップ2：サービス設定",
        "parametersTitle": "設定パラメータ",
        "apiKey": {
          "title": "APIキーを設定",
          "description": "GPT-Loadで設定したプロキシキーを使用"
        },
        "apiUrl": {
          "title": "APIアドレスを設定",
          "description": "ここで「gemini」はGPT-Loadで設定したグループ名です"
        },
        "models": {
          "title": "モデルリストを取得",
          "description": "設定完了後、「管理」ボタンをクリックして必要なモデルを取得・選択"
        },
        "imageAlt": "Cherry Studio Geminiサービス設定スクリーンショット"
      }
    },
    "geminiOpenai": {
      "title": "Gemini OpenAI 互換フォーマット",
      "create": {
        "title": "ステップ1：サービス作成",
        "subtitle": "GeminiチャネルのOpenAI互換インターフェースフォーマットを使用",
        "stepsTitle": "作成手順",
        "step1": {
          "title": "サービス名を入力",
          "description": "Gemini OpenAI互換サービスの名前を設定"
        },
        "step2": {
          "title": "プロバイダータイプを選択",
          "description": "互換インターフェースをサポートするためOpenAIタイプを使用"
        },
        "imageAlt": "Cherry Studio Gemini OpenAI互換サービス作成スクリーンショット"
      },
      "config": {
        "title": "ステップ2：サービス設定",
        "parametersTitle": "設定パラメータ",
        "apiKey": {
          "title": "APIキーを設定",
          "description": "GPT-Loadで設定したプロキシキーを使用"
        },
        "apiUrl": {
          "title": "APIアドレスを設定",
          "description": "注意：Cherry Studioがv1パスを自動追加しないよう、アドレスは「/」で終わる必要があります"
        },
        "models": {
          "title": "モデルリストを取得",
          "description": "設定完了後、「管理」ボタンをクリックして必要なモデルを取得・選択"
        },
        "imageAlt": "Cherry Studio Gemini OpenAI互換サービス設定スクリーンショット"
      },
      "warning": {
        "title": "重要な設定注意",
        "description": "APIアドレスは「/」で終わる必要があります！これはCherry Studioの規則要件で、v1パスが自動追加されないようにし、互換インターフェースが正常に動作することを保証します。"
      }
    },
    "anthropic": {
      "title": "Anthropic (Claude) チャネル設定",
      "create": {
        "title": "ステップ1：サービス作成",
        "stepsTitle": "作成手順",
        "step1": {
          "title": "サービス名を入力",
          "description": "Anthropicサービスに識別しやすい名前を設定"
        },
        "step2": {
          "title": "プロバイダータイプを選択",
          "description": "プロバイダータイプドロップダウンからAnthropicを選択"
        },
        "imageAlt": "Cherry Studio Anthropicサービス作成スクリーンショット"
      },
      "config": {
        "title": "ステップ2：サービス設定",
        "parametersTitle": "設定パラメータ",
        "apiKey": {
          "title": "APIキーを設定",
          "description": "GPT-Loadで設定したプロキシキーを使用"
        },
        "apiUrl": {
          "title": "APIアドレスを設定",
          "description": "ここで「anthropic」はGPT-Loadで設定したグループ名です"
        },
        "models": {
          "title": "モデルリストを取得",
          "description": "設定完了後、「管理」ボタンをクリックして必要なモデルを取得・選択"
        },
        "imageAlt": "Cherry Studio Anthropicサービス設定スクリーンショット"
      }
    },
    "importantNotes": {
      "title": "重要な注意事項",
      "configurationNotes": {
        "title": "設定に関する考慮事項",
        "items": [
          "例のGPT-Loadアクセスアドレスを実際のサービスアドレスに置き換えてください",
          "パス内のグループ名（openai、gemini、anthropicなど）は、GPT-Loadの実際の設定と一致する必要があります",
          "GPT-Loadで設定した実際のプロキシキーを使用し、例のsk-123456は使用しないでください",
          "設定完了後、チャットインターフェースで新しく追加したモデルを選択してテストすることを忘れずに"
        ]
      }
    },
    "relatedResources": {
      "title": "関連リソース",
      "cherryStudioDocs": "Cherry Studio 公式ドキュメント",
      "gptLoadConfig": "GPT-Load 設定ガイド",
      "channelTypes": "チャネルタイプドキュメント"
    }
  },
  "introduction": {
    "title": "GPT-Load プロジェクト紹介",
    "subtitle": "複数の AI サービスを統合する必要がある企業や開発者向けに特別に設計された、高性能でエンタープライズグレードの AI インターフェース透明プロキシサービスです。Go 言語で開発され、インテリジェントなキー管理、ロードバランシング、包括的な監視機能を備え、高い並行性を持つ本番環境向けに設計されています。",
    "coreConcept": {
      "title": "コアコンセプト",
      "transparentProxy": {
        "title": "透明プロキシ",
        "description": "GPT-Load は透明プロキシサービスとして機能し、各 AI サービスプロバイダーのネイティブ API フォーマットを完全に保持し、フォーマット変換や統一は行いません。ユーザーが GPT-Load にリクエストする方法は、GPT-Load が上流サービスにリクエストする方法と全く同じで、完全に透明なプロキシ機能を実現します。"
      }
    },
    "supportedServices": {
      "title": "サポートされている AI サービス",
      "openai": {
        "features": [
          "• 公式 OpenAI API",
          "• Azure OpenAI",
          "• OpenAI フォーマット互換のすべてのサードパーティサービス"
        ]
      },
      "gemini": {
        "features": [
          "• Gemini Pro",
          "• Gemini Pro Vision",
          "• マルチモーダル機能のサポート"
        ]
      },
      "claude": {
        "features": [
          "• Claude シリーズモデル",
          "• 高品質な会話生成",
          "• ネイティブ API フォーマットサポート"
        ]
      }
    },
    "coreFeatures": {
      "title": "コア機能",
      "highPerformance": {
        "title": "高性能アーキテクチャ",
        "description": "ゼロコピーストリーミング転送、Go ゴルーチンベースの並行モデル、高並行接続をサポート"
      },
      "keyManagement": {
        "title": "インテリジェントキー管理",
        "description": "グループ管理、動的ローテーション、自動リトライ、高いサービス可用性を保証"
      },
      "loadBalancing": {
        "title": "ロードバランシング",
        "description": "マルチアップストリームサポート、重み設定、ヘルスチェック、利用可能なノードへのインテリジェントルーティング"
      },
      "clusterSupport": {
        "title": "クラスターサポート",
        "description": "マスター/スレーブアーキテクチャ、ステートレス設計、水平スケーリングをサポート"
      },
      "hotReload": {
        "title": "ホットリロード設定",
        "description": "3層設定システム：環境変数、システム設定、グループ設定、ホットアップデートをサポート"
      },
      "adminPanel": {
        "title": "管理パネル",
        "description": "Vue 3 モダンインターフェース、リアルタイム監視、ログ表示、設定管理"
      }
    },
    "techStack": {
      "title": "技術スタック",
      "backend": {
        "title": "バックエンド技術",
        "items": [
          {"name": "Go 1.23+", "desc": "主要プログラミング言語"},
          {"name": "Gin", "desc": "HTTP Web フレームワーク"},
          {"name": "GORM", "desc": "ORM データベース操作フレームワーク"},
          {"name": "MySQL 8.2+", "desc": "主要データベースストレージ"},
          {"name": "Redis", "desc": "分散キャッシュと状態管理"},
          {"name": "Uber Dig", "desc": "依存性注入コンテナ"}
        ]
      },
      "frontend": {
        "title": "フロントエンド & DevOps",
        "items": [
          {"name": "Vue 3", "desc": "フロントエンドフレームワーク"},
          {"name": "TypeScript", "desc": "型安全性"},
          {"name": "Naive UI", "desc": "UI コンポーネントライブラリ"},
          {"name": "Docker", "desc": "コンテナ化デプロイメント"},
          {"name": "Docker Compose", "desc": "コンテナオーケストレーション"},
          {"name": "GitHub Actions", "desc": "CI/CD パイプライン"}
        ]
      }
    },
    "architectureAdvantages": {
      "title": "アーキテクチャの利点",
      "microservices": {
        "title": "マイクロサービスアーキテクチャ",
        "items": [
          "• モジュラー設計",
          "• 依存性注入",
          "• インターフェース駆動"
        ]
      },
      "distributed": {
        "title": "分散設計",
        "items": [
          "• マスター/スレーブモード",
          "• 分散ロック",
          "• キャッシュ同期"
        ]
      },
      "highAvailability": {
        "title": "高可用性",
        "items": [
          "• グレースフル降格",
          "• 障害回復",
          "• リソース保護"
        ]
      }
    },
    "useCases": {
      "title": "ユースケース",
      "enterprise": {
        "title": "エンタープライズ AI サービス",
        "items": [
          "• 大規模 API 呼び出し",
          "• コスト制御最適化",
          "• サービス安定性保証"
        ]
      },
      "developer": {
        "title": "開発者ツール",
        "items": [
          "• 統一 API アクセス",
          "• デバッグと監視",
          "• 迅速なデプロイメント"
        ]
      },
      "multiTenant": {
        "title": "マルチテナントサービス",
        "items": [
          "• テナント分離",
          "• 設定カスタマイズ",
          "• 使用統計"
        ]
      }
    },
    "deepDive": {
      "title": "GPT-Load の詳細",
      "subtitle": "GPT-Load のコア技術アーキテクチャと高性能設計哲学を探求し、究極のプロキシ性能を実現する方法を学びます",
      "performance": {
        "title": "性能詳細",
        "subtitle": "究極の性能設計を理解する",
        "features": [
          "ゼロ I/O 操作プロキシメカニズム",
          "ゼロコピーストリーミング転送技術",
          "ロックフリー並行処理アーキテクチャ",
          "超低リソース使用量最適化"
        ]
      },
      "architecture": {
        "title": "アーキテクチャ設計",
        "subtitle": "システム設計哲学の詳細",
        "features": [
          "インテリジェントキー管理メカニズム",
          "パス処理戦略設計",
          "分散クラスターアーキテクチャ",
          "高可用性保証メカニズム"
        ]
      }
    },
    "gettingStarted": {
      "title": "GPT-Load を始める",
      "description": "Docker Compose で迅速にデプロイし、数分で完全な AI インターフェースプロキシサービスを開始",
      "button": "デプロイメントガイドを見る"
    }
  },
  "rooCode": {
    "title": "Roo Code 統合ガイド",
    "description": "このガイドでは、GPT-Loadプロキシサービスを Roo Code インテリジェントコードアシスタントに統合する方法を説明します。OpenAI、Gemini、Anthropic の3つのチャンネルタイプをサポートしています。",
    "prerequisites": {
      "title": "前提条件",
      "description": "GPT-Loadサービスが正常にデプロイされ、起動していることを確認してください。デフォルトでは http://localhost:3001 で動作します"
    },
    "openai": {
      "title": "OpenAI チャンネル設定",
      "imageAlt": "OpenAI Compatible プロバイダー設定スクリーンショット",
      "steps": {
        "title": "設定手順",
        "selectProvider": {
          "title": "プロバイダーを選択",
          "description": "Roo Code で \"OpenAI Compatible\" プロバイダーを選択"
        },
        "setProxy": {
          "title": "プロキシアドレスを設定",
          "url": "http://localhost:3001/proxy/openai/v1",
          "note": "ここで \"openai\" は GPT-Load で設定したグループ名です"
        },
        "configKey": {
          "title": "API Key を設定",
          "description": "GPT-Load で設定したプロキシキーを入力"
        }
      }
    },
    "gemini": {
      "title": "Gemini チャンネル設定",
      "method1": {
        "title": "方法1：Google Gemini プロバイダー",
        "subtitle": "ネイティブ Gemini インターフェース形式を使用（推奨）",
        "imageAlt": "Google Gemini プロバイダー設定スクリーンショット",
        "steps": {
          "title": "設定手順",
          "selectProvider": {
            "title": "プロバイダーを選択",
            "description": "Roo Code で \"Google Gemini\" プロバイダーを選択"
          },
          "enableCustomUrl": {
            "title": "カスタムベース URL を有効化",
            "description": "\"カスタムベース URL を使用\" オプションにチェック"
          },
          "setProxy": {
            "title": "プロキシアドレスを設定",
            "url": "http://localhost:3001/proxy/gemini",
            "note": "ここで \"gemini\" は GPT-Load で設定したグループ名です"
          },
          "configKey": {
            "title": "API Key を設定",
            "description": "Gemini API Key を入力"
          }
        }
      },
      "method2": {
        "title": "方法2：OpenAI Compatible 形式",
        "subtitle": "OpenAI 互換インターフェース形式を使用",
        "imageAlt": "Gemini OpenAI Compatible プロバイダー設定スクリーンショット",
        "steps": {
          "title": "設定手順",
          "selectProvider": {
            "title": "プロバイダーを選択",
            "description": "Roo Code で \"OpenAI Compatible\" プロバイダーを選択"
          },
          "setProxy": {
            "title": "プロキシアドレスを設定",
            "url": "http://localhost:3001/proxy/gemini/v1beta/openai",
            "note": "ここで \"gemini\" は GPT-Load で設定したグループ名です"
          },
          "configKey": {
            "title": "API Key を設定",
            "description": "Gemini API Key を入力"
          }
        }
      },
      "recommendation": {
        "title": "設定推奨事項",
        "description": "方法1：Google Gemini プロバイダー の使用を推奨します。ネイティブ Gemini インターフェース形式を使用するため、より良い互換性と完全な機能サポートを提供します。"
      }
    },
    "anthropic": {
      "title": "Anthropic (Claude) チャンネル設定",
      "imageAlt": "Anthropic プロバイダー設定スクリーンショット",
      "steps": {
        "title": "設定手順",
        "selectProvider": {
          "title": "プロバイダーを選択",
          "description": "Roo Code で \"Anthropic\" プロバイダーを選択"
        },
        "setProxy": {
          "title": "プロキシアドレスを設定",
          "url": "http://localhost:3001/proxy/anthropic",
          "note": "ここで \"anthropic\" は GPT-Load で設定したグループ名です"
        },
        "configKey": {
          "title": "API Key を設定",
          "description": "Anthropic API Key を入力"
        }
      }
    },
    "verification": {
      "title": "設定を検証",
      "test": {
        "title": "接続テスト",
        "description": "設定完了後、Roo Code でテストメッセージを送信して正常な応答を確認してください。問題が発生した場合は、GPT-Load サービスが正常に動作しているか、グループ名が正しいかを確認してください。"
      }
    },
    "relatedResources": {
      "title": "関連リソース",
      "rooCodeDocs": "Roo Code 公式ドキュメント",
      "gptLoadConfig": "GPT-Load 設定ガイド",
      "channelTypes": "チャンネルタイプドキュメント"
    }
  },
  "sponsor": {
    "title": "スポンサー",
    "subtitle": "GPT-Loadがお役に立ちましたら、作者にコーヒーをおごってください ☕️",
    "paymentMethods": {
      "wechat": {
        "title": "WeChat",
        "description": "QRコードをスキャンしてスポンサー",
        "qrCodeAlt": "WeChat 支払いQRコード",
        "instruction": "WeChatスキャン"
      },
      "alipay": {
        "title": "Alipay",
        "description": "QRコードをスキャンしてスポンサー",
        "qrCodeAlt": "Alipay 支払いQRコード",
        "instruction": "Alipayスキャン"
      }
    },
    "onlinePlatform": {
      "title": "オンラインスポンサープラットフォーム",
      "afdian": {
        "title": "Afdianスポンサー",
        "description": "Afdianプラットフォームを通じて、一回限りのスポンサーまたは定期的なプロジェクト開発支援を選択できます"
      }
    },
    "thankYou": {
      "title": "ご支援いただきありがとうございます",
      "message": "皆様からのご支援は、GPT-Loadを継続的に改善するための原動力です。金額の大小にかかわらず、心より感謝申し上げます！",
      "tags": [
        "💝 すべての気持ちが貴重",
        "🚀 プロジェクトをさらに向上させる",
        "❤️ オープンソース精神万歳"
      ]
    },
    "alternativeSupport": {
      "title": "その他の支援方法",
      "github": {
        "title": "⭐ GitHub Star"
      },
      "issues": {
        "title": "🐛 問題を報告"
      },
      "contribute": {
        "title": "🔧 コードを貢献"
      }
    }
  },
  "contributors": {
    "title": "貢献者",
    "description": "GPT-Loadプロジェクトに貢献してくださったすべての開発者の皆様に感謝いたします！",
    "thanks": {
      "title": "謝辞",
      "message": "GPT-Loadが今日まで発展できたのは、コミュニティの各貢献者の支援があってこそです。コード貢献、問題報告、ドキュメント改善、機能提案など、すべての貢献がプロジェクトの継続的な進歩を推進しています。",
      "note": "プロジェクトはオープンソース協働モデルを採用しており、より多くの開発者の参加を歓迎します！"
    },
    "list": {
      "title": "プロジェクト貢献者",
      "loading": "貢献者情報を読み込み中...",
      "error": "読み込みに失敗しました。しばらくしてから再試行してください",
      "alt": "GPT-Loadプロジェクト貢献者",
      "viewOnGithub": "GitHubで表示"
    },
    "howTo": {
      "title": "貢献方法",
      "codeTitle": "コード貢献",
      "codeItems": [
        "プロジェクトリポジトリをフォーク",
        "機能ブランチを作成",
        "コード変更をコミット",
        "プルリクエストを作成"
      ],
      "otherTitle": "その他の貢献",
      "otherItems": [
        "バグや問題を報告",
        "プロジェクトドキュメントを改善",
        "機能提案を提供",
        "コミュニティディスカッションに参加"
      ]
    },
    "cta": {
      "github": "GitHubにアクセス",
      "issues": "問題を提出"
    }
  },
  "faq": {
    "title": "よくある質問",
    "subtitle": "GPT-Loadの使用中に遭遇する一般的な問題を素早く解決",
    "searchPlaceholder": "質問を検索...",
    "allCategories": "すべてのカテゴリ",
    "noResults": "関連する質問が見つかりません",
    "noResultsDescription": "別のキーワードで検索してみてください",
    "needMoreHelp": "さらなるサポートが必要ですか？",
    "needMoreHelpDescription": "回答が見つからない場合は、GitHub Issuesでお問い合わせください",
    "contactSupport": "技術サポートに連絡",
    "categories": [
      {
        "id": "system",
        "title": "システム設定",
        "icon": "Settings",
        "description": "システム構成と基本パラメータ関連の問題"
      },
      {
        "id": "keys",
        "title": "キー管理",
        "icon": "Shield",
        "description": "キーの設定、ローテーション、障害処理"
      },
      {
        "id": "config",
        "title": "構成管理",
        "icon": "Users",
        "description": "グループ構成とアップストリームアドレスの設定"
      },
      {
        "id": "troubleshoot",
        "title": "トラブルシューティング",
        "icon": "AlertCircle",
        "description": "一般的なエラーと解決策"
      }
    ],
    "items": [
      {
        "id": "blacklist-threshold",
        "category": "system",
        "question": "キーがブラックリストに入るのを防ぐには？",
        "answer": "<p>以下の方法でキーがブラックリストに入るのを防げます：</p><ol><li><strong>ブラックリスト閾値の調整</strong>：<code>システム設定</code>で<code>ブラックリスト閾値</code>を0に設定すると、キーが自動的にブラックリスト化されません</li><li><strong>キーステータスの監視</strong>：定期的にキーのエラー率をチェックし、異常なキーを適時処理</li><li><strong>リトライ回数の適切な設定</strong>：実際のニーズに応じて最大リトライ回数を調整</li></ol><p><strong>注意</strong>：閾値を0に設定すると自動ブラックリスト機能が無効になり、無効なキーを手動で管理する必要があります。</p>",
        "tags": ["ブラックリスト", "キー管理", "システム設定"]
      },
      {
        "id": "group-upstream",
        "category": "config",
        "question": "グループ内の複数のアップストリームアドレスはどのように機能しますか？",
        "answer": "<p>グループとアップストリームアドレスの構成ルール：</p><h4>基本原則</h4><ul><li><strong>同一チャネル</strong>：1つのグループは1つのアップストリームチャネルタイプにのみ対応</li><li><strong>ロードバランシング</strong>：複数のアップストリームアドレスは同じチャネルの異なるアクセスポイントまたはロードアドレス</li><li><strong>キーの互換性</strong>：グループ内のすべてのキーは、構成されたすべてのアップストリームアドレスにリクエスト可能</li></ul><h4>構成例</h4><p><strong>✅ 正しい構成</strong>：Geminiグループに複数のCloudflare AI Gatewayアドレスを構成</p><ul><li>アドレス1：https://gateway.ai.cloudflare.com/account1/gateway1/google-ai-studio</li><li>アドレス2：https://gateway.ai.cloudflare.com/account2/gateway2/google-ai-studio</li></ul><p><strong>❌ 間違った構成</strong>：同じグループに異なるサービスプロバイダーを混在</p><p>異なるアップストリームチャネルを使用する場合は、異なるグループを作成して管理してください。</p>",
        "tags": ["グループ管理", "アップストリーム構成", "ロードバランシング"]
      },
      {
        "id": "delete-error-keys",
        "category": "keys",
        "question": "特定のエラーコードのキーを削除するには？",
        "answer": "<p>以下の手順で問題のあるキーをフィルタリングして削除：</p><ol><li><strong>エラーログのフィルタリング</strong><ul><li>GPT-Load管理インターフェースにアクセス</li><li><code>ログ管理</code>ページに移動</li><li>フィルター機能を使用してエラーコードまたはエラーメッセージでログをフィルタリング</li></ul></li><li><strong>キーリストのエクスポート</strong><ul><li>フィルタリング結果ページで<code>キーをエクスポート</code>ボタンをクリック</li><li>システムはフィルタリングされたログに表示されるすべてのキーをエクスポート</li></ul></li><li><strong>キーの一括削除</strong><ul><li><code>キー管理</code>ページに移動</li><li>ログからエクスポートされた問題のあるキーを選択</li><li>一括削除を実行</li></ul></li></ol><p>この方法により、正常に動作するキーの誤削除を避けながら、問題のあるキーを正確に特定してクリーンアップできます。</p>",
        "tags": ["キー削除", "エラー処理", "ログフィルタリング"]
      },
      {
        "id": "config-priority",
        "category": "config",
        "question": "構成の優先順位は？",
        "answer": "<p>GPT-Loadは3層構成システムを使用し、優先順位は高から低へ：</p><h4>優先順位</h4><ol><li><strong>グループ構成</strong>（最高優先度）<ul><li>特定グループのカスタム構成</li><li>システム設定の任意のパラメータを上書き可能</li><li>JSONフォーマットのパラメータ上書きをサポート</li></ul></li><li><strong>システム設定</strong>（中優先度）<ul><li>グローバルシステムレベルの構成パラメータ</li><li>管理インターフェースまたはAPIを通じて動的に変更</li><li>サービス再起動なしでホットリロードをサポート</li></ul></li><li><strong>環境構成</strong>（基本優先度）<ul><li>環境変数または.envファイルで設定</li><li>サービス起動時にロード、実行時に変更不可</li><li>基本的なデフォルト値とインフラストラクチャ構成を提供</li></ul></li></ol><p><strong>構成マージルール</strong>：上位レベルの構成が下位レベルの構成を上書きし、未構成のパラメータは下位レベルの値を継承。</p>",
        "tags": ["構成優先度", "システム構成", "グループ設定"]
      },
      {
        "id": "service-not-starting",
        "category": "troubleshoot",
        "question": "サービスが起動しない場合の対処法は？",
        "answer": "<p>サービス起動失敗の一般的な原因と解決策：</p><h4>チェック手順</h4><ol><li><strong>ポート占有の確認</strong><ul><li>ポート3001が他のサービスに占有されていないことを確認</li><li><code>PORT</code>環境変数を変更して他のポートを使用可能</li></ul></li><li><strong>データベース接続の確認</strong><ul><li><code>DATABASE_DSN</code>構成が正しいことを確認</li><li>データベースサービスが起動しアクセス可能であることを確認</li></ul></li><li><strong>権限問題の確認</strong><ul><li>Dockerがデータディレクトリにアクセスする十分な権限があることを確認</li><li><code>./data</code>ディレクトリの権限を確認</li></ul></li><li><strong>詳細ログの表示</strong><ul><li><code>docker compose logs -f</code>を使用して詳細なエラー情報を表示</li><li>特定のエラーメッセージに基づいて問題を特定</li></ul></li></ol><h4>一般的な解決策</h4><ul><li>コンテナの再作成：<code>docker compose down && docker compose up -d</code></li><li>データをクリーンして再初期化：<code>./data</code>ディレクトリを削除して再起動</li><li>ネットワーク接続の確認：アップストリームAPIサービスにアクセス可能であることを確認</li></ul>",
        "tags": ["起動失敗", "トラブルシューティング", "Docker", "ポート占有"]
      },
      {
        "id": "api-requests-failing",
        "category": "troubleshoot",
        "question": "APIリクエストが失敗し続ける理由は？",
        "answer": "<p>APIリクエスト失敗のトラブルシューティング手順：</p><h4>基本チェック</h4><ol><li><strong>プロキシキーの確認</strong><ul><li>使用されているAPIキーがGPT-Loadで構成されているものと一致することを確認</li><li>キーフォーマットが正しいか確認</li></ul></li><li><strong>グループ構成の確認</strong><ul><li>グループ名とアップストリームアドレス構成を確認</li><li>グループが有効になっていることを確認</li></ul></li><li><strong>アップストリーム接続のテスト</strong><ul><li>グループ構成ページの「接続テスト」機能を使用</li><li>アップストリームAPIに直接アクセス可能かテスト</li></ul></li></ol><h4>ネットワーク問題のトラブルシューティング</h4><ul><li><strong>プロキシ設定</strong>：正しいHTTP_PROXYまたはHTTPS_PROXYが構成されているか確認</li><li><strong>DNS解決</strong>：アップストリームサービスのドメイン名が正しく解決できることを確認</li><li><strong>ファイアウォール</strong>：ネットワークファイアウォールがアウトバウンド接続をブロックしていないか確認</li></ul><h4>詳細ログの表示</h4><p>管理インターフェースの「ログ管理」で詳細なリクエストログを確認し、特定のエラーコードとメッセージに基づいて問題を特定：</p><ul><li><strong>401/403</strong>：キー認証の問題</li><li><strong>404</strong>：パスまたはモデル構成エラー</li><li><strong>429</strong>：リクエストレート制限</li><li><strong>502/504</strong>：アップストリームサービスに到達不可</li></ul>",
        "tags": ["API失敗", "ネットワーク問題", "認証エラー", "ログ分析"]
      }
    ]
  }
}